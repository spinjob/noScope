{
    "swagger": "2.0",
    "info": {
        "version": "v1.0",
        "title": "Cyclr",
        "description": "Cyclr gives SaaS platforms embedded integration to 100+ apps.",
        "contact": {
            "name": "Cyclr",
            "email": "help@cyclr.com"
        }
    },
    "host": "api.cyclr.com",
    "schemes": [
        "https"
    ],
    "paths": {
        "/v1.0/account/connectors/{accountConnectorId}/customcategories": {
            "get": {
                "tags": [
                    "AccountConnectorCustomCategories"
                ],
                "summary": "List all created custom categories",
                "operationId": "AccountConnectorCustomCategories_All_GET",
                "consumes": [],
                "produces": [
                    "application/json",
                    "text/json",
                    "application/xml",
                    "text/xml"
                ],
                "parameters": [
                    {
                        "name": "X-Cyclr-Account",
                        "in": "header",
                        "description": "ID of Cyclr account",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "accountConnectorId",
                        "in": "path",
                        "description": "Account connector ID",
                        "required": true,
                        "type": "integer",
                        "format": "int32"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/CustomCategoryResponseModel"
                            }
                        }
                    },
                    "400": {
                        "description": "BadRequest"
                    }
                },
                "security": [
                    {
                        "clientcredentials": []
                    },
                    {
                        "oauth2": []
                    }
                ]
            },
            "post": {
                "tags": [
                    "AccountConnectorCustomCategories"
                ],
                "summary": "Create an enhanced object",
                "operationId": "AccountConnectorCustomCategories_Create_POST",
                "consumes": [
                    "application/json",
                    "text/json",
                    "application/xml",
                    "text/xml",
                    "application/x-www-form-urlencoded"
                ],
                "produces": [
                    "application/json",
                    "text/json",
                    "application/xml",
                    "text/xml"
                ],
                "parameters": [
                    {
                        "name": "X-Cyclr-Account",
                        "in": "header",
                        "description": "ID of Cyclr account",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "accountConnectorId",
                        "in": "path",
                        "description": "Account connector ID",
                        "required": true,
                        "type": "integer",
                        "format": "int32"
                    },
                    {
                        "name": "category",
                        "in": "body",
                        "description": "Category",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/CustomCategoryRequestModel"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/CustomCategoryResponseModel"
                        }
                    },
                    "400": {
                        "description": "BadRequest"
                    }
                },
                "security": [
                    {
                        "clientcredentials": []
                    },
                    {
                        "oauth2": []
                    }
                ]
            }
        },
        "/v1.0/account/connectors/{accountConnectorId}/customcategories/{customCategoryId}": {
            "get": {
                "tags": [
                    "AccountConnectorCustomCategories"
                ],
                "summary": "Get a specific created custom category",
                "operationId": "AccountConnectorCustomCategories_One_GET",
                "consumes": [],
                "produces": [
                    "application/json",
                    "text/json",
                    "application/xml",
                    "text/xml"
                ],
                "parameters": [
                    {
                        "name": "X-Cyclr-Account",
                        "in": "header",
                        "description": "ID of Cyclr account",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "accountConnectorId",
                        "in": "path",
                        "description": "Account connector ID",
                        "required": true,
                        "type": "integer",
                        "format": "int32"
                    },
                    {
                        "name": "customCategoryId",
                        "in": "path",
                        "description": "Custom category ID",
                        "required": true,
                        "type": "integer",
                        "format": "int32"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/CustomCategoryResponseModel"
                        }
                    },
                    "400": {
                        "description": "BadRequest"
                    }
                },
                "security": [
                    {
                        "clientcredentials": []
                    },
                    {
                        "oauth2": []
                    }
                ]
            },
            "delete": {
                "tags": [
                    "AccountConnectorCustomCategories"
                ],
                "summary": "Delete a specific created custom category",
                "operationId": "AccountConnectorCustomCategories_Delete_DELETE",
                "consumes": [],
                "produces": [
                    "application/json",
                    "text/json",
                    "application/xml",
                    "text/xml"
                ],
                "parameters": [
                    {
                        "name": "X-Cyclr-Account",
                        "in": "header",
                        "description": "ID of Cyclr account",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "accountConnectorId",
                        "in": "path",
                        "description": "Account connector ID",
                        "required": true,
                        "type": "integer",
                        "format": "int32"
                    },
                    {
                        "name": "customCategoryId",
                        "in": "path",
                        "description": "Custom category ID",
                        "required": true,
                        "type": "integer",
                        "format": "int32"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK"
                    }
                },
                "security": [
                    {
                        "clientcredentials": []
                    },
                    {
                        "oauth2": []
                    }
                ]
            }
        },
        "/v1.0/account/connectors/{accountConnectorId}/customcategories/{customizableCategoryId}/lookup": {
            "get": {
                "tags": [
                    "AccountConnectorCustomCategories"
                ],
                "summary": "Get the lookup values for an enhanced object category",
                "operationId": "AccountConnectorCustomCategories_Lookup_GET",
                "consumes": [],
                "produces": [
                    "application/json",
                    "text/json",
                    "application/xml",
                    "text/xml"
                ],
                "parameters": [
                    {
                        "name": "X-Cyclr-Account",
                        "in": "header",
                        "description": "ID of Cyclr account",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "accountConnectorId",
                        "in": "path",
                        "description": "Account connector ID",
                        "required": true,
                        "type": "integer",
                        "format": "int32"
                    },
                    {
                        "name": "customizableCategoryId",
                        "in": "path",
                        "description": "Category ID",
                        "required": true,
                        "type": "string",
                        "format": "uuid"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/LookupNameValuePair"
                            }
                        }
                    },
                    "400": {
                        "description": "BadRequest"
                    }
                },
                "security": [
                    {
                        "clientcredentials": []
                    },
                    {
                        "oauth2": []
                    }
                ]
            }
        },
        "/v1.0/account/connectors": {
            "get": {
                "tags": [
                    "Account Connectors"
                ],
                "summary": "Gets all installed account connectors",
                "operationId": "AccountConnectors_All_GET",
                "consumes": [],
                "produces": [
                    "application/json",
                    "text/json",
                    "application/xml",
                    "text/xml"
                ],
                "parameters": [
                    {
                        "name": "X-Cyclr-Account",
                        "in": "header",
                        "description": "ID of Cyclr account",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "pageSize",
                        "in": "query",
                        "description": "Page size",
                        "required": false,
                        "type": "integer",
                        "format": "int32"
                    },
                    {
                        "name": "page",
                        "in": "query",
                        "description": "Page number",
                        "required": false,
                        "type": "integer",
                        "format": "int32"
                    },
                    {
                        "name": "orderBy",
                        "in": "query",
                        "description": "The property name to order by",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "sortOrderAsc",
                        "in": "query",
                        "description": "True to sort in ascending order. False for descending order",
                        "required": false,
                        "type": "boolean"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/AccountConnectorModel"
                            }
                        }
                    },
                    "400": {
                        "description": "BadRequest"
                    }
                },
                "security": [
                    {
                        "clientcredentials": []
                    },
                    {
                        "oauth2": []
                    }
                ]
            },
            "post": {
                "tags": [
                    "Account Connectors"
                ],
                "summary": "Creates account connector. Deprecated. Please use Connectors Install instead",
                "operationId": "AccountConnectors_Create_POST",
                "consumes": [
                    "application/json",
                    "text/json",
                    "application/xml",
                    "text/xml",
                    "application/x-www-form-urlencoded"
                ],
                "produces": [
                    "application/json",
                    "text/json",
                    "application/xml",
                    "text/xml"
                ],
                "parameters": [
                    {
                        "name": "X-Cyclr-Account",
                        "in": "header",
                        "description": "ID of Cyclr account",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "model",
                        "in": "body",
                        "description": "Account connector to create",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/AccountConnectorWebRequestModel"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/AccountConnectorModel"
                        }
                    },
                    "400": {
                        "description": "BadRequest"
                    },
                    "404": {
                        "description": "NotFound"
                    }
                },
                "deprecated": true,
                "security": [
                    {
                        "clientcredentials": []
                    },
                    {
                        "oauth2": []
                    }
                ]
            }
        },
        "/v1.0/account/connectors/{id}": {
            "get": {
                "tags": [
                    "Account Connectors"
                ],
                "summary": "Gets account connector by ID",
                "operationId": "AccountConnectors_One_GET",
                "consumes": [],
                "produces": [
                    "application/json",
                    "text/json",
                    "application/xml",
                    "text/xml"
                ],
                "parameters": [
                    {
                        "name": "X-Cyclr-Account",
                        "in": "header",
                        "description": "ID of Cyclr account",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "id",
                        "in": "path",
                        "description": "Account connector ID",
                        "required": true,
                        "type": "integer",
                        "format": "int32"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/AccountConnectorModel"
                        }
                    },
                    "404": {
                        "description": "NotFound"
                    }
                },
                "security": [
                    {
                        "clientcredentials": []
                    },
                    {
                        "oauth2": []
                    }
                ]
            },
            "put": {
                "tags": [
                    "Account Connectors"
                ],
                "summary": "Updates account connector",
                "operationId": "AccountConnectors_Update_PUT",
                "consumes": [
                    "application/json",
                    "text/json",
                    "application/xml",
                    "text/xml",
                    "application/x-www-form-urlencoded"
                ],
                "produces": [
                    "application/json",
                    "text/json",
                    "application/xml",
                    "text/xml"
                ],
                "parameters": [
                    {
                        "name": "X-Cyclr-Account",
                        "in": "header",
                        "description": "ID of Cyclr account",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "id",
                        "in": "path",
                        "description": "Account connector ID",
                        "required": true,
                        "type": "integer",
                        "format": "int32"
                    },
                    {
                        "name": "model",
                        "in": "body",
                        "description": "Account connector to update",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/AccountConnectorWebRequestModel"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/AccountConnectorModel"
                        }
                    },
                    "404": {
                        "description": "NotFound"
                    }
                },
                "security": [
                    {
                        "clientcredentials": []
                    },
                    {
                        "oauth2": []
                    }
                ]
            },
            "delete": {
                "tags": [
                    "Account Connectors"
                ],
                "summary": "Deletes account connector",
                "operationId": "AccountConnectors_Delete_DELETE",
                "consumes": [],
                "produces": [
                    "application/json",
                    "text/json",
                    "application/xml",
                    "text/xml"
                ],
                "parameters": [
                    {
                        "name": "X-Cyclr-Account",
                        "in": "header",
                        "description": "ID of Cyclr account",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "id",
                        "in": "path",
                        "description": "Account connector ID",
                        "required": true,
                        "type": "integer",
                        "format": "int32"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK"
                    },
                    "400": {
                        "description": "BadRequest"
                    },
                    "404": {
                        "description": "NotFound"
                    }
                },
                "security": [
                    {
                        "clientcredentials": []
                    },
                    {
                        "oauth2": []
                    }
                ]
            }
        },
        "/v1.0/account/connectors/{id}/deauthenticate": {
            "put": {
                "tags": [
                    "Account Connectors"
                ],
                "summary": "De-authenticates account connector",
                "operationId": "AccountConnectors_Deauthenticate_PUT",
                "consumes": [],
                "produces": [
                    "application/json",
                    "text/json",
                    "application/xml",
                    "text/xml"
                ],
                "parameters": [
                    {
                        "name": "X-Cyclr-Account",
                        "in": "header",
                        "description": "ID of Cyclr account",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "id",
                        "in": "path",
                        "description": "ID of the account connector to be de-authenticated",
                        "required": true,
                        "type": "integer",
                        "format": "int32"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/AccountConnectorDeauthenticationModel"
                        }
                    },
                    "404": {
                        "description": "NotFound"
                    }
                },
                "security": [
                    {
                        "clientcredentials": []
                    },
                    {
                        "oauth2": []
                    }
                ]
            }
        },
        "/v1.0/account/connectors/{id}/triggers/{triggerId}": {
            "post": {
                "tags": [
                    "Account Connectors"
                ],
                "summary": "Calls a connector trigger",
                "operationId": "AccountConnectors_CallTrigger_POST",
                "consumes": [
                    "application/json",
                    "text/json",
                    "application/xml",
                    "text/xml",
                    "application/x-www-form-urlencoded"
                ],
                "produces": [
                    "application/json",
                    "text/json",
                    "application/xml",
                    "text/xml"
                ],
                "parameters": [
                    {
                        "name": "X-Cyclr-Account",
                        "in": "header",
                        "description": "ID of Cyclr account",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "id",
                        "in": "path",
                        "description": "Account connector ID",
                        "required": true,
                        "type": "integer",
                        "format": "int32"
                    },
                    {
                        "name": "triggerId",
                        "in": "path",
                        "description": "Trigger ID",
                        "required": true,
                        "type": "integer",
                        "format": "int32"
                    },
                    {
                        "name": "model",
                        "in": "body",
                        "description": "Values to use for the fields and parameters",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/MethodCallRequestModel"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/LookupNameValuePair"
                            }
                        }
                    },
                    "400": {
                        "description": "BadRequest"
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "404": {
                        "description": "NotFound"
                    }
                },
                "security": [
                    {
                        "clientcredentials": []
                    },
                    {
                        "oauth2": []
                    }
                ]
            }
        },
        "/v1.0/account/connectors/{id}/methods/{methodId}": {
            "get": {
                "tags": [
                    "Account Connectors"
                ],
                "summary": "Calls a connector method",
                "operationId": "AccountConnectors_CallMethod_GET",
                "consumes": [],
                "produces": [
                    "application/json",
                    "text/json",
                    "application/xml",
                    "text/xml"
                ],
                "parameters": [
                    {
                        "name": "X-Cyclr-Account",
                        "in": "header",
                        "description": "ID of Cyclr account",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "id",
                        "in": "path",
                        "description": "Account connector ID",
                        "required": true,
                        "type": "integer",
                        "format": "int32"
                    },
                    {
                        "name": "methodId",
                        "in": "path",
                        "description": "Method ID or the method unique identifier",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/MethodCallResponseModel"
                        }
                    },
                    "400": {
                        "description": "BadRequest"
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "404": {
                        "description": "NotFound"
                    }
                },
                "security": [
                    {
                        "clientcredentials": []
                    },
                    {
                        "oauth2": []
                    }
                ]
            },
            "post": {
                "tags": [
                    "Account Connectors"
                ],
                "summary": "Calls a connector method",
                "operationId": "AccountConnectors_CallMethod_POST",
                "consumes": [
                    "application/json",
                    "text/json",
                    "application/xml",
                    "text/xml",
                    "application/x-www-form-urlencoded"
                ],
                "produces": [
                    "application/json",
                    "text/json",
                    "application/xml",
                    "text/xml"
                ],
                "parameters": [
                    {
                        "name": "X-Cyclr-Account",
                        "in": "header",
                        "description": "ID of Cyclr account",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "id",
                        "in": "path",
                        "description": "Account connector ID",
                        "required": true,
                        "type": "integer",
                        "format": "int32"
                    },
                    {
                        "name": "methodId",
                        "in": "path",
                        "description": "Method ID or the method unique identifier",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "model",
                        "in": "body",
                        "description": "Values to use for the fields and parameters",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/MethodCallRequestModel"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/MethodCallResponseModel"
                        }
                    },
                    "400": {
                        "description": "BadRequest"
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "404": {
                        "description": "NotFound"
                    }
                },
                "security": [
                    {
                        "clientcredentials": []
                    },
                    {
                        "oauth2": []
                    }
                ]
            }
        },
        "/v1.0/account/connectors/{id}/test/{methodId}": {
            "get": {
                "tags": [
                    "Account Connectors"
                ],
                "summary": "Tests a connector method",
                "operationId": "AccountConnectors_Test_GET",
                "consumes": [],
                "produces": [
                    "application/json",
                    "text/json",
                    "application/xml",
                    "text/xml"
                ],
                "parameters": [
                    {
                        "name": "X-Cyclr-Account",
                        "in": "header",
                        "description": "ID of Cyclr account",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "id",
                        "in": "path",
                        "description": "Account connector ID",
                        "required": true,
                        "type": "integer",
                        "format": "int32"
                    },
                    {
                        "name": "methodId",
                        "in": "path",
                        "description": "Method ID or the method unique identifier",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "includeRawHttp",
                        "in": "query",
                        "description": "Set to true to include the raw HTTP request and response",
                        "required": false,
                        "type": "boolean"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/MethodCallResponseModel"
                        }
                    },
                    "400": {
                        "description": "BadRequest"
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "404": {
                        "description": "NotFound"
                    }
                },
                "security": [
                    {
                        "clientcredentials": []
                    },
                    {
                        "oauth2": []
                    }
                ]
            },
            "post": {
                "tags": [
                    "Account Connectors"
                ],
                "summary": "Tests a connector method",
                "operationId": "AccountConnectors_Test_POST",
                "consumes": [
                    "application/json",
                    "text/json",
                    "application/xml",
                    "text/xml",
                    "application/x-www-form-urlencoded"
                ],
                "produces": [
                    "application/json",
                    "text/json",
                    "application/xml",
                    "text/xml"
                ],
                "parameters": [
                    {
                        "name": "X-Cyclr-Account",
                        "in": "header",
                        "description": "ID of Cyclr account",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "id",
                        "in": "path",
                        "description": "Account connector ID",
                        "required": true,
                        "type": "integer",
                        "format": "int32"
                    },
                    {
                        "name": "methodId",
                        "in": "path",
                        "description": "Method ID or the method unique identifier",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "model",
                        "in": "body",
                        "description": "Values to use for the fields and parameters",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/MethodCallRequestModel"
                        }
                    },
                    {
                        "name": "includeRawHttp",
                        "in": "query",
                        "description": "Set to true to include the raw HTTP request and response",
                        "required": false,
                        "type": "boolean"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/MethodCallResponseModel"
                        }
                    },
                    "400": {
                        "description": "BadRequest"
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "404": {
                        "description": "NotFound"
                    }
                },
                "security": [
                    {
                        "clientcredentials": []
                    },
                    {
                        "oauth2": []
                    }
                ]
            }
        },
        "/v1.0/account/connectors/custom": {
            "get": {
                "tags": [
                    "Account Custom Connectors"
                ],
                "summary": "Gets all of the custom connectors in the account",
                "operationId": "AccountConnectors_CustomAll_GET",
                "consumes": [],
                "produces": [
                    "application/json",
                    "text/json",
                    "application/xml",
                    "text/xml"
                ],
                "parameters": [
                    {
                        "name": "X-Cyclr-Account",
                        "in": "header",
                        "description": "ID of Cyclr account",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "query",
                        "in": "query",
                        "description": "Custom connector name search query",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "page",
                        "in": "query",
                        "description": "Page number",
                        "required": false,
                        "type": "integer",
                        "format": "int32"
                    },
                    {
                        "name": "pageSize",
                        "in": "query",
                        "description": "Page size",
                        "required": false,
                        "type": "integer",
                        "format": "int32"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/CustomConnector"
                            }
                        }
                    }
                },
                "security": [
                    {
                        "clientcredentials": []
                    },
                    {
                        "oauth2": []
                    }
                ]
            },
            "post": {
                "tags": [
                    "Account Custom Connectors"
                ],
                "summary": "Imports a custom connector into an account",
                "operationId": "AccountConnectors_CustomImport_POST",
                "consumes": [
                    "application/json",
                    "text/json",
                    "application/x-www-form-urlencoded"
                ],
                "produces": [
                    "application/json",
                    "text/json",
                    "application/xml",
                    "text/xml"
                ],
                "parameters": [
                    {
                        "name": "X-Cyclr-Account",
                        "in": "header",
                        "description": "ID of Cyclr account",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "json",
                        "in": "body",
                        "description": "The custom connector JSON definition",
                        "required": true,
                        "schema": {
                            "type": "object"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/CustomConnector"
                        }
                    },
                    "400": {
                        "description": "BadRequest"
                    },
                    "404": {
                        "description": "NotFound"
                    }
                },
                "security": [
                    {
                        "clientcredentials": []
                    },
                    {
                        "oauth2": []
                    }
                ]
            }
        },
        "/v1.0/account/connectors/custom/{id}": {
            "get": {
                "tags": [
                    "Account Custom Connectors"
                ],
                "summary": "Exports a custom connector from an account",
                "operationId": "AccountConnectors_CustomExport_GET",
                "consumes": [],
                "produces": [
                    "application/json",
                    "text/json",
                    "application/xml",
                    "text/xml"
                ],
                "parameters": [
                    {
                        "name": "X-Cyclr-Account",
                        "in": "header",
                        "description": "ID of Cyclr account",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "id",
                        "in": "path",
                        "description": "ID of the custom connector to export",
                        "required": true,
                        "type": "integer",
                        "format": "int32"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/CustomConnector"
                        }
                    },
                    "404": {
                        "description": "NotFound"
                    }
                },
                "security": [
                    {
                        "clientcredentials": []
                    },
                    {
                        "oauth2": []
                    }
                ]
            },
            "delete": {
                "tags": [
                    "Account Custom Connectors"
                ],
                "summary": "Deletes a custom connector from an account",
                "operationId": "AccountConnectors_CustomDelete_DELETE",
                "consumes": [],
                "produces": [
                    "application/json",
                    "text/json",
                    "application/xml",
                    "text/xml"
                ],
                "parameters": [
                    {
                        "name": "X-Cyclr-Account",
                        "in": "header",
                        "description": "ID of Cyclr account",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "id",
                        "in": "path",
                        "description": "ID of the custom connector to delete",
                        "required": true,
                        "type": "integer",
                        "format": "int32"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK"
                    },
                    "400": {
                        "description": "BadRequest"
                    },
                    "404": {
                        "description": "NotFound"
                    }
                },
                "security": [
                    {
                        "clientcredentials": []
                    },
                    {
                        "oauth2": []
                    }
                ]
            }
        },
        "/v1.0/account/connectors/{accountConnectorId}/properties": {
            "get": {
                "tags": [
                    "Account Connector Properties"
                ],
                "summary": "Get account connector properties",
                "operationId": "AccountConnectorsProperties_GetProperties_GET",
                "consumes": [],
                "produces": [
                    "application/json",
                    "text/json",
                    "application/xml",
                    "text/xml"
                ],
                "parameters": [
                    {
                        "name": "X-Cyclr-Account",
                        "in": "header",
                        "description": "ID of Cyclr account",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "accountConnectorId",
                        "in": "path",
                        "description": "Account connector ID",
                        "required": true,
                        "type": "integer",
                        "format": "int32"
                    },
                    {
                        "name": "pageSize",
                        "in": "query",
                        "description": "Page size",
                        "required": false,
                        "type": "integer",
                        "format": "int32"
                    },
                    {
                        "name": "page",
                        "in": "query",
                        "description": "Page number",
                        "required": false,
                        "type": "integer",
                        "format": "int32"
                    },
                    {
                        "name": "orderBy",
                        "in": "query",
                        "description": "The property name to order by",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "sortOrderAsc",
                        "in": "query",
                        "description": "True to sort in ascending order. False for descending order",
                        "required": false,
                        "type": "boolean"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/AccountConnectorPropertyModel"
                            }
                        }
                    },
                    "400": {
                        "description": "BadRequest"
                    },
                    "404": {
                        "description": "NotFound"
                    }
                },
                "security": [
                    {
                        "clientcredentials": []
                    },
                    {
                        "oauth2": []
                    }
                ]
            },
            "post": {
                "tags": [
                    "Account Connector Properties"
                ],
                "summary": "Creates account connector property. If an account connector property with the same name already exists, it will get updated",
                "operationId": "AccountConnectorsProperties_CreateProperty_POST",
                "consumes": [
                    "application/json",
                    "text/json",
                    "application/xml",
                    "text/xml",
                    "application/x-www-form-urlencoded"
                ],
                "produces": [
                    "application/json",
                    "text/json",
                    "application/xml",
                    "text/xml"
                ],
                "parameters": [
                    {
                        "name": "X-Cyclr-Account",
                        "in": "header",
                        "description": "ID of Cyclr account",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "accountConnectorId",
                        "in": "path",
                        "description": "Account connector ID",
                        "required": true,
                        "type": "integer",
                        "format": "int32"
                    },
                    {
                        "name": "model",
                        "in": "body",
                        "description": "Account connector property to create",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/AccountConnectorPropertyModel"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/AccountConnectorPropertyModel"
                        }
                    },
                    "404": {
                        "description": "NotFound"
                    }
                },
                "security": [
                    {
                        "clientcredentials": []
                    },
                    {
                        "oauth2": []
                    }
                ]
            }
        },
        "/v1.0/account/connectors/{accountConnectorId}/properties/{id}": {
            "get": {
                "tags": [
                    "Account Connector Properties"
                ],
                "summary": "Gets account connector property by ID",
                "operationId": "AccountConnectorsProperties_GetProperty_GET",
                "consumes": [],
                "produces": [
                    "application/json",
                    "text/json",
                    "application/xml",
                    "text/xml"
                ],
                "parameters": [
                    {
                        "name": "X-Cyclr-Account",
                        "in": "header",
                        "description": "ID of Cyclr account",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "accountConnectorId",
                        "in": "path",
                        "description": "Account connector ID",
                        "required": true,
                        "type": "integer",
                        "format": "int32"
                    },
                    {
                        "name": "id",
                        "in": "path",
                        "description": "Account connector property ID",
                        "required": true,
                        "type": "integer",
                        "format": "int32"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/AccountConnectorPropertyModel"
                        }
                    },
                    "404": {
                        "description": "NotFound"
                    }
                },
                "security": [
                    {
                        "clientcredentials": []
                    },
                    {
                        "oauth2": []
                    }
                ]
            },
            "put": {
                "tags": [
                    "Account Connector Properties"
                ],
                "summary": "Updates account connector property",
                "operationId": "AccountConnectorsProperties_UpdateProperty_PUT",
                "consumes": [
                    "application/json",
                    "text/json",
                    "application/xml",
                    "text/xml",
                    "application/x-www-form-urlencoded"
                ],
                "produces": [
                    "application/json",
                    "text/json",
                    "application/xml",
                    "text/xml"
                ],
                "parameters": [
                    {
                        "name": "X-Cyclr-Account",
                        "in": "header",
                        "description": "ID of Cyclr account",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "accountConnectorId",
                        "in": "path",
                        "description": "Account connector ID",
                        "required": true,
                        "type": "integer",
                        "format": "int32"
                    },
                    {
                        "name": "id",
                        "in": "path",
                        "description": "Account connector property ID",
                        "required": true,
                        "type": "integer",
                        "format": "int32"
                    },
                    {
                        "name": "model",
                        "in": "body",
                        "description": "Account connector property to update",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/AccountConnectorPropertyModel"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/AccountConnectorPropertyModel"
                        }
                    },
                    "404": {
                        "description": "NotFound"
                    }
                },
                "security": [
                    {
                        "clientcredentials": []
                    },
                    {
                        "oauth2": []
                    }
                ]
            },
            "delete": {
                "tags": [
                    "Account Connector Properties"
                ],
                "summary": "Deletes account connector property",
                "operationId": "AccountConnectorsProperties_Delete_DELETE",
                "consumes": [],
                "produces": [
                    "application/json",
                    "text/json",
                    "application/xml",
                    "text/xml"
                ],
                "parameters": [
                    {
                        "name": "X-Cyclr-Account",
                        "in": "header",
                        "description": "ID of Cyclr account",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "accountConnectorId",
                        "in": "path",
                        "description": "Account connector ID",
                        "required": true,
                        "type": "integer",
                        "format": "int32"
                    },
                    {
                        "name": "id",
                        "in": "path",
                        "description": "Account connector property ID",
                        "required": true,
                        "type": "integer",
                        "format": "int32"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK"
                    },
                    "404": {
                        "description": "NotFound"
                    }
                },
                "security": [
                    {
                        "clientcredentials": []
                    },
                    {
                        "oauth2": []
                    }
                ]
            }
        },
        "/v1.0/accounts/tokens": {
            "post": {
                "tags": [
                    "Accounts"
                ],
                "summary": "Creates a one-time token",
                "operationId": "Accounts_CreateOneTimeToken_POST",
                "consumes": [],
                "produces": [
                    "application/json",
                    "text/json",
                    "application/xml",
                    "text/xml"
                ],
                "parameters": [
                    {
                        "name": "X-Cyclr-Account",
                        "in": "header",
                        "description": "ID of Cyclr account",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/OneTimeTokenModel"
                        }
                    },
                    "404": {
                        "description": "NotFound"
                    }
                },
                "deprecated": true,
                "security": [
                    {
                        "clientcredentials": []
                    },
                    {
                        "oauth2": []
                    }
                ]
            }
        },
        "/v1.0/accounts/{id}/signintoken": {
            "post": {
                "tags": [
                    "Accounts"
                ],
                "summary": "Creates a one-time token for the specified user. The user will be created if they do not currently exist",
                "operationId": "Accounts_CreateOneTimeToken_POST",
                "consumes": [
                    "application/json",
                    "text/json",
                    "application/xml",
                    "text/xml",
                    "application/x-www-form-urlencoded"
                ],
                "produces": [
                    "application/json",
                    "text/json",
                    "application/xml",
                    "text/xml"
                ],
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "model",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/AccountSignInTokenRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/OneTimeTokenModel"
                        }
                    },
                    "404": {
                        "description": "NotFound"
                    }
                },
                "security": [
                    {
                        "clientcredentials": []
                    },
                    {
                        "oauth2": []
                    }
                ]
            }
        },
        "/v1.0/accounts": {
            "get": {
                "tags": [
                    "Accounts"
                ],
                "summary": "Gets a list of accounts",
                "operationId": "Accounts_All_GET",
                "consumes": [],
                "produces": [
                    "application/json",
                    "text/json",
                    "application/xml",
                    "text/xml"
                ],
                "parameters": [
                    {
                        "name": "pageSize",
                        "in": "query",
                        "description": "The amount of accounts to return in each page",
                        "required": false,
                        "type": "integer",
                        "format": "int32"
                    },
                    {
                        "name": "page",
                        "in": "query",
                        "description": "The page to get",
                        "required": false,
                        "type": "integer",
                        "format": "int32"
                    },
                    {
                        "name": "sortOrderAsc",
                        "in": "query",
                        "description": "True for ascending; false for descending",
                        "required": false,
                        "type": "boolean"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/AccountResponseModel"
                            }
                        }
                    }
                },
                "security": [
                    {
                        "clientcredentials": []
                    },
                    {
                        "oauth2": []
                    }
                ]
            },
            "post": {
                "tags": [
                    "Accounts"
                ],
                "summary": "Creates a new account",
                "operationId": "Accounts_Create_POST",
                "consumes": [
                    "application/json",
                    "text/json",
                    "application/xml",
                    "text/xml",
                    "application/x-www-form-urlencoded"
                ],
                "produces": [
                    "application/json",
                    "text/json",
                    "application/xml",
                    "text/xml"
                ],
                "parameters": [
                    {
                        "name": "model",
                        "in": "body",
                        "description": "The account to create",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/AccountCreateModel"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/AccountResponseModel"
                        }
                    },
                    "400": {
                        "description": "The request is invalid"
                    }
                },
                "security": [
                    {
                        "clientcredentials": []
                    },
                    {
                        "oauth2": []
                    }
                ]
            }
        },
        "/v1.0/accounts/{id}": {
            "get": {
                "tags": [
                    "Accounts"
                ],
                "summary": "Gets an account by ID",
                "operationId": "Accounts_One_GET",
                "consumes": [],
                "produces": [
                    "application/json",
                    "text/json",
                    "application/xml",
                    "text/xml"
                ],
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "ID of the account to get",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/AccountResponseModel"
                        }
                    },
                    "404": {
                        "description": "No account found with the specified ID"
                    }
                },
                "security": [
                    {
                        "clientcredentials": []
                    },
                    {
                        "oauth2": []
                    }
                ]
            },
            "put": {
                "tags": [
                    "Accounts"
                ],
                "summary": "Updates an existing account",
                "operationId": "Accounts_Update_PUT",
                "consumes": [
                    "application/json",
                    "text/json",
                    "application/xml",
                    "text/xml",
                    "application/x-www-form-urlencoded"
                ],
                "produces": [
                    "application/json",
                    "text/json",
                    "application/xml",
                    "text/xml"
                ],
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "Id of the account to update",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "model",
                        "in": "body",
                        "description": "The account to update",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/AccountUpdateModel"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/AccountResponseModel"
                        }
                    },
                    "400": {
                        "description": "The request is invalid"
                    },
                    "404": {
                        "description": "Account to update could not be found"
                    }
                },
                "security": [
                    {
                        "clientcredentials": []
                    },
                    {
                        "oauth2": []
                    }
                ]
            },
            "delete": {
                "tags": [
                    "Accounts"
                ],
                "summary": "Deletes an account by ID",
                "operationId": "Accounts_Delete_DELETE",
                "consumes": [],
                "produces": [
                    "application/json",
                    "text/json",
                    "application/xml",
                    "text/xml"
                ],
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "ID of the account to delete",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK"
                    },
                    "400": {
                        "description": "Account has sub accounts which must be deleted first"
                    },
                    "404": {
                        "description": "No account found with the specified ID"
                    }
                },
                "security": [
                    {
                        "clientcredentials": []
                    },
                    {
                        "oauth2": []
                    }
                ]
            }
        },
        "/v1.0/accounts/{id}/subaccounts": {
            "get": {
                "tags": [
                    "Accounts"
                ],
                "summary": "Gets the sub accounts for an account",
                "operationId": "Accounts_SubAccounts_GET",
                "consumes": [],
                "produces": [
                    "application/json",
                    "text/json",
                    "application/xml",
                    "text/xml"
                ],
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "ID of the account to get the sub accounts of",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "pageSize",
                        "in": "query",
                        "description": "The amount of sub accounts to return in each page",
                        "required": false,
                        "type": "integer",
                        "format": "int32"
                    },
                    {
                        "name": "page",
                        "in": "query",
                        "description": "The page to get",
                        "required": false,
                        "type": "integer",
                        "format": "int32"
                    },
                    {
                        "name": "sortOrderAsc",
                        "in": "query",
                        "description": "True for ascending; false for descending",
                        "required": false,
                        "type": "boolean"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/AccountResponseModel"
                        }
                    },
                    "404": {
                        "description": "No account found with the specified ID"
                    }
                },
                "security": [
                    {
                        "clientcredentials": []
                    },
                    {
                        "oauth2": []
                    }
                ]
            }
        },
        "/v1.0/accounts/{id}/usage": {
            "get": {
                "tags": [
                    "Accounts"
                ],
                "summary": "Gets the task usage for an account in its current billing period",
                "operationId": "Accounts_Usage_GET",
                "consumes": [],
                "produces": [
                    "application/json",
                    "text/json",
                    "application/xml",
                    "text/xml"
                ],
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "ID of the account to get the usage for",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/AccountTaskUsage"
                        }
                    },
                    "404": {
                        "description": "No account found with the specified ID"
                    }
                },
                "security": [
                    {
                        "clientcredentials": []
                    },
                    {
                        "oauth2": []
                    }
                ]
            }
        },
        "/v1.0/accounts/{id}/launch": {
            "post": {
                "tags": [
                    "Accounts"
                ],
                "summary": "Generates a LAUNCH URL for the account. Will create new account if required",
                "operationId": "Accounts_Launch_POST",
                "consumes": [
                    "application/json",
                    "text/json",
                    "application/xml",
                    "text/xml",
                    "application/x-www-form-urlencoded"
                ],
                "produces": [
                    "application/json",
                    "text/json",
                    "application/xml",
                    "text/xml"
                ],
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "ID of the account to get the LAUNCH for",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "model",
                        "in": "body",
                        "description": "The account to LAUNCH",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/AccountLaunchModel"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/LaunchTokenModel"
                        }
                    }
                },
                "security": [
                    {
                        "clientcredentials": []
                    },
                    {
                        "oauth2": []
                    }
                ]
            }
        },
        "/v1.0/accounts/{id}/marketplace": {
            "post": {
                "tags": [
                    "Accounts"
                ],
                "summary": "Generates a Marketplace URL for the account. Will create new account if required",
                "operationId": "Accounts_Marketplace_POST",
                "consumes": [
                    "application/json",
                    "text/json",
                    "application/xml",
                    "text/xml",
                    "application/x-www-form-urlencoded"
                ],
                "produces": [
                    "application/json",
                    "text/json",
                    "application/xml",
                    "text/xml"
                ],
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "ID of the account to get the Marketplace for",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "model",
                        "in": "body",
                        "description": "The account to get the Marketplace for",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/AccountMarketplaceModel"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/MarketplaceTokenModel"
                        }
                    }
                },
                "security": [
                    {
                        "clientcredentials": []
                    },
                    {
                        "oauth2": []
                    }
                ]
            }
        },
        "/v1.0/accounts/{id}/orbit": {
            "post": {
                "tags": [
                    "Accounts"
                ],
                "summary": "Generates an ORBIT URL for the account",
                "operationId": "Accounts_CreateUserOrbitToken_POST",
                "consumes": [],
                "produces": [
                    "application/json",
                    "text/json",
                    "application/xml",
                    "text/xml"
                ],
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/UserOrbitTokenModel"
                        }
                    },
                    "400": {
                        "description": "BadRequest"
                    }
                },
                "security": [
                    {
                        "clientcredentials": []
                    },
                    {
                        "oauth2": []
                    }
                ]
            }
        },
        "/v1.0/connectors": {
            "get": {
                "tags": [
                    "Connectors"
                ],
                "summary": "Get a list of connectors",
                "operationId": "Connectors_All_GET",
                "consumes": [],
                "produces": [
                    "application/json",
                    "text/json",
                    "application/xml",
                    "text/xml"
                ],
                "parameters": [
                    {
                        "name": "X-Cyclr-Account",
                        "in": "header",
                        "description": "ID of Cyclr account",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "pageSize",
                        "in": "query",
                        "description": "Size of the page to get",
                        "required": false,
                        "type": "integer",
                        "format": "int32"
                    },
                    {
                        "name": "page",
                        "in": "query",
                        "description": "The page to get",
                        "required": false,
                        "type": "integer",
                        "format": "int32"
                    },
                    {
                        "name": "orderBy",
                        "in": "query",
                        "description": "The property to order by",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "sortOrderAsc",
                        "in": "query",
                        "description": "True for ascending; false for descending",
                        "required": false,
                        "type": "boolean"
                    },
                    {
                        "name": "includeCustomConnectors",
                        "in": "query",
                        "description": "Set to false to exclude custom connectors",
                        "required": false,
                        "type": "boolean"
                    },
                    {
                        "name": "query",
                        "in": "query",
                        "description": "Query to search the connector name for",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "category",
                        "in": "query",
                        "description": "Filters connectors to only those in the specified category",
                        "required": false,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/ConnectorModel"
                            }
                        }
                    }
                },
                "security": [
                    {
                        "clientcredentials": []
                    },
                    {
                        "oauth2": []
                    }
                ]
            }
        },
        "/v1.0/connectors/{id}": {
            "get": {
                "tags": [
                    "Connectors"
                ],
                "summary": "Gets a connector",
                "operationId": "Connectors_One_GET",
                "consumes": [],
                "produces": [
                    "application/json",
                    "text/json",
                    "application/xml",
                    "text/xml"
                ],
                "parameters": [
                    {
                        "name": "X-Cyclr-Account",
                        "in": "header",
                        "description": "ID of Cyclr account",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "id",
                        "in": "path",
                        "description": "ID of the connector to get",
                        "required": true,
                        "type": "integer",
                        "format": "int32"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/ConnectorModel"
                        }
                    },
                    "404": {
                        "description": "No connector with the specified ID"
                    }
                },
                "security": [
                    {
                        "clientcredentials": []
                    },
                    {
                        "oauth2": []
                    }
                ]
            }
        },
        "/v1.0/connectors/{name}": {
            "get": {
                "tags": [
                    "Connectors"
                ],
                "summary": "Gets connectors",
                "operationId": "Connectors_One_GET",
                "consumes": [],
                "produces": [
                    "application/json",
                    "text/json",
                    "application/xml",
                    "text/xml"
                ],
                "parameters": [
                    {
                        "name": "X-Cyclr-Account",
                        "in": "header",
                        "description": "ID of Cyclr account",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "name",
                        "in": "path",
                        "description": "Name of the connector",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "version",
                        "in": "query",
                        "description": "Version of the connector",
                        "required": false,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/ConnectorModel"
                            }
                        }
                    },
                    "404": {
                        "description": "No connector with the specified Name and Version"
                    }
                },
                "security": [
                    {
                        "clientcredentials": []
                    },
                    {
                        "oauth2": []
                    }
                ]
            }
        },
        "/v1.0/connectors/{name}/{version}": {
            "get": {
                "tags": [
                    "Connectors"
                ],
                "summary": "Gets connectors",
                "operationId": "Connectors_One_GET",
                "consumes": [],
                "produces": [
                    "application/json",
                    "text/json",
                    "application/xml",
                    "text/xml"
                ],
                "parameters": [
                    {
                        "name": "X-Cyclr-Account",
                        "in": "header",
                        "description": "ID of Cyclr account",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "name",
                        "in": "path",
                        "description": "Name of the connector",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "version",
                        "in": "path",
                        "description": "Version of the connector",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/ConnectorModel"
                            }
                        }
                    },
                    "404": {
                        "description": "No connector with the specified Name and Version"
                    }
                },
                "security": [
                    {
                        "clientcredentials": []
                    },
                    {
                        "oauth2": []
                    }
                ]
            }
        },
        "/v1.0/connectors/{id}/install": {
            "post": {
                "tags": [
                    "Connectors"
                ],
                "summary": "Installs a connector",
                "operationId": "Connectors_Install_POST",
                "consumes": [
                    "application/json",
                    "text/json",
                    "application/xml",
                    "text/xml",
                    "application/x-www-form-urlencoded"
                ],
                "produces": [
                    "application/json",
                    "text/json",
                    "application/xml",
                    "text/xml"
                ],
                "parameters": [
                    {
                        "name": "X-Cyclr-Account",
                        "in": "header",
                        "description": "ID of Cyclr account",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "id",
                        "in": "path",
                        "description": "ID of the connector to install",
                        "required": true,
                        "type": "integer",
                        "format": "int32"
                    },
                    {
                        "name": "model",
                        "in": "body",
                        "description": "Account connector fields",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/ConnectorInstallModel"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/AccountConnectorModel"
                        }
                    },
                    "400": {
                        "description": "BadRequest"
                    },
                    "404": {
                        "description": "NotFound"
                    }
                },
                "security": [
                    {
                        "clientcredentials": []
                    },
                    {
                        "oauth2": []
                    }
                ]
            }
        },
        "/v1.0/connectors/{name}/install": {
            "post": {
                "tags": [
                    "Connectors"
                ],
                "summary": "Installs a connector",
                "operationId": "Connectors_Install_POST",
                "consumes": [
                    "application/json",
                    "text/json",
                    "application/xml",
                    "text/xml",
                    "application/x-www-form-urlencoded"
                ],
                "produces": [
                    "application/json",
                    "text/json",
                    "application/xml",
                    "text/xml"
                ],
                "parameters": [
                    {
                        "name": "X-Cyclr-Account",
                        "in": "header",
                        "description": "ID of Cyclr account",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "name",
                        "in": "path",
                        "description": "Name of the connector to install",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "model",
                        "in": "body",
                        "description": "Account connector fields",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/ConnectorInstallModel"
                        }
                    },
                    {
                        "name": "version",
                        "in": "query",
                        "description": "Version of the connector to install",
                        "required": false,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/AccountConnectorModel"
                        }
                    },
                    "400": {
                        "description": "BadRequest"
                    },
                    "404": {
                        "description": "NotFound"
                    },
                    "409": {
                        "description": "There are more than one connector with the specified name and version, use IDs instead"
                    }
                },
                "security": [
                    {
                        "clientcredentials": []
                    },
                    {
                        "oauth2": []
                    }
                ]
            }
        },
        "/v1.0/connectors/{name}/{version}/install": {
            "post": {
                "tags": [
                    "Connectors"
                ],
                "summary": "Installs a connector",
                "operationId": "Connectors_Install_POST",
                "consumes": [
                    "application/json",
                    "text/json",
                    "application/xml",
                    "text/xml",
                    "application/x-www-form-urlencoded"
                ],
                "produces": [
                    "application/json",
                    "text/json",
                    "application/xml",
                    "text/xml"
                ],
                "parameters": [
                    {
                        "name": "X-Cyclr-Account",
                        "in": "header",
                        "description": "ID of Cyclr account",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "name",
                        "in": "path",
                        "description": "Name of the connector to install",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "model",
                        "in": "body",
                        "description": "Account connector fields",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/ConnectorInstallModel"
                        }
                    },
                    {
                        "name": "version",
                        "in": "path",
                        "description": "Version of the connector to install",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/AccountConnectorModel"
                        }
                    },
                    "400": {
                        "description": "BadRequest"
                    },
                    "404": {
                        "description": "NotFound"
                    },
                    "409": {
                        "description": "There are more than one connector with the specified name and version, use IDs instead"
                    }
                },
                "security": [
                    {
                        "clientcredentials": []
                    },
                    {
                        "oauth2": []
                    }
                ]
            }
        },
        "/v1.0/connectors/{id}/methods": {
            "get": {
                "tags": [
                    "Connectors"
                ],
                "summary": "Gets the methods for the connector",
                "operationId": "Connectors_Methods_GET",
                "consumes": [],
                "produces": [
                    "application/json",
                    "text/json",
                    "application/xml",
                    "text/xml"
                ],
                "parameters": [
                    {
                        "name": "X-Cyclr-Account",
                        "in": "header",
                        "description": "ID of Cyclr account",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "id",
                        "in": "path",
                        "description": "ID of the connector to get the methods for",
                        "required": true,
                        "type": "integer",
                        "format": "int32"
                    },
                    {
                        "name": "query",
                        "in": "query",
                        "description": "Query to search method name for",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "category",
                        "in": "query",
                        "description": "Filter methods to only those that are in the specified category",
                        "required": false,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/MethodModel"
                            }
                        }
                    },
                    "404": {
                        "description": "No connector with the specified ID or connector unavailable for account"
                    }
                },
                "security": [
                    {
                        "clientcredentials": []
                    },
                    {
                        "oauth2": []
                    }
                ]
            }
        },
        "/v1.0/connectors/{name}/methods": {
            "get": {
                "tags": [
                    "Connectors"
                ],
                "summary": "Gets the methods for the connector",
                "operationId": "Connectors_Methods_GET",
                "consumes": [],
                "produces": [
                    "application/json",
                    "text/json",
                    "application/xml",
                    "text/xml"
                ],
                "parameters": [
                    {
                        "name": "X-Cyclr-Account",
                        "in": "header",
                        "description": "ID of Cyclr account",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "name",
                        "in": "path",
                        "description": "Name of the connector to get the methods for",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "version",
                        "in": "query",
                        "description": "Version of the connector to get the methods for",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "query",
                        "in": "query",
                        "description": "Query to search method name for",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "category",
                        "in": "query",
                        "description": "Filter methods to only those that are in the specified category",
                        "required": false,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/MethodModel"
                            }
                        }
                    },
                    "404": {
                        "description": "No connector with the specified ID or connector unavailable for account"
                    },
                    "409": {
                        "description": "There are more than one connector with the specified name and version, use IDs instead"
                    }
                },
                "security": [
                    {
                        "clientcredentials": []
                    },
                    {
                        "oauth2": []
                    }
                ]
            }
        },
        "/v1.0/connectors/{name}/{version}/methods": {
            "get": {
                "tags": [
                    "Connectors"
                ],
                "summary": "Gets the methods for the connector",
                "operationId": "Connectors_Methods_GET",
                "consumes": [],
                "produces": [
                    "application/json",
                    "text/json",
                    "application/xml",
                    "text/xml"
                ],
                "parameters": [
                    {
                        "name": "X-Cyclr-Account",
                        "in": "header",
                        "description": "ID of Cyclr account",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "name",
                        "in": "path",
                        "description": "Name of the connector to get the methods for",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "version",
                        "in": "path",
                        "description": "Version of the connector to get the methods for",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "query",
                        "in": "query",
                        "description": "Query to search method name for",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "category",
                        "in": "query",
                        "description": "Filter methods to only those that are in the specified category",
                        "required": false,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/MethodModel"
                            }
                        }
                    },
                    "404": {
                        "description": "No connector with the specified ID or connector unavailable for account"
                    },
                    "409": {
                        "description": "There are more than one connector with the specified name and version, use IDs instead"
                    }
                },
                "security": [
                    {
                        "clientcredentials": []
                    },
                    {
                        "oauth2": []
                    }
                ]
            }
        },
        "/v1.0/account/connectors/{accountConnectorId}/fields": {
            "get": {
                "tags": [
                    "Custom Fields"
                ],
                "summary": "Gets all custom fields from the account connector",
                "operationId": "CustomFields_GetCustomFields_GET",
                "consumes": [],
                "produces": [
                    "application/json",
                    "text/json",
                    "application/xml",
                    "text/xml"
                ],
                "parameters": [
                    {
                        "name": "X-Cyclr-Account",
                        "in": "header",
                        "description": "ID of Cyclr account",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "accountConnectorId",
                        "in": "path",
                        "description": "Account connector ID",
                        "required": true,
                        "type": "integer",
                        "format": "int32"
                    },
                    {
                        "name": "pageSize",
                        "in": "query",
                        "description": "Page size",
                        "required": false,
                        "type": "integer",
                        "format": "int32"
                    },
                    {
                        "name": "page",
                        "in": "query",
                        "description": "Page number",
                        "required": false,
                        "type": "integer",
                        "format": "int32"
                    },
                    {
                        "name": "orderBy",
                        "in": "query",
                        "description": "The property name to order by",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "sortOrderAsc",
                        "in": "query",
                        "description": "True to sort in ascending order. False for descending order",
                        "required": false,
                        "type": "boolean"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/CustomFieldModel"
                            }
                        }
                    },
                    "400": {
                        "description": "BadRequest"
                    },
                    "404": {
                        "description": "NotFound"
                    }
                },
                "security": [
                    {
                        "clientcredentials": []
                    },
                    {
                        "oauth2": []
                    }
                ]
            },
            "post": {
                "tags": [
                    "Custom Fields"
                ],
                "summary": "Adds a custom field to the account connector",
                "operationId": "CustomFields_CreateCustomField_POST",
                "consumes": [
                    "application/json",
                    "text/json",
                    "application/xml",
                    "text/xml",
                    "application/x-www-form-urlencoded"
                ],
                "produces": [
                    "application/json",
                    "text/json",
                    "application/xml",
                    "text/xml"
                ],
                "parameters": [
                    {
                        "name": "X-Cyclr-Account",
                        "in": "header",
                        "description": "ID of Cyclr account",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "accountConnectorId",
                        "in": "path",
                        "description": "Account connector ID",
                        "required": true,
                        "type": "integer",
                        "format": "int32"
                    },
                    {
                        "name": "model",
                        "in": "body",
                        "description": "Custom field to add",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/CustomFieldRequestModel"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/CustomFieldModel"
                        }
                    },
                    "400": {
                        "description": "BadRequest"
                    },
                    "404": {
                        "description": "NotFound"
                    }
                },
                "security": [
                    {
                        "clientcredentials": []
                    },
                    {
                        "oauth2": []
                    }
                ]
            }
        },
        "/v1.0/account/connectors/{accountConnectorId}/fields/{id}": {
            "get": {
                "tags": [
                    "Custom Fields"
                ],
                "summary": "Gets the custom field by ID",
                "operationId": "CustomFields_GetCustomField_GET",
                "consumes": [],
                "produces": [
                    "application/json",
                    "text/json",
                    "application/xml",
                    "text/xml"
                ],
                "parameters": [
                    {
                        "name": "X-Cyclr-Account",
                        "in": "header",
                        "description": "ID of Cyclr account",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "accountConnectorId",
                        "in": "path",
                        "description": "Account connector ID",
                        "required": true,
                        "type": "integer",
                        "format": "int32"
                    },
                    {
                        "name": "id",
                        "in": "path",
                        "description": "Custom field ID",
                        "required": true,
                        "type": "integer",
                        "format": "int32"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/CustomFieldModel"
                        }
                    },
                    "404": {
                        "description": "NotFound"
                    }
                },
                "security": [
                    {
                        "clientcredentials": []
                    },
                    {
                        "oauth2": []
                    }
                ]
            },
            "put": {
                "tags": [
                    "Custom Fields"
                ],
                "summary": "Updates the custom field in the account connector",
                "operationId": "CustomFields_UpdateCustomField_PUT",
                "consumes": [
                    "application/json",
                    "text/json",
                    "application/xml",
                    "text/xml",
                    "application/x-www-form-urlencoded"
                ],
                "produces": [
                    "application/json",
                    "text/json",
                    "application/xml",
                    "text/xml"
                ],
                "parameters": [
                    {
                        "name": "X-Cyclr-Account",
                        "in": "header",
                        "description": "ID of Cyclr account",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "accountConnectorId",
                        "in": "path",
                        "description": "Account connector ID",
                        "required": true,
                        "type": "integer",
                        "format": "int32"
                    },
                    {
                        "name": "id",
                        "in": "path",
                        "description": "Custom field ID",
                        "required": true,
                        "type": "integer",
                        "format": "int32"
                    },
                    {
                        "name": "model",
                        "in": "body",
                        "description": "Custom field to update",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/CustomFieldRequestModel"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/CustomFieldModel"
                        }
                    },
                    "404": {
                        "description": "NotFound"
                    }
                },
                "security": [
                    {
                        "clientcredentials": []
                    },
                    {
                        "oauth2": []
                    }
                ]
            },
            "delete": {
                "tags": [
                    "Custom Fields"
                ],
                "summary": "Removes the custom field from the account connector",
                "operationId": "CustomFields_DeleteCustomField_DELETE",
                "consumes": [],
                "produces": [
                    "application/json",
                    "text/json",
                    "application/xml",
                    "text/xml"
                ],
                "parameters": [
                    {
                        "name": "X-Cyclr-Account",
                        "in": "header",
                        "description": "ID of Cyclr account",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "accountConnectorId",
                        "in": "path",
                        "description": "Account connector ID",
                        "required": true,
                        "type": "integer",
                        "format": "int32"
                    },
                    {
                        "name": "id",
                        "in": "path",
                        "description": "Custom field ID",
                        "required": true,
                        "type": "integer",
                        "format": "int32"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK"
                    },
                    "400": {
                        "description": "BadRequest"
                    },
                    "404": {
                        "description": "NotFound"
                    }
                },
                "security": [
                    {
                        "clientcredentials": []
                    },
                    {
                        "oauth2": []
                    }
                ]
            }
        },
        "/v1.0/cycles": {
            "get": {
                "tags": [
                    "Cycles"
                ],
                "summary": "Gets a list of cycles",
                "operationId": "Cycles_All_GET",
                "consumes": [],
                "produces": [
                    "application/json",
                    "text/json",
                    "application/xml",
                    "text/xml"
                ],
                "parameters": [
                    {
                        "name": "X-Cyclr-Account",
                        "in": "header",
                        "description": "ID of Cyclr account",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "pageSize",
                        "in": "query",
                        "description": "Size of the page to get",
                        "required": false,
                        "type": "integer",
                        "format": "int32"
                    },
                    {
                        "name": "page",
                        "in": "query",
                        "description": "The page to get",
                        "required": false,
                        "type": "integer",
                        "format": "int32"
                    },
                    {
                        "name": "orderBy",
                        "in": "query",
                        "description": "The property to order by",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "sortOrderAsc",
                        "in": "query",
                        "description": "True for ascending; false for descending",
                        "required": false,
                        "type": "boolean"
                    },
                    {
                        "name": "includeIcons",
                        "in": "query",
                        "description": "If true response will contain connector icons",
                        "required": false,
                        "type": "boolean"
                    },
                    {
                        "name": "includePrerequisites",
                        "in": "query",
                        "description": "If true response will contain the unmapped steps in a cycle",
                        "required": false,
                        "type": "boolean"
                    },
                    {
                        "name": "connectorName",
                        "in": "query",
                        "description": "Only get cycles using the the named connector",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "connectorVersion",
                        "in": "query",
                        "description": "Only get cycles with this version of the named connector",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "tag",
                        "in": "query",
                        "description": "Only get cycles with the tags",
                        "required": false,
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "collectionFormat": "multi"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/CycleModel"
                            }
                        }
                    }
                },
                "security": [
                    {
                        "clientcredentials": []
                    },
                    {
                        "oauth2": []
                    }
                ]
            },
            "post": {
                "tags": [
                    "Cycles"
                ],
                "summary": "Creates a cycle",
                "operationId": "Cycles_Create_POST",
                "consumes": [
                    "application/json",
                    "text/json",
                    "application/xml",
                    "text/xml",
                    "application/x-www-form-urlencoded"
                ],
                "produces": [
                    "application/json",
                    "text/json",
                    "application/xml",
                    "text/xml"
                ],
                "parameters": [
                    {
                        "name": "X-Cyclr-Account",
                        "in": "header",
                        "description": "ID of Cyclr account",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "model",
                        "in": "body",
                        "description": "",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/CycleRequestModel"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/CycleModel"
                        }
                    }
                },
                "security": [
                    {
                        "clientcredentials": []
                    },
                    {
                        "oauth2": []
                    }
                ]
            }
        },
        "/v1.0/cycles/{id}": {
            "get": {
                "tags": [
                    "Cycles"
                ],
                "summary": "Gets a cycle by ID",
                "operationId": "Cycles_One_GET",
                "consumes": [],
                "produces": [
                    "application/json",
                    "text/json",
                    "application/xml",
                    "text/xml"
                ],
                "parameters": [
                    {
                        "name": "X-Cyclr-Account",
                        "in": "header",
                        "description": "ID of Cyclr account",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "id",
                        "in": "path",
                        "description": "ID of the cycle to get",
                        "required": true,
                        "type": "string",
                        "format": "uuid"
                    },
                    {
                        "name": "includeIcons",
                        "in": "query",
                        "description": "If true response will contain connector icons",
                        "required": false,
                        "type": "boolean"
                    },
                    {
                        "name": "includePrerequisites",
                        "in": "query",
                        "description": "If true response will contain the unmapped steps in a cycle",
                        "required": false,
                        "type": "boolean"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/CycleModel"
                        }
                    },
                    "404": {
                        "description": "No cycle exists with the specified ID"
                    }
                },
                "security": [
                    {
                        "clientcredentials": []
                    },
                    {
                        "oauth2": []
                    }
                ]
            },
            "put": {
                "tags": [
                    "Cycles"
                ],
                "summary": "Updates a cycle",
                "operationId": "Cycles_Update_PUT",
                "consumes": [
                    "application/json",
                    "text/json",
                    "application/xml",
                    "text/xml",
                    "application/x-www-form-urlencoded"
                ],
                "produces": [
                    "application/json",
                    "text/json",
                    "application/xml",
                    "text/xml"
                ],
                "parameters": [
                    {
                        "name": "X-Cyclr-Account",
                        "in": "header",
                        "description": "ID of Cyclr account",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "id",
                        "in": "path",
                        "description": "ID of the cycle to update",
                        "required": true,
                        "type": "string",
                        "format": "uuid"
                    },
                    {
                        "name": "model",
                        "in": "body",
                        "description": "",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/CycleUpdateModel"
                        }
                    },
                    {
                        "name": "includeIcons",
                        "in": "query",
                        "description": "If true response will contain connector icons",
                        "required": false,
                        "type": "boolean"
                    },
                    {
                        "name": "includePrerequisites",
                        "in": "query",
                        "description": "If true response will contain the unmapped steps in a cycle",
                        "required": false,
                        "type": "boolean"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/CycleModel"
                        }
                    },
                    "404": {
                        "description": "No cycle exists with the specified ID"
                    },
                    "409": {
                        "description": "Cycle cannot be updated while Cycle is running. Stop the cycle before updating"
                    }
                },
                "security": [
                    {
                        "clientcredentials": []
                    },
                    {
                        "oauth2": []
                    }
                ]
            },
            "delete": {
                "tags": [
                    "Cycles"
                ],
                "summary": "Deletes a cycle",
                "operationId": "Cycles_Delete_DELETE",
                "consumes": [],
                "produces": [
                    "application/json",
                    "text/json",
                    "application/xml",
                    "text/xml"
                ],
                "parameters": [
                    {
                        "name": "X-Cyclr-Account",
                        "in": "header",
                        "description": "ID of Cyclr account",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "id",
                        "in": "path",
                        "description": "ID of the cycle to delete",
                        "required": true,
                        "type": "string",
                        "format": "uuid"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK"
                    },
                    "400": {
                        "description": "Cannot delete a template"
                    },
                    "500": {
                        "description": "Cycle contains a step that contains script that has blocked the delete"
                    }
                },
                "security": [
                    {
                        "clientcredentials": []
                    },
                    {
                        "oauth2": []
                    }
                ]
            }
        },
        "/v1.0/cycles/incidents/{level}": {
            "get": {
                "tags": [
                    "Cycles"
                ],
                "summary": "Gets incidents for all cycles",
                "operationId": "Cycles_GetAllIncidents_GET",
                "consumes": [],
                "produces": [
                    "application/json",
                    "text/json",
                    "application/xml",
                    "text/xml"
                ],
                "parameters": [
                    {
                        "name": "X-Cyclr-Account",
                        "in": "header",
                        "description": "ID of Cyclr account",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "level",
                        "in": "path",
                        "description": "Restrict to error or warning",
                        "required": true,
                        "type": "string",
                        "enum": [
                            "Error",
                            "Warning"
                        ]
                    },
                    {
                        "name": "pageSize",
                        "in": "query",
                        "description": "Size of the page to get",
                        "required": false,
                        "type": "integer",
                        "format": "int32"
                    },
                    {
                        "name": "page",
                        "in": "query",
                        "description": "The page to get",
                        "required": false,
                        "type": "integer",
                        "format": "int32"
                    },
                    {
                        "name": "sortOrderAsc",
                        "in": "query",
                        "description": "True for ascending; false for descending",
                        "required": false,
                        "type": "boolean"
                    },
                    {
                        "name": "after",
                        "in": "query",
                        "description": "Gets incidents that occurred on or after this timestamp",
                        "required": false,
                        "type": "string",
                        "format": "date-time"
                    },
                    {
                        "name": "before",
                        "in": "query",
                        "description": "Gets incidents that occurred before or on this timestamp",
                        "required": false,
                        "type": "string",
                        "format": "date-time"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/AccountCycleStepTransactionIncidentModel"
                            }
                        }
                    }
                },
                "security": [
                    {
                        "clientcredentials": []
                    },
                    {
                        "oauth2": []
                    }
                ]
            }
        },
        "/v1.0/cycles/{id}/incidents/{level}": {
            "get": {
                "tags": [
                    "Cycles"
                ],
                "summary": "Gets any incidents for a cycle",
                "operationId": "Cycles_GetIncidents_GET",
                "consumes": [],
                "produces": [
                    "application/json",
                    "text/json",
                    "application/xml",
                    "text/xml"
                ],
                "parameters": [
                    {
                        "name": "X-Cyclr-Account",
                        "in": "header",
                        "description": "ID of Cyclr account",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "id",
                        "in": "path",
                        "description": "ID of the cycle",
                        "required": true,
                        "type": "string",
                        "format": "uuid"
                    },
                    {
                        "name": "level",
                        "in": "path",
                        "description": "Restrict to error or warning",
                        "required": true,
                        "type": "string",
                        "enum": [
                            "Error",
                            "Warning"
                        ]
                    },
                    {
                        "name": "pageSize",
                        "in": "query",
                        "description": "Size of the page to get",
                        "required": false,
                        "type": "integer",
                        "format": "int32"
                    },
                    {
                        "name": "page",
                        "in": "query",
                        "description": "The page to get",
                        "required": false,
                        "type": "integer",
                        "format": "int32"
                    },
                    {
                        "name": "sortOrderAsc",
                        "in": "query",
                        "description": "True for ascending; false for descending",
                        "required": false,
                        "type": "boolean"
                    },
                    {
                        "name": "after",
                        "in": "query",
                        "description": "Gets incidents that occurred on or after this timestamp",
                        "required": false,
                        "type": "string",
                        "format": "date-time"
                    },
                    {
                        "name": "before",
                        "in": "query",
                        "description": "Gets incidents that occurred before or on this timestamp",
                        "required": false,
                        "type": "string",
                        "format": "date-time"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/CycleStepTransactionIncidentModel"
                            }
                        }
                    },
                    "404": {
                        "description": "No cycle exists with the specified ID"
                    }
                },
                "security": [
                    {
                        "clientcredentials": []
                    },
                    {
                        "oauth2": []
                    }
                ]
            }
        },
        "/v1.0/cycles/{id}/incidents": {
            "delete": {
                "tags": [
                    "Cycles"
                ],
                "summary": "Deletes all incidents for the specified cycle",
                "operationId": "Cycles_DeleteIncidents_DELETE",
                "consumes": [],
                "produces": [
                    "application/json",
                    "text/json",
                    "application/xml",
                    "text/xml"
                ],
                "parameters": [
                    {
                        "name": "X-Cyclr-Account",
                        "in": "header",
                        "description": "ID of Cyclr account",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "id",
                        "in": "path",
                        "description": "ID of the cycle",
                        "required": true,
                        "type": "string",
                        "format": "uuid"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK"
                    }
                },
                "security": [
                    {
                        "clientcredentials": []
                    },
                    {
                        "oauth2": []
                    }
                ]
            }
        },
        "/v1.0/cycles/{id}/activate": {
            "put": {
                "tags": [
                    "Cycles"
                ],
                "summary": "Activates a cycle",
                "operationId": "Cycles_Activate_PUT",
                "consumes": [
                    "application/json",
                    "text/json",
                    "application/xml",
                    "text/xml",
                    "application/x-www-form-urlencoded"
                ],
                "produces": [
                    "application/json",
                    "text/json",
                    "application/xml",
                    "text/xml"
                ],
                "parameters": [
                    {
                        "name": "X-Cyclr-Account",
                        "in": "header",
                        "description": "ID of Cyclr account",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "id",
                        "in": "path",
                        "description": "ID of the cycle to activate",
                        "required": true,
                        "type": "string",
                        "format": "uuid"
                    },
                    {
                        "name": "options",
                        "in": "body",
                        "description": "Options for the cycle activation",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/CycleActivateOptions"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "enum": [
                                "Error",
                                "Success",
                                "NewPurchase",
                                "MaxTasksUpgrade",
                                "MaxCyclesUpgrade",
                                "PremiumUpgrade"
                            ],
                            "type": "string"
                        }
                    },
                    "400": {
                        "description": "BadRequest",
                        "schema": {
                            "$ref": "#/definitions/BadRequestModel"
                        }
                    },
                    "404": {
                        "description": "NotFound"
                    }
                },
                "security": [
                    {
                        "clientcredentials": []
                    },
                    {
                        "oauth2": []
                    }
                ]
            }
        },
        "/v1.0/cycles/{id}/deactivate": {
            "put": {
                "tags": [
                    "Cycles"
                ],
                "summary": "Deactivates a cycle",
                "operationId": "Cycles_Deactivate_PUT",
                "consumes": [],
                "produces": [
                    "application/json",
                    "text/json",
                    "application/xml",
                    "text/xml"
                ],
                "parameters": [
                    {
                        "name": "X-Cyclr-Account",
                        "in": "header",
                        "description": "ID of Cyclr account",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "id",
                        "in": "path",
                        "description": "ID of the cycle to deactivate",
                        "required": true,
                        "type": "string",
                        "format": "uuid"
                    },
                    {
                        "name": "finishQueuedTransactions",
                        "in": "query",
                        "description": "True if transactions in the queue should continue to be processed.",
                        "required": false,
                        "type": "boolean"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK"
                    },
                    "404": {
                        "description": "NotFound"
                    }
                },
                "security": [
                    {
                        "clientcredentials": []
                    },
                    {
                        "oauth2": []
                    }
                ]
            }
        },
        "/v1.0/cycles/{id}/steps": {
            "get": {
                "tags": [
                    "Cycles"
                ],
                "summary": "Gets steps from the specified cycle",
                "operationId": "Cycles_Steps_GET",
                "consumes": [],
                "produces": [
                    "application/json",
                    "text/json",
                    "application/xml",
                    "text/xml"
                ],
                "parameters": [
                    {
                        "name": "X-Cyclr-Account",
                        "in": "header",
                        "description": "ID of Cyclr account",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "id",
                        "in": "path",
                        "description": "ID of the cycle to get the steps for",
                        "required": true,
                        "type": "string",
                        "format": "uuid"
                    },
                    {
                        "name": "filter",
                        "in": "query",
                        "description": "Filter by cycle step type",
                        "required": false,
                        "type": "string",
                        "enum": [
                            "None",
                            "Action",
                            "Webhook",
                            "Decision",
                            "Delay",
                            "WaitUntil",
                            "WaitAll",
                            "WebhookResponse",
                            "Annotation"
                        ]
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/CycleStepModel"
                            }
                        }
                    },
                    "404": {
                        "description": "The cycle was not found"
                    }
                },
                "security": [
                    {
                        "clientcredentials": []
                    },
                    {
                        "oauth2": []
                    }
                ]
            },
            "post": {
                "tags": [
                    "Cycles"
                ],
                "summary": "Creates a new step of any type.",
                "operationId": "Cycles_CreateStep_POST",
                "consumes": [
                    "application/json",
                    "text/json",
                    "application/xml",
                    "text/xml",
                    "application/x-www-form-urlencoded"
                ],
                "produces": [
                    "application/json",
                    "text/json",
                    "application/xml",
                    "text/xml"
                ],
                "parameters": [
                    {
                        "name": "X-Cyclr-Account",
                        "in": "header",
                        "description": "ID of Cyclr account",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "id",
                        "in": "path",
                        "description": "Id of the cycle to create the step in.",
                        "required": true,
                        "type": "string",
                        "format": "uuid"
                    },
                    {
                        "name": "model",
                        "in": "body",
                        "description": "Model of the step to create.",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/CycleStepRequestModel"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/CycleStepModel"
                        }
                    },
                    "400": {
                        "description": "Step is not valid",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        }
                    },
                    "409": {
                        "description": "Step cannot be created as cycle is running. Stop cycle before creating"
                    }
                },
                "security": [
                    {
                        "clientcredentials": []
                    },
                    {
                        "oauth2": []
                    }
                ]
            }
        },
        "/v1.0/cycles/{id}/steps/action": {
            "post": {
                "tags": [
                    "Cycles"
                ],
                "summary": "Creates a new action step.",
                "operationId": "Cycles_CreateStep_POST",
                "consumes": [
                    "application/json",
                    "text/json",
                    "application/xml",
                    "text/xml",
                    "application/x-www-form-urlencoded"
                ],
                "produces": [
                    "application/json",
                    "text/json",
                    "application/xml",
                    "text/xml"
                ],
                "parameters": [
                    {
                        "name": "X-Cyclr-Account",
                        "in": "header",
                        "description": "ID of Cyclr account",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "id",
                        "in": "path",
                        "description": "Id of the cycle to create the action step in.",
                        "required": true,
                        "type": "string",
                        "format": "uuid"
                    },
                    {
                        "name": "model",
                        "in": "body",
                        "description": "Model of the action step to create.",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/CycleActionStepModel"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/CycleActionStepModel"
                        }
                    },
                    "400": {
                        "description": "Step is not valid",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        }
                    },
                    "409": {
                        "description": "Step cannot be created as cycle is running. Stop cycle before creating"
                    }
                },
                "security": [
                    {
                        "clientcredentials": []
                    },
                    {
                        "oauth2": []
                    }
                ]
            }
        },
        "/v1.0/cycles/{id}/steps/decision": {
            "post": {
                "tags": [
                    "Cycles"
                ],
                "summary": "Creates a new decision step.",
                "operationId": "Cycles_CreateStep_POST",
                "consumes": [
                    "application/json",
                    "text/json",
                    "application/xml",
                    "text/xml",
                    "application/x-www-form-urlencoded"
                ],
                "produces": [
                    "application/json",
                    "text/json",
                    "application/xml",
                    "text/xml"
                ],
                "parameters": [
                    {
                        "name": "X-Cyclr-Account",
                        "in": "header",
                        "description": "ID of Cyclr account",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "id",
                        "in": "path",
                        "description": "Id of the cycle to create the decision step in.",
                        "required": true,
                        "type": "string",
                        "format": "uuid"
                    },
                    {
                        "name": "model",
                        "in": "body",
                        "description": "Model of the decision step to create.",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/CycleDecisionStepModel"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/CycleDecisionStepModel"
                        }
                    },
                    "400": {
                        "description": "Step is not valid",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        }
                    },
                    "409": {
                        "description": "Step cannot be created as cycle is running. Stop cycle before creating"
                    }
                },
                "security": [
                    {
                        "clientcredentials": []
                    },
                    {
                        "oauth2": []
                    }
                ]
            }
        },
        "/v1.0/cycles/{id}/steps/delay": {
            "post": {
                "tags": [
                    "Cycles"
                ],
                "summary": "Creates a new delay step.",
                "operationId": "Cycles_CreateStep_POST",
                "consumes": [
                    "application/json",
                    "text/json",
                    "application/xml",
                    "text/xml",
                    "application/x-www-form-urlencoded"
                ],
                "produces": [
                    "application/json",
                    "text/json",
                    "application/xml",
                    "text/xml"
                ],
                "parameters": [
                    {
                        "name": "X-Cyclr-Account",
                        "in": "header",
                        "description": "ID of Cyclr account",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "id",
                        "in": "path",
                        "description": "Id of the cycle to create the delay step in.",
                        "required": true,
                        "type": "string",
                        "format": "uuid"
                    },
                    {
                        "name": "model",
                        "in": "body",
                        "description": "Model of the delay step to create.",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/CycleDelayStepModel"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/CycleDelayStepModel"
                        }
                    },
                    "400": {
                        "description": "Step is not valid",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        }
                    },
                    "409": {
                        "description": "Step cannot be created as cycle is running. Stop cycle before creating"
                    }
                },
                "security": [
                    {
                        "clientcredentials": []
                    },
                    {
                        "oauth2": []
                    }
                ]
            }
        },
        "/v1.0/cycles/{id}/steps/waituntil": {
            "post": {
                "tags": [
                    "Cycles"
                ],
                "summary": "Creates a new wait until step.",
                "operationId": "Cycles_CreateStep_POST",
                "consumes": [
                    "application/json",
                    "text/json",
                    "application/xml",
                    "text/xml",
                    "application/x-www-form-urlencoded"
                ],
                "produces": [
                    "application/json",
                    "text/json",
                    "application/xml",
                    "text/xml"
                ],
                "parameters": [
                    {
                        "name": "X-Cyclr-Account",
                        "in": "header",
                        "description": "ID of Cyclr account",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "id",
                        "in": "path",
                        "description": "Id of the cycle to create the wait until step in.",
                        "required": true,
                        "type": "string",
                        "format": "uuid"
                    },
                    {
                        "name": "model",
                        "in": "body",
                        "description": "Model of the wait until step to create.",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/CycleWaitUntilStepModel"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/CycleWaitUntilStepModel"
                        }
                    },
                    "400": {
                        "description": "Step is not valid",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        }
                    },
                    "409": {
                        "description": "Step cannot be created as cycle is running. Stop cycle before creating"
                    }
                },
                "security": [
                    {
                        "clientcredentials": []
                    },
                    {
                        "oauth2": []
                    }
                ]
            }
        },
        "/v1.0/cycles/{id}/steps/webhook": {
            "post": {
                "tags": [
                    "Cycles"
                ],
                "summary": "Creates a new webhook step.",
                "operationId": "Cycles_CreateStep_POST",
                "consumes": [
                    "application/json",
                    "text/json",
                    "application/xml",
                    "text/xml",
                    "application/x-www-form-urlencoded"
                ],
                "produces": [
                    "application/json",
                    "text/json",
                    "application/xml",
                    "text/xml"
                ],
                "parameters": [
                    {
                        "name": "X-Cyclr-Account",
                        "in": "header",
                        "description": "ID of Cyclr account",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "id",
                        "in": "path",
                        "description": "Id of the cycle to create the webhook step in.",
                        "required": true,
                        "type": "string",
                        "format": "uuid"
                    },
                    {
                        "name": "model",
                        "in": "body",
                        "description": "Model of the webhook step to create.",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/CycleWebhookStepModel"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/CycleWebhookStepModel"
                        }
                    },
                    "400": {
                        "description": "Step is not valid",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        }
                    },
                    "409": {
                        "description": "Step cannot be created as cycle is running. Stop cycle before creating"
                    }
                },
                "security": [
                    {
                        "clientcredentials": []
                    },
                    {
                        "oauth2": []
                    }
                ]
            }
        },
        "/v1.0/cycles/{id}/steps/annotation": {
            "post": {
                "tags": [
                    "Cycles"
                ],
                "summary": "Creates a new annotation.",
                "operationId": "Cycles_CreateStep_POST",
                "consumes": [
                    "application/json",
                    "text/json",
                    "application/xml",
                    "text/xml",
                    "application/x-www-form-urlencoded"
                ],
                "produces": [
                    "application/json",
                    "text/json",
                    "application/xml",
                    "text/xml"
                ],
                "parameters": [
                    {
                        "name": "X-Cyclr-Account",
                        "in": "header",
                        "description": "ID of Cyclr account",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "id",
                        "in": "path",
                        "description": "Id of the cycle to create the annotation in.",
                        "required": true,
                        "type": "string",
                        "format": "uuid"
                    },
                    {
                        "name": "model",
                        "in": "body",
                        "description": "Model of the annotation to create.",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/CycleAnnotationStepModel"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/CycleAnnotationStepModel"
                        }
                    },
                    "400": {
                        "description": "Step is not valid",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        }
                    },
                    "409": {
                        "description": "Step cannot be created as cycle is running. Stop cycle before creating"
                    }
                },
                "security": [
                    {
                        "clientcredentials": []
                    },
                    {
                        "oauth2": []
                    }
                ]
            }
        },
        "/v1.0/cycles/{id}/steps/{stepId}": {
            "get": {
                "tags": [
                    "Cycles"
                ],
                "summary": "Gets a step from the cycle.",
                "operationId": "Cycles_Step_GET",
                "consumes": [],
                "produces": [
                    "application/json",
                    "text/json",
                    "application/xml",
                    "text/xml"
                ],
                "parameters": [
                    {
                        "name": "X-Cyclr-Account",
                        "in": "header",
                        "description": "ID of Cyclr account",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "id",
                        "in": "path",
                        "description": "Id of the cycle",
                        "required": true,
                        "type": "string",
                        "format": "uuid"
                    },
                    {
                        "name": "stepId",
                        "in": "path",
                        "description": "Id of the step in the cycle",
                        "required": true,
                        "type": "string",
                        "format": "uuid"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/CycleStepModel"
                        }
                    },
                    "404": {
                        "description": "The cycle/step was not found"
                    }
                },
                "security": [
                    {
                        "clientcredentials": []
                    },
                    {
                        "oauth2": []
                    }
                ]
            },
            "put": {
                "tags": [
                    "Cycles"
                ],
                "summary": "Updates a step.",
                "operationId": "Cycles_UpdateStep_PUT",
                "consumes": [
                    "application/json",
                    "text/json",
                    "application/xml",
                    "text/xml",
                    "application/x-www-form-urlencoded"
                ],
                "produces": [
                    "application/json",
                    "text/json",
                    "application/xml",
                    "text/xml"
                ],
                "parameters": [
                    {
                        "name": "X-Cyclr-Account",
                        "in": "header",
                        "description": "ID of Cyclr account",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "id",
                        "in": "path",
                        "description": "Id of the cycle the step is in",
                        "required": true,
                        "type": "string",
                        "format": "uuid"
                    },
                    {
                        "name": "stepId",
                        "in": "path",
                        "description": "Id of the step to update",
                        "required": true,
                        "type": "string",
                        "format": "uuid"
                    },
                    {
                        "name": "model",
                        "in": "body",
                        "description": "The updated step data",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/CycleStepRequestModel"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/CycleStepModel"
                        }
                    },
                    "400": {
                        "description": "ActionType must be a valid step type"
                    },
                    "409": {
                        "description": "Step cannot be updated as cycle is running. Stop cycle before update"
                    }
                },
                "security": [
                    {
                        "clientcredentials": []
                    },
                    {
                        "oauth2": []
                    }
                ]
            },
            "delete": {
                "tags": [
                    "Cycles"
                ],
                "summary": "Deletes a step from the cycle.",
                "operationId": "Cycles_DeleteStep_DELETE",
                "consumes": [],
                "produces": [
                    "application/json",
                    "text/json",
                    "application/xml",
                    "text/xml"
                ],
                "parameters": [
                    {
                        "name": "X-Cyclr-Account",
                        "in": "header",
                        "description": "ID of Cyclr account",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "id",
                        "in": "path",
                        "description": "Id of the cycle",
                        "required": true,
                        "type": "string",
                        "format": "uuid"
                    },
                    {
                        "name": "stepId",
                        "in": "path",
                        "description": "Id of the step to delete",
                        "required": true,
                        "type": "string",
                        "format": "uuid"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK"
                    },
                    "404": {
                        "description": "The cycle/step was not found"
                    },
                    "409": {
                        "description": "Step cannot be deleted from active cycle. Stop cycle before deleting"
                    },
                    "500": {
                        "description": "Step contains script that has blocked the delete"
                    },
                    "503": {
                        "description": "Failed to delete webhook from the third party application, step deletion aborted"
                    }
                },
                "security": [
                    {
                        "clientcredentials": []
                    },
                    {
                        "oauth2": []
                    }
                ]
            }
        },
        "/v1.0/cycles/{id}/variables": {
            "get": {
                "tags": [
                    "Cycles"
                ],
                "summary": "Gets variables from the specified cycle",
                "operationId": "Cycles_Variables_GET",
                "consumes": [],
                "produces": [
                    "application/json",
                    "text/json",
                    "application/xml",
                    "text/xml"
                ],
                "parameters": [
                    {
                        "name": "X-Cyclr-Account",
                        "in": "header",
                        "description": "ID of Cyclr account",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "id",
                        "in": "path",
                        "description": "ID of the cycle to get the variables for",
                        "required": true,
                        "type": "string",
                        "format": "uuid"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/CycleVariableModel"
                            }
                        }
                    },
                    "404": {
                        "description": "The cycle was not found"
                    }
                },
                "security": [
                    {
                        "clientcredentials": []
                    },
                    {
                        "oauth2": []
                    }
                ]
            },
            "post": {
                "tags": [
                    "Cycles"
                ],
                "summary": "Creates a new variable",
                "operationId": "Cycles_CreateVariable_POST",
                "consumes": [
                    "application/json",
                    "text/json",
                    "application/xml",
                    "text/xml",
                    "application/x-www-form-urlencoded"
                ],
                "produces": [
                    "application/json",
                    "text/json",
                    "application/xml",
                    "text/xml"
                ],
                "parameters": [
                    {
                        "name": "X-Cyclr-Account",
                        "in": "header",
                        "description": "ID of Cyclr account",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "id",
                        "in": "path",
                        "description": "ID of the cycle to create the variable in",
                        "required": true,
                        "type": "string",
                        "format": "uuid"
                    },
                    {
                        "name": "model",
                        "in": "body",
                        "description": "Model of the variable to create",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/CycleVariableModel"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/CycleVariableModel"
                        }
                    },
                    "400": {
                        "description": "Variable is not valid"
                    },
                    "404": {
                        "description": "The cycle was not found"
                    },
                    "409": {
                        "description": "Variable cannot be created as cycle is running. Stop cycle before creating"
                    }
                },
                "security": [
                    {
                        "clientcredentials": []
                    },
                    {
                        "oauth2": []
                    }
                ]
            },
            "patch": {
                "tags": [
                    "Cycles"
                ],
                "summary": "Creates or updates a collection of variables",
                "operationId": "Cycles_CreateVariables_PATCH",
                "consumes": [
                    "application/json",
                    "text/json",
                    "application/xml",
                    "text/xml",
                    "application/x-www-form-urlencoded"
                ],
                "produces": [
                    "application/json",
                    "text/json",
                    "application/xml",
                    "text/xml"
                ],
                "parameters": [
                    {
                        "name": "X-Cyclr-Account",
                        "in": "header",
                        "description": "ID of Cyclr account",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "id",
                        "in": "path",
                        "description": "ID of the cycle to create or update the variables in",
                        "required": true,
                        "type": "string",
                        "format": "uuid"
                    },
                    {
                        "name": "model",
                        "in": "body",
                        "description": "Variables to create or update",
                        "required": true,
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/CycleVariableModel"
                            }
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/CycleVariableModel"
                            }
                        }
                    },
                    "404": {
                        "description": "The cycle was not found"
                    },
                    "409": {
                        "description": "Variables cannot be created/updated as cycle is running. Stop cycle before creating/updating"
                    }
                },
                "security": [
                    {
                        "clientcredentials": []
                    },
                    {
                        "oauth2": []
                    }
                ]
            }
        },
        "/v1.0/cycles/{id}/variables/{systemName}": {
            "get": {
                "tags": [
                    "Cycles"
                ],
                "summary": "Gets a variable from the cycle",
                "operationId": "Cycles_Variable_GET",
                "consumes": [],
                "produces": [
                    "application/json",
                    "text/json",
                    "application/xml",
                    "text/xml"
                ],
                "parameters": [
                    {
                        "name": "X-Cyclr-Account",
                        "in": "header",
                        "description": "ID of Cyclr account",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "id",
                        "in": "path",
                        "description": "ID of the cycle",
                        "required": true,
                        "type": "string",
                        "format": "uuid"
                    },
                    {
                        "name": "systemName",
                        "in": "path",
                        "description": "System name of the variable in the cycle",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/CycleVariableModel"
                        }
                    },
                    "404": {
                        "description": "The cycle/variable was not found"
                    }
                },
                "security": [
                    {
                        "clientcredentials": []
                    },
                    {
                        "oauth2": []
                    }
                ]
            },
            "put": {
                "tags": [
                    "Cycles"
                ],
                "summary": "Updates the mapping type and value of a variable",
                "operationId": "Cycles_UpdateVariable_PUT",
                "consumes": [
                    "application/json",
                    "text/json",
                    "application/xml",
                    "text/xml",
                    "application/x-www-form-urlencoded"
                ],
                "produces": [
                    "application/json",
                    "text/json",
                    "application/xml",
                    "text/xml"
                ],
                "parameters": [
                    {
                        "name": "X-Cyclr-Account",
                        "in": "header",
                        "description": "ID of Cyclr account",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "id",
                        "in": "path",
                        "description": "ID of the cycle the variable is in",
                        "required": true,
                        "type": "string",
                        "format": "uuid"
                    },
                    {
                        "name": "systemName",
                        "in": "path",
                        "description": "System name of the variable to update",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "model",
                        "in": "body",
                        "description": "The updated variable",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/CycleVariableModel"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/CycleVariableModel"
                        }
                    },
                    "400": {
                        "description": "Variable is not valid"
                    },
                    "404": {
                        "description": "The cycle/variable was not found"
                    },
                    "409": {
                        "description": "Variable cannot be deleted from active cycle. Stop cycle before deleting"
                    }
                },
                "security": [
                    {
                        "clientcredentials": []
                    },
                    {
                        "oauth2": []
                    }
                ]
            },
            "delete": {
                "tags": [
                    "Cycles"
                ],
                "summary": "Deletes a variable from the cycle",
                "operationId": "Cycles_DeleteVariable_DELETE",
                "consumes": [],
                "produces": [
                    "application/json",
                    "text/json",
                    "application/xml",
                    "text/xml"
                ],
                "parameters": [
                    {
                        "name": "X-Cyclr-Account",
                        "in": "header",
                        "description": "ID of Cyclr account",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "id",
                        "in": "path",
                        "description": "ID of the cycle",
                        "required": true,
                        "type": "string",
                        "format": "uuid"
                    },
                    {
                        "name": "systemName",
                        "in": "path",
                        "description": "System name of the variable to delete",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK"
                    },
                    "400": {
                        "description": "Variable is used in mappings"
                    },
                    "404": {
                        "description": "The cycle/variable was not found"
                    },
                    "409": {
                        "description": "Variable cannot be deleted from active cycle. Stop cycle before deleting"
                    }
                },
                "security": [
                    {
                        "clientcredentials": []
                    },
                    {
                        "oauth2": []
                    }
                ]
            }
        },
        "/v1.0/cycles/{id}/prerequisites": {
            "get": {
                "tags": [
                    "Cycles"
                ],
                "summary": "Gets cycle setup prerequisites",
                "operationId": "Cycles_Prerequisites_GET",
                "consumes": [],
                "produces": [
                    "application/json",
                    "text/json",
                    "application/xml",
                    "text/xml"
                ],
                "parameters": [
                    {
                        "name": "X-Cyclr-Account",
                        "in": "header",
                        "description": "ID of Cyclr account",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "id",
                        "in": "path",
                        "description": "ID of the cycle to get setup prerequisites for",
                        "required": true,
                        "type": "string",
                        "format": "uuid"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/Prerequisite"
                            }
                        }
                    },
                    "404": {
                        "description": "NotFound"
                    }
                },
                "security": [
                    {
                        "clientcredentials": []
                    },
                    {
                        "oauth2": []
                    }
                ]
            }
        },
        "/v1.0/cycles/{id}/upgrade": {
            "post": {
                "tags": [
                    "Cycles"
                ],
                "summary": "Upgrade a cycle to the latest template version",
                "operationId": "Cycles_Upgrade_POST",
                "consumes": [],
                "produces": [
                    "application/json",
                    "text/json",
                    "application/xml",
                    "text/xml"
                ],
                "parameters": [
                    {
                        "name": "X-Cyclr-Account",
                        "in": "header",
                        "description": "ID of Cyclr account",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "id",
                        "in": "path",
                        "description": "ID of the cycle to upgrade",
                        "required": true,
                        "type": "string",
                        "format": "uuid"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "object"
                        }
                    }
                },
                "security": [
                    {
                        "clientcredentials": []
                    },
                    {
                        "oauth2": []
                    }
                ]
            }
        },
        "/v1.0/cycles/upgradeable": {
            "get": {
                "tags": [
                    "Cycles"
                ],
                "summary": "Gets a list of cycles that have new template releases available",
                "operationId": "Cycles_Upgradeable_GET",
                "consumes": [],
                "produces": [
                    "application/json",
                    "text/json",
                    "application/xml",
                    "text/xml"
                ],
                "parameters": [
                    {
                        "name": "X-Cyclr-Account",
                        "in": "header",
                        "description": "ID of Cyclr account",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "pageSize",
                        "in": "query",
                        "description": "Size of the page to get",
                        "required": false,
                        "type": "integer",
                        "format": "int32"
                    },
                    {
                        "name": "page",
                        "in": "query",
                        "description": "The page to get",
                        "required": false,
                        "type": "integer",
                        "format": "int32"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/CycleUpgradableModel"
                            }
                        }
                    },
                    "404": {
                        "description": "NotFound"
                    }
                },
                "security": [
                    {
                        "clientcredentials": []
                    },
                    {
                        "oauth2": []
                    }
                ]
            }
        },
        "/v1.0/cycles/{cycleId}/edges": {
            "get": {
                "tags": [
                    "Edges"
                ],
                "summary": "Gets all the edges for the cycle",
                "operationId": "Edges_All_GET",
                "consumes": [],
                "produces": [
                    "application/json",
                    "text/json",
                    "application/xml",
                    "text/xml"
                ],
                "parameters": [
                    {
                        "name": "X-Cyclr-Account",
                        "in": "header",
                        "description": "ID of Cyclr account",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "cycleId",
                        "in": "path",
                        "description": "ID of the cycle",
                        "required": true,
                        "type": "string",
                        "format": "uuid"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/CycleEdgeModel"
                            }
                        }
                    },
                    "404": {
                        "description": "Cycle not found"
                    }
                },
                "security": [
                    {
                        "clientcredentials": []
                    },
                    {
                        "oauth2": []
                    }
                ]
            },
            "post": {
                "tags": [
                    "Edges"
                ],
                "summary": "Adds an edge to the cycle",
                "operationId": "Edges_AddEdge_POST",
                "consumes": [
                    "application/json",
                    "text/json",
                    "application/xml",
                    "text/xml",
                    "application/x-www-form-urlencoded"
                ],
                "produces": [
                    "application/json",
                    "text/json",
                    "application/xml",
                    "text/xml"
                ],
                "parameters": [
                    {
                        "name": "X-Cyclr-Account",
                        "in": "header",
                        "description": "ID of Cyclr account",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "cycleId",
                        "in": "path",
                        "description": "ID of the cycle",
                        "required": true,
                        "type": "string",
                        "format": "uuid"
                    },
                    {
                        "name": "model",
                        "in": "body",
                        "description": "The edge to add to the cycle",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/CycleEdgeModel"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/CycleEdgeModel"
                        }
                    },
                    "400": {
                        "description": "BadRequest",
                        "schema": {
                            "$ref": "#/definitions/BadRequestModel"
                        }
                    },
                    "404": {
                        "description": "Cycle not found"
                    }
                },
                "security": [
                    {
                        "clientcredentials": []
                    },
                    {
                        "oauth2": []
                    }
                ]
            }
        },
        "/v1.0/cycles/{cycleId}/edges/{id}": {
            "get": {
                "tags": [
                    "Edges"
                ],
                "summary": "Gets an edge from the cycle",
                "operationId": "Edges_Once_GET",
                "consumes": [],
                "produces": [
                    "application/json",
                    "text/json",
                    "application/xml",
                    "text/xml"
                ],
                "parameters": [
                    {
                        "name": "X-Cyclr-Account",
                        "in": "header",
                        "description": "ID of Cyclr account",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "cycleId",
                        "in": "path",
                        "description": "ID of the cycle",
                        "required": true,
                        "type": "string",
                        "format": "uuid"
                    },
                    {
                        "name": "id",
                        "in": "path",
                        "description": "ID of the edge",
                        "required": true,
                        "type": "string",
                        "format": "uuid"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/CycleEdgeModel"
                        }
                    },
                    "404": {
                        "description": "Cycle or Edge not found"
                    }
                },
                "security": [
                    {
                        "clientcredentials": []
                    },
                    {
                        "oauth2": []
                    }
                ]
            },
            "delete": {
                "tags": [
                    "Edges"
                ],
                "summary": "Deletes the specified edge",
                "operationId": "Edges_Delete_DELETE",
                "consumes": [],
                "produces": [
                    "application/json",
                    "text/json",
                    "application/xml",
                    "text/xml"
                ],
                "parameters": [
                    {
                        "name": "X-Cyclr-Account",
                        "in": "header",
                        "description": "ID of Cyclr account",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "cycleId",
                        "in": "path",
                        "description": "ID of the cycle",
                        "required": true,
                        "type": "string",
                        "format": "uuid"
                    },
                    {
                        "name": "id",
                        "in": "path",
                        "description": "ID of the edge to delete from the cycle",
                        "required": true,
                        "type": "string",
                        "format": "uuid"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/CycleEdgeModel"
                            }
                        }
                    },
                    "404": {
                        "description": "Cycle or Edge not found"
                    },
                    "409": {
                        "description": "Edge cannot be deleted from cycle"
                    }
                },
                "security": [
                    {
                        "clientcredentials": []
                    },
                    {
                        "oauth2": []
                    }
                ]
            }
        },
        "/v1.0/methods/{id}": {
            "get": {
                "tags": [
                    "Methods"
                ],
                "summary": "Gets a method by ID",
                "operationId": "Methods_Method_GET",
                "consumes": [],
                "produces": [
                    "application/json",
                    "text/json",
                    "application/xml",
                    "text/xml"
                ],
                "parameters": [
                    {
                        "name": "X-Cyclr-Account",
                        "in": "header",
                        "description": "ID of Cyclr account",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "id",
                        "in": "path",
                        "description": "ID of the method to get",
                        "required": true,
                        "type": "integer",
                        "format": "int32"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/MethodModel"
                        }
                    },
                    "404": {
                        "description": "No method has the specified ID"
                    }
                },
                "security": [
                    {
                        "clientcredentials": []
                    },
                    {
                        "oauth2": []
                    }
                ]
            }
        },
        "/v1.0/steps/{id}/prerequisites": {
            "get": {
                "tags": [
                    "Steps"
                ],
                "summary": "Gets step setup prerequisites",
                "operationId": "Steps_Prerequisites_GET",
                "consumes": [],
                "produces": [
                    "application/json",
                    "text/json",
                    "application/xml",
                    "text/xml"
                ],
                "parameters": [
                    {
                        "name": "X-Cyclr-Account",
                        "in": "header",
                        "description": "ID of Cyclr account",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "id",
                        "in": "path",
                        "description": "ID of the step to get setup prerequisites for",
                        "required": true,
                        "type": "string",
                        "format": "uuid"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/Prerequisite"
                            }
                        }
                    },
                    "404": {
                        "description": "NotFound"
                    }
                },
                "security": [
                    {
                        "clientcredentials": []
                    },
                    {
                        "oauth2": []
                    }
                ]
            }
        },
        "/v1.0/steps/{id}/fieldsformapping": {
            "get": {
                "tags": [
                    "Steps"
                ],
                "summary": "Gets fields from previous steps that can be used in field mapping",
                "operationId": "Steps_GetPreviousStepFieldsForFieldMapping_GET",
                "consumes": [],
                "produces": [
                    "application/json",
                    "text/json",
                    "application/xml",
                    "text/xml"
                ],
                "parameters": [
                    {
                        "name": "X-Cyclr-Account",
                        "in": "header",
                        "description": "ID of Cyclr account",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "id",
                        "in": "path",
                        "description": "Id of the step to get previous field mappings for",
                        "required": true,
                        "type": "string",
                        "format": "uuid"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/PreviousStepFieldsModel"
                            }
                        }
                    },
                    "404": {
                        "description": "NotFound"
                    }
                },
                "security": [
                    {
                        "clientcredentials": []
                    },
                    {
                        "oauth2": []
                    }
                ]
            }
        },
        "/v1.0/steps/{id}/fieldmappings": {
            "get": {
                "tags": [
                    "Steps"
                ],
                "summary": "Gets step field mappings",
                "operationId": "Steps_GetFieldMappings_GET",
                "consumes": [],
                "produces": [
                    "application/json",
                    "text/json",
                    "application/xml",
                    "text/xml"
                ],
                "parameters": [
                    {
                        "name": "X-Cyclr-Account",
                        "in": "header",
                        "description": "ID of Cyclr account",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "id",
                        "in": "path",
                        "description": "ID of the step to get field mappings for",
                        "required": true,
                        "type": "string",
                        "format": "uuid"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/CycleFieldModel"
                            }
                        }
                    },
                    "400": {
                        "description": "BadRequest"
                    },
                    "404": {
                        "description": "NotFound"
                    }
                },
                "security": [
                    {
                        "clientcredentials": []
                    },
                    {
                        "oauth2": []
                    }
                ]
            }
        },
        "/v1.0/steps/{id}/fieldmappings/{fieldId}": {
            "get": {
                "tags": [
                    "Steps"
                ],
                "summary": "Gets a step field mapping",
                "operationId": "Steps_GetFieldMapping_GET",
                "consumes": [],
                "produces": [
                    "application/json",
                    "text/json",
                    "application/xml",
                    "text/xml"
                ],
                "parameters": [
                    {
                        "name": "X-Cyclr-Account",
                        "in": "header",
                        "description": "ID of Cyclr account",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "id",
                        "in": "path",
                        "description": "ID of the step to get the field mapping for",
                        "required": true,
                        "type": "string",
                        "format": "uuid"
                    },
                    {
                        "name": "fieldId",
                        "in": "path",
                        "description": "ID of the field mapping to get",
                        "required": true,
                        "type": "integer",
                        "format": "int32"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/CycleFieldModel"
                        }
                    },
                    "400": {
                        "description": "BadRequest"
                    },
                    "404": {
                        "description": "NotFound"
                    }
                },
                "security": [
                    {
                        "clientcredentials": []
                    },
                    {
                        "oauth2": []
                    }
                ]
            },
            "put": {
                "tags": [
                    "Steps"
                ],
                "summary": "Updates a step field mapping",
                "operationId": "Steps_UpdateFieldMapping_PUT",
                "consumes": [
                    "application/json",
                    "text/json",
                    "application/xml",
                    "text/xml",
                    "application/x-www-form-urlencoded"
                ],
                "produces": [
                    "application/json",
                    "text/json",
                    "application/xml",
                    "text/xml"
                ],
                "parameters": [
                    {
                        "name": "X-Cyclr-Account",
                        "in": "header",
                        "description": "ID of Cyclr account",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "id",
                        "in": "path",
                        "description": "ID of the step to update the field mapping for",
                        "required": true,
                        "type": "string",
                        "format": "uuid"
                    },
                    {
                        "name": "fieldId",
                        "in": "path",
                        "description": "Field ID",
                        "required": true,
                        "type": "integer",
                        "format": "int32"
                    },
                    {
                        "name": "model",
                        "in": "body",
                        "description": "Field mapping model",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/CycleFieldRequestModel"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK"
                    },
                    "400": {
                        "description": "BadRequest"
                    },
                    "404": {
                        "description": "NotFound"
                    }
                },
                "security": [
                    {
                        "clientcredentials": []
                    },
                    {
                        "oauth2": []
                    }
                ]
            }
        },
        "/v1.0/steps/{id}/fieldmappings/{fieldId}/lookup": {
            "post": {
                "tags": [
                    "Steps"
                ],
                "summary": "Triggers a field mapping lookup",
                "operationId": "Steps_FieldMappingLookup_POST",
                "consumes": [
                    "application/json",
                    "text/json",
                    "application/xml",
                    "text/xml",
                    "application/x-www-form-urlencoded"
                ],
                "produces": [
                    "application/json",
                    "text/json",
                    "application/xml",
                    "text/xml"
                ],
                "parameters": [
                    {
                        "name": "X-Cyclr-Account",
                        "in": "header",
                        "description": "ID of Cyclr account",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "id",
                        "in": "path",
                        "description": "ID of the step to trigger the field mapping lookup for",
                        "required": true,
                        "type": "string",
                        "format": "uuid"
                    },
                    {
                        "name": "fieldId",
                        "in": "path",
                        "description": "Field ID",
                        "required": true,
                        "type": "integer",
                        "format": "int32"
                    },
                    {
                        "name": "model",
                        "in": "body",
                        "description": "Trigger lookup model",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/FieldAndParameterLookupModel"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/LookupNameValuePair"
                            }
                        }
                    },
                    "400": {
                        "description": "BadRequest"
                    },
                    "404": {
                        "description": "NotFound"
                    }
                },
                "security": [
                    {
                        "clientcredentials": []
                    },
                    {
                        "oauth2": []
                    }
                ]
            }
        },
        "/v1.0/steps/{id}/parameters": {
            "get": {
                "tags": [
                    "Steps"
                ],
                "summary": "Gets step parameter mappings",
                "operationId": "Steps_GetParameters_GET",
                "consumes": [],
                "produces": [
                    "application/json",
                    "text/json",
                    "application/xml",
                    "text/xml"
                ],
                "parameters": [
                    {
                        "name": "X-Cyclr-Account",
                        "in": "header",
                        "description": "ID of Cyclr account",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "id",
                        "in": "path",
                        "description": "ID of the step to get parameter mappings for",
                        "required": true,
                        "type": "string",
                        "format": "uuid"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/CycleParameterModel"
                            }
                        }
                    },
                    "400": {
                        "description": "BadRequest"
                    },
                    "404": {
                        "description": "NotFound"
                    }
                },
                "security": [
                    {
                        "clientcredentials": []
                    },
                    {
                        "oauth2": []
                    }
                ]
            }
        },
        "/v1.0/steps/{id}/parameters/{parameterId}": {
            "get": {
                "tags": [
                    "Steps"
                ],
                "summary": "Gets a step parameter mapping",
                "operationId": "Steps_GetParameter_GET",
                "consumes": [],
                "produces": [
                    "application/json",
                    "text/json",
                    "application/xml",
                    "text/xml"
                ],
                "parameters": [
                    {
                        "name": "X-Cyclr-Account",
                        "in": "header",
                        "description": "ID of Cyclr account",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "id",
                        "in": "path",
                        "description": "ID of the step to get the parameter mapping for",
                        "required": true,
                        "type": "string",
                        "format": "uuid"
                    },
                    {
                        "name": "parameterId",
                        "in": "path",
                        "description": "ID of the step parameter mapping to get",
                        "required": true,
                        "type": "integer",
                        "format": "int32"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/CycleParameterModel"
                        }
                    },
                    "400": {
                        "description": "BadRequest"
                    },
                    "404": {
                        "description": "NotFound"
                    }
                },
                "security": [
                    {
                        "clientcredentials": []
                    },
                    {
                        "oauth2": []
                    }
                ]
            },
            "put": {
                "tags": [
                    "Steps"
                ],
                "summary": "Updates a step parameter mapping",
                "operationId": "Steps_UpdateParameter_PUT",
                "consumes": [
                    "application/json",
                    "text/json",
                    "application/xml",
                    "text/xml",
                    "application/x-www-form-urlencoded"
                ],
                "produces": [
                    "application/json",
                    "text/json",
                    "application/xml",
                    "text/xml"
                ],
                "parameters": [
                    {
                        "name": "X-Cyclr-Account",
                        "in": "header",
                        "description": "ID of Cyclr account",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "id",
                        "in": "path",
                        "description": "ID of the step to update the parameter mapping for",
                        "required": true,
                        "type": "string",
                        "format": "uuid"
                    },
                    {
                        "name": "parameterId",
                        "in": "path",
                        "description": "Parameter ID to update",
                        "required": true,
                        "type": "integer",
                        "format": "int32"
                    },
                    {
                        "name": "model",
                        "in": "body",
                        "description": "Parameter request model",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/CycleParameterRequestModel"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK"
                    },
                    "400": {
                        "description": "BadRequest"
                    },
                    "404": {
                        "description": "NotFound"
                    }
                },
                "security": [
                    {
                        "clientcredentials": []
                    },
                    {
                        "oauth2": []
                    }
                ]
            }
        },
        "/v1.0/steps/{id}/parameters/{parameterId}/lookup": {
            "post": {
                "tags": [
                    "Steps"
                ],
                "summary": "Triggers a parameter lookup",
                "operationId": "Steps_ParameterLookup_POST",
                "consumes": [
                    "application/json",
                    "text/json",
                    "application/xml",
                    "text/xml",
                    "application/x-www-form-urlencoded"
                ],
                "produces": [
                    "application/json",
                    "text/json",
                    "application/xml",
                    "text/xml"
                ],
                "parameters": [
                    {
                        "name": "X-Cyclr-Account",
                        "in": "header",
                        "description": "ID of Cyclr account",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "id",
                        "in": "path",
                        "description": "ID of the step to trigger the parameter lookup for",
                        "required": true,
                        "type": "string",
                        "format": "uuid"
                    },
                    {
                        "name": "parameterId",
                        "in": "path",
                        "description": "Parameter ID",
                        "required": true,
                        "type": "integer",
                        "format": "int32"
                    },
                    {
                        "name": "model",
                        "in": "body",
                        "description": "Trigger lookup model",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/FieldAndParameterLookupModel"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/LookupNameValuePair"
                            }
                        }
                    },
                    "400": {
                        "description": "BadRequest"
                    },
                    "404": {
                        "description": "NotFound"
                    }
                },
                "security": [
                    {
                        "clientcredentials": []
                    },
                    {
                        "oauth2": []
                    }
                ]
            }
        },
        "/v1.0/steps/{id}/fieldmappings/lookup": {
            "post": {
                "tags": [
                    "Steps"
                ],
                "summary": "Start custom field lookup for the method request and response",
                "operationId": "Steps_CustomFieldsLookup_POST",
                "consumes": [],
                "produces": [
                    "application/json",
                    "text/json",
                    "application/xml",
                    "text/xml"
                ],
                "parameters": [
                    {
                        "name": "X-Cyclr-Account",
                        "in": "header",
                        "description": "ID of Cyclr account",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "id",
                        "in": "path",
                        "description": "ID of the step to get custom fields for",
                        "required": true,
                        "type": "string",
                        "format": "uuid"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/MethodFieldModel"
                        }
                    },
                    "400": {
                        "description": "BadRequest"
                    },
                    "404": {
                        "description": "NotFound"
                    }
                },
                "security": [
                    {
                        "clientcredentials": []
                    },
                    {
                        "oauth2": []
                    }
                ]
            }
        },
        "/v1.0/templates": {
            "get": {
                "tags": [
                    "Templates"
                ],
                "summary": "Gets a list of templates",
                "operationId": "Templates_All_GET",
                "consumes": [],
                "produces": [
                    "application/json",
                    "text/json",
                    "application/xml",
                    "text/xml"
                ],
                "parameters": [
                    {
                        "name": "X-Cyclr-Account",
                        "in": "header",
                        "description": "ID of Cyclr account",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "pageSize",
                        "in": "query",
                        "description": "Size of the page to get",
                        "required": false,
                        "type": "integer",
                        "format": "int32"
                    },
                    {
                        "name": "page",
                        "in": "query",
                        "description": "The page to get",
                        "required": false,
                        "type": "integer",
                        "format": "int32"
                    },
                    {
                        "name": "orderBy",
                        "in": "query",
                        "description": "The property to order by",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "sortOrderAsc",
                        "in": "query",
                        "description": "True for ascending; false for descending",
                        "required": false,
                        "type": "boolean"
                    },
                    {
                        "name": "query",
                        "in": "query",
                        "description": "Query to search templates for",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "connectorName",
                        "in": "query",
                        "description": "Only get templates using the the named connector",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "connectorVersion",
                        "in": "query",
                        "description": "Only get templates with this version of the named connector",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "includeIcons",
                        "in": "query",
                        "description": "If true response will contain connector icons",
                        "required": false,
                        "type": "boolean"
                    },
                    {
                        "name": "includePrerequisites",
                        "in": "query",
                        "description": "If true response will contain mapping prerequisites",
                        "required": false,
                        "type": "boolean"
                    },
                    {
                        "name": "includeOptional",
                        "in": "query",
                        "description": "If true, prerequisites will also contain optional parameters and fields. Only used when includePrerequisites is true",
                        "required": false,
                        "type": "boolean"
                    },
                    {
                        "name": "lookupCustomFields",
                        "in": "query",
                        "description": "If true, will look for custom fields in all the template methods",
                        "required": false,
                        "type": "boolean"
                    },
                    {
                        "name": "tag",
                        "in": "query",
                        "description": "Only get templates with the tags",
                        "required": false,
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "collectionFormat": "multi"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/TemplateModel"
                            }
                        }
                    }
                },
                "security": [
                    {
                        "clientcredentials": []
                    },
                    {
                        "oauth2": []
                    }
                ]
            }
        },
        "/v1.0/templates/{id}": {
            "get": {
                "tags": [
                    "Templates"
                ],
                "summary": "Gets a template by ID",
                "operationId": "Templates_One_GET",
                "consumes": [],
                "produces": [
                    "application/json",
                    "text/json",
                    "application/xml",
                    "text/xml"
                ],
                "parameters": [
                    {
                        "name": "X-Cyclr-Account",
                        "in": "header",
                        "description": "ID of Cyclr account",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "id",
                        "in": "path",
                        "description": "ID of the template to get",
                        "required": true,
                        "type": "string",
                        "format": "uuid"
                    },
                    {
                        "name": "includeIcons",
                        "in": "query",
                        "description": "If true, the response will contain connector icons",
                        "required": false,
                        "type": "boolean"
                    },
                    {
                        "name": "includePrerequisites",
                        "in": "query",
                        "description": "If true, the response will contain mapping prerequisites",
                        "required": false,
                        "type": "boolean"
                    },
                    {
                        "name": "includeOptional",
                        "in": "query",
                        "description": "If true, prerequisites will also contain optional parameters and fields. Only used when includePrerequisites is true",
                        "required": false,
                        "type": "boolean"
                    },
                    {
                        "name": "lookupCustomFields",
                        "in": "query",
                        "description": "If true, will look for custom fields in all the template methods",
                        "required": false,
                        "type": "boolean"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/TemplateModel"
                        }
                    }
                },
                "security": [
                    {
                        "clientcredentials": []
                    },
                    {
                        "oauth2": []
                    }
                ]
            }
        },
        "/v1.0/templates/{id}/export": {
            "get": {
                "tags": [
                    "Templates"
                ],
                "summary": "Export the latest version of a template cycle",
                "operationId": "Templates_Export_GET",
                "consumes": [],
                "produces": [
                    "application/json",
                    "text/json",
                    "application/xml",
                    "text/xml"
                ],
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "ID of the template cycle",
                        "required": true,
                        "type": "string",
                        "format": "uuid"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "404": {
                        "description": "NotFound"
                    }
                },
                "security": [
                    {
                        "clientcredentials": []
                    },
                    {
                        "oauth2": []
                    }
                ]
            }
        },
        "/v1.0/templates/import": {
            "post": {
                "tags": [
                    "Templates"
                ],
                "summary": "Import a template cycle",
                "operationId": "Templates_Import_POST",
                "consumes": [
                    "application/json",
                    "text/json",
                    "application/x-www-form-urlencoded"
                ],
                "produces": [
                    "application/json",
                    "text/json",
                    "application/xml",
                    "text/xml"
                ],
                "parameters": [
                    {
                        "name": "cycleJson",
                        "in": "body",
                        "description": "The JSON of the template cycle to import",
                        "required": true,
                        "schema": {
                            "type": "object"
                        }
                    },
                    {
                        "name": "folderId",
                        "in": "query",
                        "description": "The folder the template cycle should belong in",
                        "required": false,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/TemplateModel"
                        }
                    },
                    "400": {
                        "description": "BadRequest"
                    }
                },
                "security": [
                    {
                        "clientcredentials": []
                    },
                    {
                        "oauth2": []
                    }
                ]
            }
        },
        "/v1.0/templates/{id}/install": {
            "post": {
                "tags": [
                    "Templates"
                ],
                "summary": "Installs the template",
                "operationId": "Templates_Install_POST",
                "consumes": [
                    "application/json",
                    "text/json",
                    "application/xml",
                    "text/xml",
                    "application/x-www-form-urlencoded"
                ],
                "produces": [
                    "application/json",
                    "text/json",
                    "application/xml",
                    "text/xml"
                ],
                "parameters": [
                    {
                        "name": "X-Cyclr-Account",
                        "in": "header",
                        "description": "ID of Cyclr account",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "id",
                        "in": "path",
                        "description": "ID of the template to install",
                        "required": true,
                        "type": "string",
                        "format": "uuid"
                    },
                    {
                        "name": "model",
                        "in": "body",
                        "description": "",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/TemplateInstallModel"
                        }
                    },
                    {
                        "name": "includeIcons",
                        "in": "query",
                        "description": "If true response will contain connector icons",
                        "required": false,
                        "type": "boolean"
                    },
                    {
                        "name": "includePrerequisites",
                        "in": "query",
                        "description": "If true, the response will contain mapping prerequisites",
                        "required": false,
                        "type": "boolean"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/CycleModel"
                        }
                    },
                    "404": {
                        "description": "NotFound"
                    }
                },
                "security": [
                    {
                        "clientcredentials": []
                    },
                    {
                        "oauth2": []
                    }
                ]
            }
        },
        "/v1.0/cycles/transactions": {
            "get": {
                "tags": [
                    "Transactions"
                ],
                "summary": "Gets the transactions for all cycles in the account",
                "operationId": "Transactions_AccountAll_GET",
                "consumes": [],
                "produces": [
                    "application/json",
                    "text/json",
                    "application/xml",
                    "text/xml"
                ],
                "parameters": [
                    {
                        "name": "X-Cyclr-Account",
                        "in": "header",
                        "description": "ID of Cyclr account",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "page",
                        "in": "query",
                        "description": "Page to get",
                        "required": false,
                        "type": "integer",
                        "format": "int32"
                    },
                    {
                        "name": "pageSize",
                        "in": "query",
                        "description": "Size of the page to get",
                        "required": false,
                        "type": "integer",
                        "format": "int32"
                    },
                    {
                        "name": "after",
                        "in": "query",
                        "description": "Only get transactions after or on this timestamp",
                        "required": false,
                        "type": "string",
                        "format": "date-time"
                    },
                    {
                        "name": "before",
                        "in": "query",
                        "description": "Only get transaction on or before this timestamp",
                        "required": false,
                        "type": "string",
                        "format": "date-time"
                    },
                    {
                        "name": "status",
                        "in": "query",
                        "description": "Allows you to limit the results to only Completed or InProgress transactions",
                        "required": false,
                        "type": "string",
                        "enum": [
                            "All",
                            "InProgress",
                            "Completed"
                        ]
                    },
                    {
                        "name": "splitType",
                        "in": "query",
                        "description": "Allows you to limit the results to only Split or Unsplit transactions",
                        "required": false,
                        "type": "string",
                        "enum": [
                            "All",
                            "Unsplit",
                            "Split"
                        ]
                    },
                    {
                        "name": "sortOrderAsc",
                        "in": "query",
                        "description": "True to sort in ascending order. False for descending order",
                        "required": false,
                        "type": "boolean"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/AccountTransactionModel"
                            }
                        }
                    },
                    "404": {
                        "description": "Cycle not found"
                    }
                },
                "security": [
                    {
                        "clientcredentials": []
                    },
                    {
                        "oauth2": []
                    }
                ]
            }
        },
        "/v1.0/cycles/{cycleId}/transactions": {
            "get": {
                "tags": [
                    "Transactions"
                ],
                "summary": "Gets the transactions for a cycle",
                "operationId": "Transactions_All_GET",
                "consumes": [],
                "produces": [
                    "application/json",
                    "text/json",
                    "application/xml",
                    "text/xml"
                ],
                "parameters": [
                    {
                        "name": "X-Cyclr-Account",
                        "in": "header",
                        "description": "ID of Cyclr account",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "cycleId",
                        "in": "path",
                        "description": "ID of the cycle",
                        "required": true,
                        "type": "string",
                        "format": "uuid"
                    },
                    {
                        "name": "page",
                        "in": "query",
                        "description": "Page to get",
                        "required": false,
                        "type": "integer",
                        "format": "int32"
                    },
                    {
                        "name": "pageSize",
                        "in": "query",
                        "description": "Size of the page to get",
                        "required": false,
                        "type": "integer",
                        "format": "int32"
                    },
                    {
                        "name": "query",
                        "in": "query",
                        "description": "Search query for transaction data, will only get transactions containing matching data",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "after",
                        "in": "query",
                        "description": "Only get transactions after or on this timestamp",
                        "required": false,
                        "type": "string",
                        "format": "date-time"
                    },
                    {
                        "name": "before",
                        "in": "query",
                        "description": "Only get transaction on or before this timestamp",
                        "required": false,
                        "type": "string",
                        "format": "date-time"
                    },
                    {
                        "name": "status",
                        "in": "query",
                        "description": "Allows you to limit the results to only Completed or InProgress transactions",
                        "required": false,
                        "type": "string",
                        "enum": [
                            "All",
                            "InProgress",
                            "Completed"
                        ]
                    },
                    {
                        "name": "splitType",
                        "in": "query",
                        "description": "Allows you to limit the results to only Split or Unsplit transactions",
                        "required": false,
                        "type": "string",
                        "enum": [
                            "All",
                            "Unsplit",
                            "Split"
                        ]
                    },
                    {
                        "name": "parentTransactionId",
                        "in": "query",
                        "description": "Limits the results to transactions split from this parent",
                        "required": false,
                        "type": "string",
                        "format": "uuid"
                    },
                    {
                        "name": "transactionType",
                        "in": "query",
                        "description": "Limits the results to transactions matching the specified type(s).",
                        "required": false,
                        "type": "string",
                        "enum": [
                            "All",
                            "OnlySuccessful",
                            "OnlyErrors",
                            "OnlyWarnings",
                            "OnlyErrorsAndWarnings"
                        ]
                    },
                    {
                        "name": "sortColumn",
                        "in": "query",
                        "description": "Column to sort by.",
                        "required": false,
                        "type": "string",
                        "enum": [
                            "StartedTimestamp",
                            "LastRunTimestamp",
                            "TimeRunning"
                        ]
                    },
                    {
                        "name": "sortAscending",
                        "in": "query",
                        "description": "Sort ascending or descending.",
                        "required": false,
                        "type": "boolean"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/TransactionModel"
                            }
                        }
                    },
                    "404": {
                        "description": "Cycle not found"
                    }
                },
                "security": [
                    {
                        "clientcredentials": []
                    },
                    {
                        "oauth2": []
                    }
                ]
            }
        },
        "/v1.0/cycles/{cycleId}/transactions/{id}": {
            "get": {
                "tags": [
                    "Transactions"
                ],
                "summary": "Gets the transaction items for the specified transaction",
                "operationId": "Transactions_All_GET",
                "consumes": [],
                "produces": [
                    "application/json",
                    "text/json",
                    "application/xml",
                    "text/xml"
                ],
                "parameters": [
                    {
                        "name": "X-Cyclr-Account",
                        "in": "header",
                        "description": "ID of Cyclr account",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "cycleId",
                        "in": "path",
                        "description": "ID of the cycle the transaction is for",
                        "required": true,
                        "type": "string",
                        "format": "uuid"
                    },
                    {
                        "name": "id",
                        "in": "path",
                        "description": "ID of the transaction to get the items for",
                        "required": true,
                        "type": "string",
                        "format": "uuid"
                    },
                    {
                        "name": "page",
                        "in": "query",
                        "description": "Page to get",
                        "required": false,
                        "type": "integer",
                        "format": "int32"
                    },
                    {
                        "name": "pageSize",
                        "in": "query",
                        "description": "Size of the page to get",
                        "required": false,
                        "type": "integer",
                        "format": "int32"
                    },
                    {
                        "name": "query",
                        "in": "query",
                        "description": "Search query to filter items",
                        "required": false,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/TransactionItemModel"
                            }
                        }
                    },
                    "404": {
                        "description": "Transaction not found"
                    }
                },
                "security": [
                    {
                        "clientcredentials": []
                    },
                    {
                        "oauth2": []
                    }
                ]
            }
        },
        "/v1.0/cycles/{cycleId}/transactions/{id}/replay": {
            "put": {
                "tags": [
                    "Transactions"
                ],
                "summary": "Replays the specified cycle transaction",
                "operationId": "Transactions_Replay_PUT",
                "consumes": [],
                "produces": [
                    "application/json",
                    "text/json",
                    "application/xml",
                    "text/xml"
                ],
                "parameters": [
                    {
                        "name": "X-Cyclr-Account",
                        "in": "header",
                        "description": "ID of Cyclr account",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "cycleId",
                        "in": "path",
                        "description": "ID of the cycle",
                        "required": true,
                        "type": "string",
                        "format": "uuid"
                    },
                    {
                        "name": "id",
                        "in": "path",
                        "description": "ID of the transaction to replay",
                        "required": true,
                        "type": "string",
                        "format": "uuid"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK"
                    },
                    "400": {
                        "description": "BadRequest",
                        "schema": {
                            "$ref": "#/definitions/BadRequestModel"
                        }
                    },
                    "404": {
                        "description": "Transaction not found in cycle"
                    },
                    "500": {
                        "description": "InternalServerError",
                        "schema": {
                            "$ref": "#/definitions/BadRequestModel"
                        }
                    }
                },
                "security": [
                    {
                        "clientcredentials": []
                    },
                    {
                        "oauth2": []
                    }
                ]
            }
        },
        "/v1.0/accounts/{accountId}/users": {
            "get": {
                "tags": [
                    "Users"
                ],
                "summary": "Gets a list of all the usernames in the account",
                "operationId": "Users_All_GET",
                "consumes": [],
                "produces": [
                    "application/json",
                    "text/json",
                    "application/xml",
                    "text/xml"
                ],
                "parameters": [
                    {
                        "name": "accountId",
                        "in": "path",
                        "description": "ID of the account to get the users of",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        }
                    },
                    "404": {
                        "description": "Account not found"
                    }
                },
                "security": [
                    {
                        "clientcredentials": []
                    },
                    {
                        "oauth2": []
                    }
                ]
            },
            "put": {
                "tags": [
                    "Users"
                ],
                "summary": "Adds a user to the specified account, password only required for new users",
                "operationId": "Users_AddUser_PUT",
                "consumes": [
                    "application/json",
                    "text/json",
                    "application/xml",
                    "text/xml",
                    "application/x-www-form-urlencoded"
                ],
                "produces": [
                    "application/json",
                    "text/json",
                    "application/xml",
                    "text/xml"
                ],
                "parameters": [
                    {
                        "name": "accountId",
                        "in": "path",
                        "description": "Id of the account to add the user to",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "model",
                        "in": "body",
                        "description": "User to add to the account",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/UserModel"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        }
                    },
                    "400": {
                        "description": "Request failed. Check message for reason",
                        "schema": {
                            "$ref": "#/definitions/BadRequestModel"
                        }
                    },
                    "404": {
                        "description": "No account was found with the specified ID"
                    }
                },
                "security": [
                    {
                        "clientcredentials": []
                    },
                    {
                        "oauth2": []
                    }
                ]
            },
            "delete": {
                "tags": [
                    "Users"
                ],
                "summary": "Removes a user from the specified account",
                "operationId": "Users_RemoveUser_DELETE",
                "consumes": [
                    "application/json",
                    "text/json",
                    "application/xml",
                    "text/xml",
                    "application/x-www-form-urlencoded"
                ],
                "produces": [
                    "application/json",
                    "text/json",
                    "application/xml",
                    "text/xml"
                ],
                "parameters": [
                    {
                        "name": "accountId",
                        "in": "path",
                        "description": "Id of the account to remove the user from",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "model",
                        "in": "body",
                        "description": "Username of the user to remove from the account",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/DeleteUserModel"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK"
                    },
                    "404": {
                        "description": "No account/user was found with the specified ID/username"
                    }
                },
                "security": [
                    {
                        "clientcredentials": []
                    },
                    {
                        "oauth2": []
                    }
                ]
            }
        },
        "/v1.0/users": {
            "put": {
                "tags": [
                    "Users"
                ],
                "summary": "Sets a new password for the specified user",
                "operationId": "Users_ChangePassword_PUT",
                "consumes": [
                    "application/json",
                    "text/json",
                    "application/xml",
                    "text/xml",
                    "application/x-www-form-urlencoded"
                ],
                "produces": [
                    "application/json",
                    "text/json",
                    "application/xml",
                    "text/xml"
                ],
                "parameters": [
                    {
                        "name": "model",
                        "in": "body",
                        "description": "User to set the password of",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/UserModel"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        }
                    },
                    "400": {
                        "description": "Request failed. Check message for reason",
                        "schema": {
                            "$ref": "#/definitions/BadRequestModel"
                        }
                    },
                    "404": {
                        "description": "No user was found with the specified username"
                    }
                },
                "security": [
                    {
                        "clientcredentials": []
                    },
                    {
                        "oauth2": []
                    }
                ]
            }
        },
        "/v1.0/users/launch": {
            "post": {
                "tags": [
                    "Users"
                ],
                "summary": "Generates a LAUNCH URL for the user. Will create user and/or account as required",
                "operationId": "Users_CreateUserLaunchToken_POST",
                "consumes": [
                    "application/json",
                    "text/json",
                    "application/xml",
                    "text/xml",
                    "application/x-www-form-urlencoded"
                ],
                "produces": [
                    "application/json",
                    "text/json",
                    "application/xml",
                    "text/xml"
                ],
                "parameters": [
                    {
                        "name": "model",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/UserLaunchModel"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/LaunchTokenModel"
                        }
                    },
                    "400": {
                        "description": "BadRequest"
                    }
                },
                "security": [
                    {
                        "clientcredentials": []
                    },
                    {
                        "oauth2": []
                    }
                ]
            }
        },
        "/v1.0/users/marketplace": {
            "post": {
                "tags": [
                    "Users"
                ],
                "summary": "Generates a Marketplace URL for the user. Will create user and/or account as required",
                "operationId": "Users_CreateUserMarketplaceToken_POST",
                "consumes": [
                    "application/json",
                    "text/json",
                    "application/xml",
                    "text/xml",
                    "application/x-www-form-urlencoded"
                ],
                "produces": [
                    "application/json",
                    "text/json",
                    "application/xml",
                    "text/xml"
                ],
                "parameters": [
                    {
                        "name": "model",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/UserMarketplaceModel"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/MarketplaceTokenModel"
                        }
                    },
                    "400": {
                        "description": "BadRequest"
                    }
                },
                "security": [
                    {
                        "clientcredentials": []
                    },
                    {
                        "oauth2": []
                    }
                ]
            }
        },
        "/v1.0/users/orbit": {
            "post": {
                "tags": [
                    "Users"
                ],
                "summary": "Generates an ORBIT URL for the user",
                "operationId": "Users_CreateUserOrbitToken_POST",
                "consumes": [
                    "application/json",
                    "text/json",
                    "application/xml",
                    "text/xml",
                    "application/x-www-form-urlencoded"
                ],
                "produces": [
                    "application/json",
                    "text/json",
                    "application/xml",
                    "text/xml"
                ],
                "parameters": [
                    {
                        "name": "model",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/UserOrbitModel"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/UserOrbitTokenModel"
                        }
                    },
                    "400": {
                        "description": "BadRequest"
                    }
                },
                "security": [
                    {
                        "clientcredentials": []
                    },
                    {
                        "oauth2": []
                    }
                ]
            }
        }
    },
    "definitions": {
        "CustomCategoryRequestModel": {
            "description": "Model to create a Custom Category in an Account Connector.",
            "type": "object",
            "properties": {
                "CustomizableCategoryId": {
                    "format": "uuid",
                    "description": "Id of the customizable category to copy",
                    "type": "string",
                    "example": "00000000-0000-0000-0000-000000000000"
                },
                "Object": {
                    "description": "Object type to use for the custom category",
                    "type": "string"
                },
                "IsLookupValue": {
                    "description": "True if the object value is from the customizable category lookup method",
                    "type": "boolean"
                }
            }
        },
        "CustomCategoryResponseModel": {
            "description": "Model for an Account Connector Custom Category.",
            "type": "object",
            "properties": {
                "Id": {
                    "format": "int32",
                    "description": "ID of the Custom Category",
                    "type": "integer",
                    "readOnly": true
                },
                "CustomizableCategoryId": {
                    "format": "uuid",
                    "description": "Id of the customizable category to copy",
                    "type": "string",
                    "example": "00000000-0000-0000-0000-000000000000"
                },
                "Object": {
                    "description": "Object type to use for the custom category",
                    "type": "string"
                },
                "IsLookupValue": {
                    "description": "True if the object value is from the customizable category lookup method",
                    "type": "boolean"
                }
            }
        },
        "LookupNameValuePair": {
            "type": "object",
            "properties": {
                "Name": {
                    "type": "object"
                },
                "Value": {
                    "type": "object"
                }
            }
        },
        "AccountConnectorModel": {
            "description": "Web response model for AccountConnector",
            "required": [
                "Name"
            ],
            "type": "object",
            "properties": {
                "Id": {
                    "format": "int32",
                    "description": "Account connector ID",
                    "type": "integer"
                },
                "Name": {
                    "description": "Account connector name",
                    "type": "string"
                },
                "Description": {
                    "description": "Account connector description",
                    "type": "string"
                },
                "AuthValue": {
                    "description": "Authentication value:\r\nFor Basic Authentication, this is the base64 encoded value of username and password;\r\nFor OAuth, this value is a serialized JSON object, e.g.\r\n{\"AccessToken\":\"access_token\",\"RefreshToken\":\"refresh_token\",\"Expires\":\"YYYY-MM-DDTHH:mm:ss.sssZ\",\"RefreshExpires\":\"YYYY-MM-DDTHH:mm:ss.sssZ\"}\"",
                    "type": "string"
                },
                "Authenticated": {
                    "description": "If the account connector is authenticated",
                    "type": "boolean",
                    "readOnly": true
                },
                "Connector": {
                    "$ref": "#/definitions/ConnectorModel",
                    "description": "The referenced connector",
                    "readOnly": true
                },
                "IsPartnerIntegrationConnector": {
                    "description": "If the connector is used to integrate connector engine with the host application.\r\nIf it is, the connector will have special handling applied to it",
                    "type": "boolean"
                },
                "Properties": {
                    "description": "A collection of account connector properties",
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/AccountConnectorPropertyModel"
                    },
                    "readOnly": true
                },
                "CustomFields": {
                    "description": "A collection of custom fields",
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/CustomFieldModel"
                    },
                    "readOnly": true
                }
            }
        },
        "ConnectorModel": {
            "description": "Web response model for connector",
            "type": "object",
            "properties": {
                "Id": {
                    "format": "int32",
                    "description": "ID of the connector",
                    "type": "integer",
                    "readOnly": true
                },
                "Name": {
                    "description": "Connectors name",
                    "type": "string",
                    "readOnly": true
                },
                "Description": {
                    "description": "Connectors description",
                    "type": "string",
                    "readOnly": true
                },
                "Status": {
                    "description": "Connector status",
                    "enum": [
                        "Unknown",
                        "Approved",
                        "Beta",
                        "Planned"
                    ],
                    "type": "string",
                    "readOnly": true
                },
                "Version": {
                    "description": "Connector version",
                    "type": "string",
                    "readOnly": true
                },
                "Icon": {
                    "description": "Base64 img data for the connector icon",
                    "type": "string",
                    "readOnly": true
                },
                "AuthDescription": {
                    "description": "Authentication description. Deprecated. Please use Authentication instead.",
                    "type": "string",
                    "readOnly": true
                },
                "AuthType": {
                    "description": "Authentication type. Deprecated. Please use Authentication instead.",
                    "enum": [
                        "None",
                        "ApiKey",
                        "Basic",
                        "OAuth1",
                        "OAuth2",
                        "Kerberos",
                        "NetSuiteOAuth1",
                        "ClientCertificate"
                    ],
                    "type": "string",
                    "readOnly": true
                },
                "OAuth2Type": {
                    "description": "OAuth 2 Type. Deprecated. Please use Authentication instead.",
                    "enum": [
                        "Unknown",
                        "AuthorisationCode",
                        "ClientCredentials",
                        "PasswordCredentials"
                    ],
                    "type": "string",
                    "readOnly": true
                },
                "AuthScheme": {
                    "description": "Authentication scheme. Deprecated. Please use Authentication instead.",
                    "type": "string",
                    "readOnly": true
                },
                "Parameters": {
                    "description": "Parameters used by the connector",
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/ConnectorParameter"
                    },
                    "readOnly": true
                },
                "Triggers": {
                    "description": "Available triggers in the connector",
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/ConnectorTriggerModel"
                    },
                    "readOnly": true
                },
                "IsSystemConnector": {
                    "description": "Indicates if the connector is a system connector / Cyclr utility",
                    "type": "boolean"
                },
                "Categories": {
                    "description": "Catagories that the connector a member of",
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "readOnly": true
                },
                "CustomizableCategories": {
                    "description": "Customizable categories in the connector",
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/CustomizableCategoryModel"
                    }
                },
                "PartnerSetupGuideUrl": {
                    "description": "URL to the partner setup guide.",
                    "type": "string",
                    "readOnly": true
                },
                "Authentication": {
                    "description": "Available authentication options for the connector",
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/ConnectorAuthenticationModel"
                    },
                    "readOnly": true
                }
            }
        },
        "AccountConnectorPropertyModel": {
            "description": "Model for an account connector property",
            "required": [
                "Name",
                "Value"
            ],
            "type": "object",
            "properties": {
                "Name": {
                    "description": "Account connector property name",
                    "type": "string"
                },
                "Value": {
                    "description": "Account connector property value",
                    "type": "string"
                },
                "Id": {
                    "format": "int32",
                    "description": "Account connector property ID",
                    "type": "integer"
                },
                "AccountConnectorId": {
                    "format": "int32",
                    "description": "Account connector ID",
                    "type": "integer",
                    "readOnly": true
                }
            }
        },
        "CustomFieldModel": {
            "description": "Model for an account connector custom field",
            "required": [
                "ConnectorField",
                "SystemField",
                "DisplayName",
                "MethodUniqueIdentifier"
            ],
            "type": "object",
            "properties": {
                "Id": {
                    "format": "int32",
                    "description": "Custom field ID",
                    "type": "integer",
                    "readOnly": true
                },
                "ConnectorField": {
                    "description": "Connector field",
                    "type": "string"
                },
                "SystemField": {
                    "description": "System field",
                    "type": "string"
                },
                "DisplayName": {
                    "description": "Display field",
                    "type": "string"
                },
                "Description": {
                    "description": "Custom field description",
                    "type": "string"
                },
                "DataType": {
                    "description": "Custom field data type",
                    "enum": [
                        "Undefined",
                        "Text",
                        "Integer",
                        "Float",
                        "Boolean",
                        "DateTime",
                        "File",
                        "Decimal"
                    ],
                    "type": "string"
                },
                "DataTypeFormat": {
                    "description": "Format of the data type",
                    "type": "string"
                },
                "MethodUniqueIdentifier": {
                    "format": "uuid",
                    "description": "Unique identifier for the method that this field is for",
                    "type": "string",
                    "example": "00000000-0000-0000-0000-000000000000"
                },
                "EntityIdentifier": {
                    "description": "If this is a custom field for a method that has a MethodEntityIdentifier, this field will \r\ncontain the {name:id} to restrict the field to",
                    "type": "string"
                },
                "ForRequestFormat": {
                    "description": "True if field is for request format, false if for response format",
                    "type": "boolean"
                }
            }
        },
        "ConnectorParameter": {
            "description": "Model for a parameter in a connector",
            "type": "object",
            "properties": {
                "IsAccountConnectorProperty": {
                    "description": "Indicates if the parameter value must be set in an Account Connector",
                    "type": "boolean"
                },
                "TargetType": {
                    "description": "Target type of the parameter",
                    "enum": [
                        "Index",
                        "HttpHeader",
                        "MergeField",
                        "QueryString",
                        "FilterField",
                        "ResponseField",
                        "Script"
                    ],
                    "type": "string"
                },
                "TargetName": {
                    "description": "Target name of the parameter",
                    "type": "string"
                },
                "IsSensitive": {
                    "description": "Indicates if a connector level property will contain sensitive data",
                    "type": "boolean"
                },
                "Id": {
                    "format": "int32",
                    "description": "Id of the field or parameter",
                    "type": "integer",
                    "readOnly": true
                },
                "Name": {
                    "description": "Name of the field/parameter",
                    "type": "string",
                    "readOnly": true
                },
                "Description": {
                    "description": "Description of the field/parameter",
                    "type": "string",
                    "readOnly": true
                },
                "IsOptional": {
                    "description": "Indicates if the field/parameter is optional or required",
                    "type": "boolean",
                    "readOnly": true
                },
                "DataType": {
                    "description": "Data type of the field/parameter. Will always be string for parameters",
                    "enum": [
                        "Undefined",
                        "Text",
                        "Integer",
                        "Float",
                        "Boolean",
                        "DateTime",
                        "File",
                        "Decimal"
                    ],
                    "type": "string",
                    "readOnly": true
                },
                "TriggerName": {
                    "description": "The lookup trigger name for this field/parameter",
                    "type": "string",
                    "readOnly": true
                },
                "Values": {
                    "description": "Drop down list values for the field/parameter",
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "readOnly": true
                },
                "DisplayOrder": {
                    "format": "int32",
                    "description": "Display order for the field/parameter",
                    "type": "integer",
                    "readOnly": true
                },
                "Triggers": {
                    "description": "Available triggers for the field/parameter",
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/TriggerModel"
                    },
                    "readOnly": true
                }
            }
        },
        "ConnectorTriggerModel": {
            "type": "object",
            "properties": {
                "TriggerId": {
                    "format": "int32",
                    "type": "integer"
                },
                "MethodId": {
                    "format": "int32",
                    "type": "integer"
                },
                "Name": {
                    "type": "string"
                },
                "HumanReadableKey": {
                    "type": "string"
                },
                "IdentifierKey": {
                    "type": "string"
                },
                "SubTriggers": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                }
            }
        },
        "CustomizableCategoryModel": {
            "description": "Model for a customizable category",
            "type": "object",
            "properties": {
                "Id": {
                    "format": "uuid",
                    "description": "Id of the customizable category",
                    "type": "string",
                    "example": "00000000-0000-0000-0000-000000000000"
                },
                "Name": {
                    "description": "Name of customizable category",
                    "type": "string"
                }
            }
        },
        "ConnectorAuthenticationModel": {
            "description": "Web response model for connector authentication",
            "type": "object",
            "properties": {
                "Id": {
                    "format": "uuid",
                    "description": "Id of the connector authentication",
                    "type": "string",
                    "readOnly": true,
                    "example": "00000000-0000-0000-0000-000000000000"
                },
                "AuthName": {
                    "description": "Authentication name",
                    "type": "string",
                    "readOnly": true
                },
                "AuthDescription": {
                    "description": "Authentication description",
                    "type": "string",
                    "readOnly": true
                },
                "AuthType": {
                    "description": "Authentication type",
                    "enum": [
                        "None",
                        "ApiKey",
                        "Basic",
                        "OAuth1",
                        "OAuth2",
                        "Kerberos",
                        "NetSuiteOAuth1",
                        "ClientCertificate"
                    ],
                    "type": "string",
                    "readOnly": true
                },
                "OAuth2Type": {
                    "description": "OAuth 2 Type",
                    "enum": [
                        "Unknown",
                        "AuthorisationCode",
                        "ClientCredentials",
                        "PasswordCredentials"
                    ],
                    "type": "string",
                    "readOnly": true
                },
                "AuthScheme": {
                    "description": "Authentication scheme",
                    "type": "string",
                    "readOnly": true
                }
            }
        },
        "TriggerModel": {
            "type": "object",
            "properties": {
                "AccountConnectorId": {
                    "format": "int32",
                    "type": "integer"
                },
                "EntityId": {
                    "format": "int32",
                    "type": "integer"
                },
                "EntityType": {
                    "enum": [
                        "Field",
                        "Parameter"
                    ],
                    "type": "string"
                },
                "EntityDisplayName": {
                    "type": "string"
                },
                "TriggerId": {
                    "format": "int32",
                    "type": "integer"
                },
                "MethodId": {
                    "format": "int32",
                    "type": "integer"
                },
                "Name": {
                    "type": "string"
                },
                "HumanReadableKey": {
                    "type": "string"
                },
                "IdentifierKey": {
                    "type": "string"
                },
                "SubTriggers": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                }
            }
        },
        "AccountConnectorWebRequestModel": {
            "description": "Web request model for AccountConnector",
            "required": [
                "ConnectorName",
                "ConnectorVersion",
                "Name"
            ],
            "type": "object",
            "properties": {
                "ConnectorName": {
                    "description": "Connector name",
                    "type": "string"
                },
                "ConnectorVersion": {
                    "description": "Connector version",
                    "type": "string"
                },
                "Name": {
                    "description": "Account connector name",
                    "type": "string"
                },
                "Description": {
                    "description": "Account connector description",
                    "type": "string"
                },
                "AuthenticationId": {
                    "format": "uuid",
                    "description": "Id of connector authentication method",
                    "type": "string",
                    "example": "00000000-0000-0000-0000-000000000000"
                },
                "AuthValue": {
                    "description": "Authentication value:\r\nFor Basic Authentication, this is the base64 encoded value of username and password;\r\nFor OAuth, this value is a serialized JSON object, e.g.\r\n{\"AccessToken\":\"access_token\",\"RefreshToken\":\"refresh_token\",\"Expires\":\"YYYY-MM-DDTHH:mm:ss.sssZ\",\"RefreshExpires\":\"YYYY-MM-DDTHH:mm:ss.sssZ\"}\"",
                    "type": "string"
                },
                "IsPartnerIntegrationConnector": {
                    "description": "If the connector is used to integrate connector engine with the host application.\r\nIf it is, the connector will have special handling applied to it",
                    "type": "boolean"
                },
                "Properties": {
                    "description": "Account connector property values",
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/AccountConnectorPropertyModel"
                    }
                }
            }
        },
        "AccountConnectorDeauthenticationModel": {
            "description": "Response model for connector de-authentication",
            "type": "object",
            "properties": {
                "Message": {
                    "description": "Message confirming de-authentication of the connector",
                    "type": "string"
                },
                "DeactivatedCycleIds": {
                    "description": "IDs of cycles which were deactivated during the de-authentication",
                    "type": "array",
                    "items": {
                        "format": "uuid",
                        "type": "string",
                        "example": "00000000-0000-0000-0000-000000000000"
                    }
                }
            }
        },
        "MethodCallRequestModel": {
            "description": "Request model for calling a method",
            "type": "object",
            "properties": {
                "Parameters": {
                    "description": "Parameter values for the call",
                    "type": "object",
                    "additionalProperties": {
                        "type": "string"
                    }
                },
                "Fields": {
                    "description": "Field values for the call",
                    "type": "object",
                    "additionalProperties": {
                        "type": "string"
                    }
                },
                "Mergefields": {
                    "description": "Mergefield values for the call",
                    "type": "object",
                    "additionalProperties": {
                        "type": "string"
                    }
                }
            }
        },
        "MethodCallResponseModel": {
            "description": "Response model for calling a method",
            "required": [
                "Fields"
            ],
            "type": "object",
            "properties": {
                "Fields": {
                    "description": "Field ID and value from the call",
                    "type": "object",
                    "additionalProperties": {
                        "type": "object"
                    }
                },
                "HttpRequest": {
                    "description": "The raw http request that was made",
                    "type": "string"
                },
                "HttpResponse": {
                    "description": "The raw http response that was received",
                    "type": "string"
                }
            }
        },
        "CustomConnector": {
            "description": "Response model for a custom connector",
            "type": "object",
            "properties": {
                "Id": {
                    "format": "int32",
                    "description": "ID of the custom connector",
                    "type": "integer"
                },
                "Name": {
                    "description": "Name of the custom connector",
                    "type": "string"
                },
                "Version": {
                    "description": "Version of the custom connector",
                    "type": "string"
                }
            }
        },
        "OneTimeTokenModel": {
            "type": "object",
            "properties": {
                "Token": {
                    "type": "string"
                },
                "ExpiresAtUtc": {
                    "format": "date-time",
                    "type": "string"
                }
            }
        },
        "AccountSignInTokenRequest": {
            "description": "Creates a sign in token for the account",
            "type": "object",
            "properties": {
                "Username": {
                    "description": "Username of the user the token should sign in",
                    "type": "string"
                }
            }
        },
        "AccountResponseModel": {
            "description": "Model for Cyclr accounts",
            "required": [
                "Name"
            ],
            "type": "object",
            "properties": {
                "CreatedDate": {
                    "format": "date-time",
                    "description": "UTC time and date that the account was created",
                    "type": "string",
                    "readOnly": true
                },
                "Id": {
                    "description": "API ID for the account",
                    "type": "string"
                },
                "Name": {
                    "description": "The accounts name",
                    "type": "string"
                },
                "Description": {
                    "description": "Optional description of the account",
                    "type": "string"
                },
                "AuditInfo": {
                    "description": "Optional account audit info for partner application",
                    "type": "string"
                },
                "TaskAuditInfo": {
                    "description": "Optional task audit info for partner application",
                    "type": "string"
                },
                "Timezone": {
                    "description": "Timezone for the account, IANA time zone database format",
                    "type": "string"
                },
                "NextBillDateUtc": {
                    "format": "date-time",
                    "description": "UTC time and date for the next billing date in UTC\r\nIf not provided, it will default to a month after the current date",
                    "type": "string"
                },
                "StepDataSuccessRetentionHours": {
                    "format": "int32",
                    "description": "Hours to retain transactions for cycles in this account after successful completion",
                    "type": "integer"
                },
                "StepDataErroredRetentionHours": {
                    "format": "int32",
                    "description": "Minutes to retain transactions for cycles in this account after an errored completion",
                    "type": "integer"
                },
                "TransactionErrorWebhookEnabled": {
                    "description": "Indicates if a transaction error notification webhook should be called for the account",
                    "type": "boolean"
                },
                "TransactionErrorWebhookUrl": {
                    "description": "URL to send transaction error notifications to",
                    "type": "string"
                },
                "TransactionErrorWebhookIncludeWarnings": {
                    "description": "When set to true will send warnings to the error webhook",
                    "type": "boolean"
                }
            }
        },
        "AccountCreateModel": {
            "description": "Model for creating an account",
            "required": [
                "Name"
            ],
            "type": "object",
            "properties": {
                "ParentAccountId": {
                    "description": "Optional ID of parent account to create a sub account",
                    "type": "string"
                },
                "Id": {
                    "description": "API ID for the account",
                    "type": "string"
                },
                "Name": {
                    "description": "The accounts name",
                    "type": "string"
                },
                "Description": {
                    "description": "Optional description of the account",
                    "type": "string"
                },
                "AuditInfo": {
                    "description": "Optional account audit info for partner application",
                    "type": "string"
                },
                "TaskAuditInfo": {
                    "description": "Optional task audit info for partner application",
                    "type": "string"
                },
                "Timezone": {
                    "description": "Timezone for the account, IANA time zone database format",
                    "type": "string"
                },
                "NextBillDateUtc": {
                    "format": "date-time",
                    "description": "UTC time and date for the next billing date in UTC\r\nIf not provided, it will default to a month after the current date",
                    "type": "string"
                },
                "StepDataSuccessRetentionHours": {
                    "format": "int32",
                    "description": "Hours to retain transactions for cycles in this account after successful completion",
                    "type": "integer"
                },
                "StepDataErroredRetentionHours": {
                    "format": "int32",
                    "description": "Minutes to retain transactions for cycles in this account after an errored completion",
                    "type": "integer"
                },
                "TransactionErrorWebhookEnabled": {
                    "description": "Indicates if a transaction error notification webhook should be called for the account",
                    "type": "boolean"
                },
                "TransactionErrorWebhookUrl": {
                    "description": "URL to send transaction error notifications to",
                    "type": "string"
                },
                "TransactionErrorWebhookIncludeWarnings": {
                    "description": "When set to true will send warnings to the error webhook",
                    "type": "boolean"
                }
            }
        },
        "AccountUpdateModel": {
            "description": "Model for updating an account",
            "required": [
                "Name"
            ],
            "type": "object",
            "properties": {
                "Id": {
                    "description": "API ID for the account",
                    "type": "string"
                },
                "Name": {
                    "description": "The accounts name",
                    "type": "string"
                },
                "Description": {
                    "description": "Optional description of the account",
                    "type": "string"
                },
                "AuditInfo": {
                    "description": "Optional account audit info for partner application",
                    "type": "string"
                },
                "TaskAuditInfo": {
                    "description": "Optional task audit info for partner application",
                    "type": "string"
                },
                "Timezone": {
                    "description": "Timezone for the account, IANA time zone database format",
                    "type": "string"
                },
                "NextBillDateUtc": {
                    "format": "date-time",
                    "description": "UTC time and date for the next billing date in UTC\r\nIf not provided, it will default to a month after the current date",
                    "type": "string"
                },
                "StepDataSuccessRetentionHours": {
                    "format": "int32",
                    "description": "Hours to retain transactions for cycles in this account after successful completion",
                    "type": "integer"
                },
                "StepDataErroredRetentionHours": {
                    "format": "int32",
                    "description": "Minutes to retain transactions for cycles in this account after an errored completion",
                    "type": "integer"
                },
                "TransactionErrorWebhookEnabled": {
                    "description": "Indicates if a transaction error notification webhook should be called for the account",
                    "type": "boolean"
                },
                "TransactionErrorWebhookUrl": {
                    "description": "URL to send transaction error notifications to",
                    "type": "string"
                },
                "TransactionErrorWebhookIncludeWarnings": {
                    "description": "When set to true will send warnings to the error webhook",
                    "type": "boolean"
                }
            }
        },
        "AccountTaskUsage": {
            "description": "Task usage for an account",
            "type": "object",
            "properties": {
                "Id": {
                    "format": "uuid",
                    "description": "ID of the account the task usage is for",
                    "type": "string",
                    "example": "00000000-0000-0000-0000-000000000000"
                },
                "TasksUsed": {
                    "format": "int32",
                    "description": "The amount of tasks used in the period",
                    "type": "integer"
                },
                "AuditInfo": {
                    "description": "The account audit info",
                    "type": "string"
                },
                "TaskAuditInto": {
                    "description": "The account task audit info",
                    "type": "string"
                },
                "StartTime": {
                    "format": "date-time",
                    "description": "Start timestamp for the task usage",
                    "type": "string"
                },
                "EndTime": {
                    "format": "date-time",
                    "description": "End timestamp for the task usage",
                    "type": "string"
                }
            }
        },
        "AccountLaunchModel": {
            "description": "Model to create an account LAUNCH",
            "type": "object",
            "properties": {
                "RunOnce": {
                    "description": "True if the cycle to be launched should only be run once",
                    "type": "boolean"
                },
                "Tags": {
                    "description": "List of tags that a cycle must have at least one of to appear in LAUNCH",
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "AutoInstall": {
                    "description": "Set to false if you don't want Cyclr to automatically install the template when there's only one available",
                    "type": "boolean"
                },
                "SingleInstall": {
                    "description": "Set to true for templates to only appear in LAUNCH if they haven't been installed in the account",
                    "type": "boolean"
                },
                "Start": {
                    "description": "False if the launched cycle should not be started, True or not provided will start the launched cycle",
                    "type": "boolean"
                },
                "InlineOAuth": {
                    "description": "Set to false for OAuth connector authentication to appear with signin button and popup",
                    "type": "boolean"
                },
                "CompleteParameter": {
                    "description": "Additional parameter to pass to launch complete result.",
                    "type": "string"
                },
                "Wizard": {
                    "description": "Set to true to display Launch mappings in a step by step wizard.",
                    "type": "boolean"
                },
                "DisplayDescriptions": {
                    "description": "Set to true to display template description in launch.",
                    "type": "boolean"
                },
                "PartnerConnector": {
                    "$ref": "#/definitions/UserLaunchPartnerConnector",
                    "description": "The connector to install in the account. Only installed if new account"
                },
                "AccountName": {
                    "description": "The name of the account. Only set if creating a new account",
                    "type": "string"
                },
                "AccountDescription": {
                    "description": "A description of the account. Only set if creating a new account",
                    "type": "string"
                }
            }
        },
        "UserLaunchPartnerConnector": {
            "description": "The connector to install in the account. Only installed if new account",
            "type": "object",
            "properties": {
                "Name": {
                    "description": "Name of the connector to install",
                    "type": "string"
                },
                "Version": {
                    "description": "Version of the connector to install",
                    "type": "string"
                },
                "AuthenticationId": {
                    "format": "uuid",
                    "description": "Id of connector authentication method",
                    "type": "string",
                    "example": "00000000-0000-0000-0000-000000000000"
                },
                "AuthValue": {
                    "description": "Authentication value for the partner connector:\r\nFor Basic Authentication, this is the base64 encoded value of username and password;\r\nFor OAuth, this value is a serialized JSON object, e.g.\r\n{\"AccessToken\":\"access_token\",\"RefreshToken\":\"refresh_token\",\"Expires\":\"YYYY-MM-DDTHH:mm:ss.sssZ\",\"RefreshExpires\":\"YYYY-MM-DDTHH:mm:ss.sssZ\"}\"",
                    "type": "string"
                },
                "Properties": {
                    "description": "Partner connector property values",
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/UserLaunchPartnerConnectorPropertyModel"
                    }
                }
            }
        },
        "UserLaunchPartnerConnectorPropertyModel": {
            "description": "Account connector property values to use when installing",
            "type": "object",
            "properties": {
                "Name": {
                    "description": "Name of the account connector property to set",
                    "type": "string"
                },
                "Value": {
                    "description": "Value to set for the account connector property",
                    "type": "string"
                }
            }
        },
        "LaunchTokenModel": {
            "type": "object",
            "properties": {
                "LaunchUrl": {
                    "type": "string"
                },
                "AccountId": {
                    "type": "string"
                },
                "Token": {
                    "type": "string"
                },
                "ExpiresAtUtc": {
                    "format": "date-time",
                    "type": "string"
                }
            }
        },
        "AccountMarketplaceModel": {
            "description": "Model to create an account Marketplace",
            "required": [
                "MarketplaceId"
            ],
            "type": "object",
            "properties": {
                "MarketplaceId": {
                    "format": "int32",
                    "description": "ID of the Marketplace to launch",
                    "type": "integer"
                },
                "InlineOAuth": {
                    "description": "Set to false for OAuth connector authentication to appear with signin button and popup",
                    "type": "boolean"
                },
                "PartnerConnector": {
                    "$ref": "#/definitions/UserLaunchPartnerConnector",
                    "description": "The connector to install in the account. Only installed if new account"
                },
                "AccountName": {
                    "description": "The name of the account. Only set if creating a new account",
                    "type": "string"
                },
                "AccountDescription": {
                    "description": "A description of the account. Only set if creating a new account",
                    "type": "string"
                }
            }
        },
        "MarketplaceTokenModel": {
            "type": "object",
            "properties": {
                "MarketplaceUrl": {
                    "type": "string"
                },
                "AccountId": {
                    "type": "string"
                },
                "Token": {
                    "type": "string"
                },
                "ExpiresAtUtc": {
                    "format": "date-time",
                    "type": "string"
                }
            }
        },
        "UserOrbitTokenModel": {
            "description": "Model for user ORBIT",
            "type": "object",
            "properties": {
                "OrbitUrl": {
                    "description": "URL to redirect end user to",
                    "type": "string"
                },
                "Token": {
                    "type": "string"
                },
                "ExpiresAtUtc": {
                    "format": "date-time",
                    "type": "string"
                }
            }
        },
        "ConnectorInstallModel": {
            "description": "Install model for Connector",
            "required": [
                "Name"
            ],
            "type": "object",
            "properties": {
                "Name": {
                    "description": "Account connector name",
                    "type": "string"
                },
                "Description": {
                    "description": "Account connector description",
                    "type": "string"
                },
                "AuthenticationId": {
                    "format": "uuid",
                    "description": "Id of connector authentication method",
                    "type": "string",
                    "example": "00000000-0000-0000-0000-000000000000"
                },
                "AuthValue": {
                    "description": "Authentication value:\r\nFor Basic Authentication, this is the base64 encoded value of username and password;\r\nFor OAuth, this value is a serialized JSON object, e.g.\r\n{\"AccessToken\":\"access_token\",\"RefreshToken\":\"refresh_token\",\"Expires\":\"YYYY-MM-DDTHH:mm:ss.sssZ\",\"RefreshExpires\":\"YYYY-MM-DDTHH:mm:ss.sssZ\"}\"",
                    "type": "string"
                },
                "IsPartnerIntegrationConnector": {
                    "description": "If the connector is used to integrate connector engine with the host application.\r\nIf it is, the connector will have special handling applied to it",
                    "type": "boolean"
                },
                "Properties": {
                    "description": "Account connector property values",
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/AccountConnectorPropertyModel"
                    }
                }
            }
        },
        "MethodModel": {
            "description": "Web response model for a connector method",
            "type": "object",
            "properties": {
                "Id": {
                    "format": "int32",
                    "description": "Id of the method",
                    "type": "integer"
                },
                "Name": {
                    "description": "Name of the method",
                    "type": "string",
                    "readOnly": true
                },
                "Description": {
                    "description": "Description of the method",
                    "type": "string",
                    "readOnly": true
                },
                "Category": {
                    "description": "The category for the method",
                    "type": "string",
                    "readOnly": true
                },
                "MethodType": {
                    "description": "The method type",
                    "enum": [
                        "Action",
                        "Webhook",
                        "WebhookResponse",
                        "Script"
                    ],
                    "type": "string",
                    "readOnly": true
                },
                "EndPoint": {
                    "description": "The method endpoint",
                    "type": "string",
                    "readOnly": true
                },
                "Parameters": {
                    "description": "Any parameters for the method",
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/ParameterResponseModel"
                    },
                    "readOnly": true
                },
                "MethodUniqueIdentifier": {
                    "format": "uuid",
                    "description": "Unique ID for the method",
                    "type": "string",
                    "readOnly": true,
                    "example": "00000000-0000-0000-0000-000000000000"
                },
                "Warning": {
                    "description": "Warning about any behaviour of the method that may be unexpected by the user",
                    "type": "string",
                    "readOnly": true
                },
                "RequestFields": {
                    "description": "Any request fields for the method",
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/FieldResponseModel"
                    },
                    "readOnly": true
                },
                "ResponseFields": {
                    "description": "Any response fields for the method",
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/FieldResponseModel"
                    },
                    "readOnly": true
                }
            }
        },
        "ParameterResponseModel": {
            "description": "Web response model for parameters",
            "type": "object",
            "properties": {
                "TargetType": {
                    "description": "Target type of the parameter",
                    "enum": [
                        "Index",
                        "HttpHeader",
                        "MergeField",
                        "QueryString",
                        "FilterField",
                        "ResponseField",
                        "Script"
                    ],
                    "type": "string"
                },
                "TargetName": {
                    "description": "Target name of the parameter",
                    "type": "string"
                },
                "IsSensitive": {
                    "description": "Indicates if a connector level property will contain sensitive data",
                    "type": "boolean"
                },
                "Id": {
                    "format": "int32",
                    "description": "Id of the field or parameter",
                    "type": "integer",
                    "readOnly": true
                },
                "Name": {
                    "description": "Name of the field/parameter",
                    "type": "string",
                    "readOnly": true
                },
                "Description": {
                    "description": "Description of the field/parameter",
                    "type": "string",
                    "readOnly": true
                },
                "IsOptional": {
                    "description": "Indicates if the field/parameter is optional or required",
                    "type": "boolean",
                    "readOnly": true
                },
                "DataType": {
                    "description": "Data type of the field/parameter. Will always be string for parameters",
                    "enum": [
                        "Undefined",
                        "Text",
                        "Integer",
                        "Float",
                        "Boolean",
                        "DateTime",
                        "File",
                        "Decimal"
                    ],
                    "type": "string",
                    "readOnly": true
                },
                "TriggerName": {
                    "description": "The lookup trigger name for this field/parameter",
                    "type": "string",
                    "readOnly": true
                },
                "Values": {
                    "description": "Drop down list values for the field/parameter",
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "readOnly": true
                },
                "DisplayOrder": {
                    "format": "int32",
                    "description": "Display order for the field/parameter",
                    "type": "integer",
                    "readOnly": true
                },
                "Triggers": {
                    "description": "Available triggers for the field/parameter",
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/TriggerModel"
                    },
                    "readOnly": true
                }
            }
        },
        "FieldResponseModel": {
            "description": "Web response model for fields",
            "type": "object",
            "properties": {
                "Location": {
                    "description": "Location of the field",
                    "type": "string"
                },
                "Id": {
                    "format": "int32",
                    "description": "Id of the field or parameter",
                    "type": "integer",
                    "readOnly": true
                },
                "Name": {
                    "description": "Name of the field/parameter",
                    "type": "string",
                    "readOnly": true
                },
                "Description": {
                    "description": "Description of the field/parameter",
                    "type": "string",
                    "readOnly": true
                },
                "IsOptional": {
                    "description": "Indicates if the field/parameter is optional or required",
                    "type": "boolean",
                    "readOnly": true
                },
                "DataType": {
                    "description": "Data type of the field/parameter. Will always be string for parameters",
                    "enum": [
                        "Undefined",
                        "Text",
                        "Integer",
                        "Float",
                        "Boolean",
                        "DateTime",
                        "File",
                        "Decimal"
                    ],
                    "type": "string",
                    "readOnly": true
                },
                "TriggerName": {
                    "description": "The lookup trigger name for this field/parameter",
                    "type": "string",
                    "readOnly": true
                },
                "Values": {
                    "description": "Drop down list values for the field/parameter",
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "readOnly": true
                },
                "DisplayOrder": {
                    "format": "int32",
                    "description": "Display order for the field/parameter",
                    "type": "integer",
                    "readOnly": true
                },
                "Triggers": {
                    "description": "Available triggers for the field/parameter",
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/TriggerModel"
                    },
                    "readOnly": true
                }
            }
        },
        "CustomFieldRequestModel": {
            "description": "Request model for an account connector custom field",
            "required": [
                "ConnectorField",
                "SystemField",
                "DisplayName",
                "MethodUniqueIdentifier"
            ],
            "type": "object",
            "properties": {
                "ConnectorField": {
                    "description": "Connector field",
                    "type": "string"
                },
                "SystemField": {
                    "description": "System field",
                    "type": "string"
                },
                "DisplayName": {
                    "description": "Display field",
                    "type": "string"
                },
                "Description": {
                    "description": "Custom field description",
                    "type": "string"
                },
                "DataType": {
                    "description": "Custom field data type",
                    "enum": [
                        "Undefined",
                        "Text",
                        "Integer",
                        "Float",
                        "Boolean",
                        "DateTime",
                        "File",
                        "Decimal"
                    ],
                    "type": "string"
                },
                "DataTypeFormat": {
                    "description": "Format of the data type",
                    "type": "string"
                },
                "MethodUniqueIdentifier": {
                    "format": "uuid",
                    "description": "Unique identifier for the method that this field is for",
                    "type": "string",
                    "example": "00000000-0000-0000-0000-000000000000"
                },
                "EntityIdentifier": {
                    "description": "If this is a custom field for a method that has a MethodEntityIdentifier, this field will \r\ncontain the {name:id} to restrict the field to",
                    "type": "string"
                },
                "ForRequestFormat": {
                    "description": "True if field is for request format, false if for response format",
                    "type": "boolean"
                }
            }
        },
        "CycleModel": {
            "description": "Model for a cycle",
            "required": [
                "Name"
            ],
            "type": "object",
            "properties": {
                "Id": {
                    "format": "uuid",
                    "description": "ID of the cycle",
                    "type": "string",
                    "readOnly": true,
                    "example": "00000000-0000-0000-0000-000000000000"
                },
                "CreatedOnUtc": {
                    "format": "date-time",
                    "description": "Timestamp that the cycle was created",
                    "type": "string",
                    "readOnly": true
                },
                "Connectors": {
                    "description": "Connectors used in the cycle",
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/CycleConnectorModel"
                    },
                    "readOnly": true
                },
                "Prerequisites": {
                    "description": "List of cycle step setup prerequisites",
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/StepPrerequisite"
                    },
                    "readOnly": true
                },
                "TasksUsed": {
                    "format": "int32",
                    "description": "Number of tasks the cycle has used",
                    "type": "integer",
                    "readOnly": true
                },
                "ErrorCount": {
                    "format": "int32",
                    "description": "Number of errors the cycle has encountered",
                    "type": "integer",
                    "readOnly": true
                },
                "WarningCount": {
                    "format": "int32",
                    "description": "Number of warnings the cycle has encountered",
                    "type": "integer",
                    "readOnly": true
                },
                "Status": {
                    "description": "Status of the cycle",
                    "enum": [
                        "Stopped",
                        "Active",
                        "Launching",
                        "Finish",
                        "DeleteScheduled",
                        "DeleteFailed"
                    ],
                    "type": "string",
                    "readOnly": true
                },
                "InProgressTransactionCount": {
                    "format": "int32",
                    "description": "Amount of cycle transactions that are currently in progress",
                    "type": "integer",
                    "readOnly": true
                },
                "Variables": {
                    "description": "Variables that can be used in cycles",
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/CycleVariableModel"
                    },
                    "readOnly": true
                },
                "NextRunDate": {
                    "format": "date-time",
                    "description": "Timestamp for the cycle next scheduled run date (UTC)",
                    "type": "string",
                    "readOnly": true
                },
                "Name": {
                    "description": "Name of the cycle",
                    "type": "string"
                },
                "Description": {
                    "description": "Description of the cycle",
                    "type": "string"
                },
                "Shareable": {
                    "description": "Indicates if the cycle is sharable",
                    "type": "boolean"
                },
                "StepErrorAction": {
                    "description": "Indicates the action that a cycle should take if it encounters an error",
                    "enum": [
                        "Stop",
                        "Ignore",
                        "Retry",
                        "StopTransaction"
                    ],
                    "type": "string"
                },
                "LogStepDataRequests": {
                    "description": "Indicates if step requests should be logged as well as responses",
                    "type": "boolean"
                },
                "CollectionSplitType": {
                    "description": "Indicates the type of collection splitting the cycle should use",
                    "enum": [
                        "None",
                        "Trigger",
                        "All"
                    ],
                    "type": "string"
                },
                "TemplateId": {
                    "format": "uuid",
                    "description": "ID of the template the cycle is installed from",
                    "type": "string",
                    "readOnly": true,
                    "example": "00000000-0000-0000-0000-000000000000"
                },
                "TemplateReleaseId": {
                    "format": "uuid",
                    "description": "ID of the template release the cycle is installed from",
                    "type": "string",
                    "readOnly": true,
                    "example": "00000000-0000-0000-0000-000000000000"
                },
                "Tags": {
                    "description": "List of tags applied to the cycle",
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "LastSuccessfulRunDate": {
                    "format": "date-time",
                    "description": "Timestamp for the cycle last successful run date",
                    "type": "string",
                    "readOnly": true
                }
            }
        },
        "CycleConnectorModel": {
            "description": "Model for a connector used in a cycle",
            "type": "object",
            "properties": {
                "Id": {
                    "format": "int32",
                    "description": "ID of the connector",
                    "type": "integer",
                    "readOnly": true
                },
                "AccountConnectorId": {
                    "format": "int32",
                    "description": "ID of the account connector",
                    "type": "integer",
                    "readOnly": true
                },
                "Name": {
                    "description": "Name of the connector",
                    "type": "string",
                    "readOnly": true
                },
                "Version": {
                    "description": "Connector API version",
                    "type": "string",
                    "readOnly": true
                },
                "Authenticated": {
                    "description": "Indicates if the connector is authenticated",
                    "type": "boolean",
                    "readOnly": true
                },
                "StepCount": {
                    "format": "int32",
                    "description": "Count of the steps in the cycle using connector",
                    "type": "integer",
                    "readOnly": true
                },
                "Icon": {
                    "description": "The connectors icon",
                    "type": "string",
                    "readOnly": true
                }
            }
        },
        "StepPrerequisite": {
            "description": "Model for a step setup prerequisite",
            "type": "object",
            "properties": {
                "Step": {
                    "$ref": "#/definitions/CycleMethodStepModel",
                    "description": "Model of step"
                },
                "Parameters": {
                    "description": "List of parameters that require setup",
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/CycleParameterModel"
                    }
                },
                "Fields": {
                    "description": "List of fields that require setup",
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/CycleFieldModel"
                    }
                },
                "PreviousStepFields": {
                    "description": "List of previous step fields that can be used in the mapping",
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/PreviousStepFieldsModel"
                    },
                    "readOnly": true
                }
            }
        },
        "CycleVariableModel": {
            "description": "Model for a cycle variable",
            "type": "object",
            "properties": {
                "DisplayName": {
                    "description": "The name used when displaying the variable to users",
                    "type": "string"
                },
                "SystemName": {
                    "description": "The name used to identify the variable",
                    "type": "string",
                    "readOnly": true
                },
                "Value": {
                    "description": "The value that the variable will provide",
                    "type": "string"
                },
                "MappingType": {
                    "description": "The type of the cycle variable mapping",
                    "enum": [
                        "StaticValue",
                        "TriggerMethod"
                    ],
                    "type": "string"
                }
            }
        },
        "CycleMethodStepModel": {
            "description": "Model for steps that use a connector method",
            "type": "object",
            "properties": {
                "AccountConnector": {
                    "$ref": "#/definitions/AccountConnectorModel",
                    "description": "Account connector the step uses"
                },
                "Method": {
                    "$ref": "#/definitions/MethodModel",
                    "description": "Method the step uses"
                },
                "ContinueOnNullSource": {
                    "description": "Continue cycle transaction on null data from previous step",
                    "type": "boolean"
                },
                "ContinueOnNullResult": {
                    "description": "Continue cycle transaction if null data is returned from the third party API",
                    "type": "boolean"
                },
                "Script": {
                    "description": "Script for the step.",
                    "type": "string"
                },
                "Id": {
                    "format": "uuid",
                    "description": "Id of the step",
                    "type": "string",
                    "readOnly": true,
                    "example": "00000000-0000-0000-0000-000000000000"
                },
                "Name": {
                    "description": "Name of the step",
                    "type": "string"
                },
                "Description": {
                    "description": "Description of the step",
                    "type": "string"
                },
                "ActionType": {
                    "description": "The type of action that this step represents",
                    "enum": [
                        "None",
                        "Action",
                        "Webhook",
                        "Decision",
                        "Delay",
                        "WaitUntil",
                        "WaitAll",
                        "WebhookResponse",
                        "Annotation"
                    ],
                    "type": "string"
                },
                "DisplayPositionLeft": {
                    "format": "int32",
                    "description": "The left position for displaying this step in the cycle builder",
                    "type": "integer"
                },
                "DisplayPositionTop": {
                    "format": "int32",
                    "description": "The top postion for displaying this step in the cycle builder",
                    "type": "integer"
                },
                "LastSuccessfulRunDate": {
                    "format": "date-time",
                    "description": "Gets or sets the timestamp of the steps last successful run",
                    "type": "string"
                }
            }
        },
        "CycleParameterModel": {
            "description": "Response model for cycle parameter mapping",
            "type": "object",
            "properties": {
                "Parameter": {
                    "$ref": "#/definitions/ParameterResponseModel",
                    "description": "The parameter this mapping is for",
                    "readOnly": true
                },
                "IsEntityIdentifier": {
                    "description": "True if the parameter is the entity identifier",
                    "type": "boolean",
                    "readOnly": true
                },
                "MappingType": {
                    "description": "Field or parameter mapping type",
                    "enum": [
                        "Ignore",
                        "PreviousStep",
                        "StaticValue",
                        "TriggerMethod",
                        "ValueList",
                        "CycleVariable"
                    ],
                    "type": "string"
                },
                "SourceFieldId": {
                    "format": "int32",
                    "description": "ID of the source field to get the data for the mapping",
                    "type": "integer"
                },
                "SourceStepId": {
                    "format": "uuid",
                    "description": "ID of the source step used to get the data for the mapping",
                    "type": "string",
                    "example": "00000000-0000-0000-0000-000000000000"
                },
                "TriggerValue": {
                    "description": "Trigger value",
                    "type": "object"
                },
                "TriggerValueDisplayName": {
                    "description": "Display name for the trigger value",
                    "type": "object"
                },
                "Value": {
                    "description": "Static value",
                    "type": "string"
                },
                "IsLaunchVisible": {
                    "description": "Indicates if the cycle entity is visible in the LAUNCH flow",
                    "type": "boolean"
                }
            }
        },
        "CycleFieldModel": {
            "description": "Response model for cycle field mapping",
            "type": "object",
            "properties": {
                "Field": {
                    "$ref": "#/definitions/FieldAndParameterModel",
                    "description": "The Field this mapping is for",
                    "readOnly": true
                },
                "MappingType": {
                    "description": "Field or parameter mapping type",
                    "enum": [
                        "Ignore",
                        "PreviousStep",
                        "StaticValue",
                        "TriggerMethod",
                        "ValueList",
                        "CycleVariable"
                    ],
                    "type": "string"
                },
                "SourceFieldId": {
                    "format": "int32",
                    "description": "ID of the source field to get the data for the mapping",
                    "type": "integer"
                },
                "SourceStepId": {
                    "format": "uuid",
                    "description": "ID of the source step used to get the data for the mapping",
                    "type": "string",
                    "example": "00000000-0000-0000-0000-000000000000"
                },
                "TriggerValue": {
                    "description": "Trigger value",
                    "type": "object"
                },
                "TriggerValueDisplayName": {
                    "description": "Display name for the trigger value",
                    "type": "object"
                },
                "Value": {
                    "description": "Static value",
                    "type": "string"
                },
                "IsLaunchVisible": {
                    "description": "Indicates if the cycle entity is visible in the LAUNCH flow",
                    "type": "boolean"
                }
            }
        },
        "PreviousStepFieldsModel": {
            "description": "Previous step fields that can be used for field mapping",
            "type": "object",
            "properties": {
                "Step": {
                    "$ref": "#/definitions/CycleStepModel",
                    "description": "Previous step",
                    "readOnly": true
                },
                "Fields": {
                    "description": "Available fields that can be used for field mappings",
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/FieldAndParameterModel"
                    },
                    "readOnly": true
                }
            }
        },
        "FieldAndParameterModel": {
            "description": "Web response model for fields and parameters",
            "type": "object",
            "properties": {
                "Id": {
                    "format": "int32",
                    "description": "Id of the field or parameter",
                    "type": "integer",
                    "readOnly": true
                },
                "Name": {
                    "description": "Name of the field/parameter",
                    "type": "string",
                    "readOnly": true
                },
                "Description": {
                    "description": "Description of the field/parameter",
                    "type": "string",
                    "readOnly": true
                },
                "IsOptional": {
                    "description": "Indicates if the field/parameter is optional or required",
                    "type": "boolean",
                    "readOnly": true
                },
                "DataType": {
                    "description": "Data type of the field/parameter. Will always be string for parameters",
                    "enum": [
                        "Undefined",
                        "Text",
                        "Integer",
                        "Float",
                        "Boolean",
                        "DateTime",
                        "File",
                        "Decimal"
                    ],
                    "type": "string",
                    "readOnly": true
                },
                "TriggerName": {
                    "description": "The lookup trigger name for this field/parameter",
                    "type": "string",
                    "readOnly": true
                },
                "Values": {
                    "description": "Drop down list values for the field/parameter",
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "readOnly": true
                },
                "DisplayOrder": {
                    "format": "int32",
                    "description": "Display order for the field/parameter",
                    "type": "integer",
                    "readOnly": true
                },
                "Triggers": {
                    "description": "Available triggers for the field/parameter",
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/TriggerModel"
                    },
                    "readOnly": true
                }
            }
        },
        "CycleStepModel": {
            "description": "Model for a cycle step",
            "type": "object",
            "properties": {
                "Id": {
                    "format": "uuid",
                    "description": "Id of the step",
                    "type": "string",
                    "readOnly": true,
                    "example": "00000000-0000-0000-0000-000000000000"
                },
                "Name": {
                    "description": "Name of the step",
                    "type": "string"
                },
                "Description": {
                    "description": "Description of the step",
                    "type": "string"
                },
                "ActionType": {
                    "description": "The type of action that this step represents",
                    "enum": [
                        "None",
                        "Action",
                        "Webhook",
                        "Decision",
                        "Delay",
                        "WaitUntil",
                        "WaitAll",
                        "WebhookResponse",
                        "Annotation"
                    ],
                    "type": "string"
                },
                "DisplayPositionLeft": {
                    "format": "int32",
                    "description": "The left position for displaying this step in the cycle builder",
                    "type": "integer"
                },
                "DisplayPositionTop": {
                    "format": "int32",
                    "description": "The top postion for displaying this step in the cycle builder",
                    "type": "integer"
                },
                "LastSuccessfulRunDate": {
                    "format": "date-time",
                    "description": "Gets or sets the timestamp of the steps last successful run",
                    "type": "string"
                }
            }
        },
        "CycleRequestModel": {
            "description": "Model for a cycle request.",
            "required": [
                "Name"
            ],
            "type": "object",
            "properties": {
                "Name": {
                    "description": "Name of the cycle",
                    "type": "string"
                },
                "Description": {
                    "description": "Description of the cycle",
                    "type": "string"
                },
                "Shareable": {
                    "description": "Indicates if the cycle is sharable",
                    "type": "boolean"
                },
                "StepErrorAction": {
                    "description": "Indicates the action that a cycle should take if it encounters an error",
                    "enum": [
                        "Stop",
                        "Ignore",
                        "Retry",
                        "StopTransaction"
                    ],
                    "type": "string"
                },
                "LogStepDataRequests": {
                    "description": "Indicates if step requests should be logged as well as responses",
                    "type": "boolean"
                },
                "CollectionSplitType": {
                    "description": "Indicates the type of collection splitting the cycle should use",
                    "enum": [
                        "None",
                        "Trigger",
                        "All"
                    ],
                    "type": "string"
                },
                "TemplateId": {
                    "format": "uuid",
                    "description": "ID of the template the cycle is installed from",
                    "type": "string",
                    "readOnly": true,
                    "example": "00000000-0000-0000-0000-000000000000"
                },
                "TemplateReleaseId": {
                    "format": "uuid",
                    "description": "ID of the template release the cycle is installed from",
                    "type": "string",
                    "readOnly": true,
                    "example": "00000000-0000-0000-0000-000000000000"
                },
                "Tags": {
                    "description": "List of tags applied to the cycle",
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "LastSuccessfulRunDate": {
                    "format": "date-time",
                    "description": "Timestamp for the cycle last successful run date",
                    "type": "string",
                    "readOnly": true
                }
            }
        },
        "CycleUpdateModel": {
            "description": "Update model for a cycle",
            "required": [
                "Name"
            ],
            "type": "object",
            "properties": {
                "Steps": {
                    "description": "Update model for steps in the cycle",
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/StepRequestModel"
                    }
                },
                "Name": {
                    "description": "Name of the cycle",
                    "type": "string"
                },
                "Description": {
                    "description": "Description of the cycle",
                    "type": "string"
                },
                "Shareable": {
                    "description": "Indicates if the cycle is sharable",
                    "type": "boolean"
                },
                "StepErrorAction": {
                    "description": "Indicates the action that a cycle should take if it encounters an error",
                    "enum": [
                        "Stop",
                        "Ignore",
                        "Retry",
                        "StopTransaction"
                    ],
                    "type": "string"
                },
                "LogStepDataRequests": {
                    "description": "Indicates if step requests should be logged as well as responses",
                    "type": "boolean"
                },
                "CollectionSplitType": {
                    "description": "Indicates the type of collection splitting the cycle should use",
                    "enum": [
                        "None",
                        "Trigger",
                        "All"
                    ],
                    "type": "string"
                },
                "TemplateId": {
                    "format": "uuid",
                    "description": "ID of the template the cycle is installed from",
                    "type": "string",
                    "readOnly": true,
                    "example": "00000000-0000-0000-0000-000000000000"
                },
                "TemplateReleaseId": {
                    "format": "uuid",
                    "description": "ID of the template release the cycle is installed from",
                    "type": "string",
                    "readOnly": true,
                    "example": "00000000-0000-0000-0000-000000000000"
                },
                "Tags": {
                    "description": "List of tags applied to the cycle",
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "LastSuccessfulRunDate": {
                    "format": "date-time",
                    "description": "Timestamp for the cycle last successful run date",
                    "type": "string",
                    "readOnly": true
                }
            }
        },
        "StepRequestModel": {
            "description": "Request model for creating or updating a cycle step",
            "type": "object",
            "properties": {
                "Step": {
                    "$ref": "#/definitions/CycleMethodStepRequestModel",
                    "description": "Request model of a step"
                },
                "Parameters": {
                    "description": "List of parameters to create or update",
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/CycleParameterRequestModel"
                    }
                },
                "Fields": {
                    "description": "List of fields to create or update",
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/CycleFieldRequestModel"
                    }
                }
            }
        },
        "CycleMethodStepRequestModel": {
            "description": "Request model for steps that use a connector method",
            "type": "object",
            "properties": {
                "Id": {
                    "format": "uuid",
                    "description": "Id of the step",
                    "type": "string",
                    "example": "00000000-0000-0000-0000-000000000000"
                }
            }
        },
        "CycleParameterRequestModel": {
            "description": "Request model for cycle parameter mapping",
            "type": "object",
            "properties": {
                "Parameter": {
                    "$ref": "#/definitions/ParameterRequestModel",
                    "description": "The parameter this mapping is for"
                },
                "MappingType": {
                    "description": "Field or parameter mapping type",
                    "enum": [
                        "Ignore",
                        "PreviousStep",
                        "StaticValue",
                        "TriggerMethod",
                        "ValueList",
                        "CycleVariable"
                    ],
                    "type": "string"
                },
                "SourceFieldId": {
                    "format": "int32",
                    "description": "ID of the source field to get the data for the mapping",
                    "type": "integer"
                },
                "SourceStepId": {
                    "format": "uuid",
                    "description": "ID of the source step used to get the data for the mapping",
                    "type": "string",
                    "example": "00000000-0000-0000-0000-000000000000"
                },
                "TriggerValue": {
                    "description": "Trigger value",
                    "type": "object"
                },
                "TriggerValueDisplayName": {
                    "description": "Display name for the trigger value",
                    "type": "object"
                },
                "Value": {
                    "description": "Static value",
                    "type": "string"
                },
                "IsLaunchVisible": {
                    "description": "Indicates if the cycle entity is visible in the LAUNCH flow",
                    "type": "boolean"
                }
            }
        },
        "CycleFieldRequestModel": {
            "description": "Request model for cycle field mapping",
            "type": "object",
            "properties": {
                "Field": {
                    "$ref": "#/definitions/FieldRequestModel",
                    "description": "The Field this mapping is for"
                },
                "MappingType": {
                    "description": "Field or parameter mapping type",
                    "enum": [
                        "Ignore",
                        "PreviousStep",
                        "StaticValue",
                        "TriggerMethod",
                        "ValueList",
                        "CycleVariable"
                    ],
                    "type": "string"
                },
                "SourceFieldId": {
                    "format": "int32",
                    "description": "ID of the source field to get the data for the mapping",
                    "type": "integer"
                },
                "SourceStepId": {
                    "format": "uuid",
                    "description": "ID of the source step used to get the data for the mapping",
                    "type": "string",
                    "example": "00000000-0000-0000-0000-000000000000"
                },
                "TriggerValue": {
                    "description": "Trigger value",
                    "type": "object"
                },
                "TriggerValueDisplayName": {
                    "description": "Display name for the trigger value",
                    "type": "object"
                },
                "Value": {
                    "description": "Static value",
                    "type": "string"
                },
                "IsLaunchVisible": {
                    "description": "Indicates if the cycle entity is visible in the LAUNCH flow",
                    "type": "boolean"
                }
            }
        },
        "ParameterRequestModel": {
            "description": "Web request model for parameters",
            "type": "object",
            "properties": {
                "Id": {
                    "format": "int32",
                    "description": "Id of the parameter",
                    "type": "integer"
                }
            }
        },
        "FieldRequestModel": {
            "description": "Web request model for fields",
            "required": [
                "ConnectorField",
                "SystemField",
                "DisplayName",
                "MethodUniqueIdentifier"
            ],
            "type": "object",
            "properties": {
                "Id": {
                    "format": "int32",
                    "description": "Id of the field",
                    "type": "integer"
                },
                "ConnectorField": {
                    "description": "Connector field",
                    "type": "string"
                },
                "SystemField": {
                    "description": "System field",
                    "type": "string"
                },
                "DisplayName": {
                    "description": "Display field",
                    "type": "string"
                },
                "Description": {
                    "description": "Custom field description",
                    "type": "string"
                },
                "DataType": {
                    "description": "Custom field data type",
                    "enum": [
                        "Undefined",
                        "Text",
                        "Integer",
                        "Float",
                        "Boolean",
                        "DateTime",
                        "File",
                        "Decimal"
                    ],
                    "type": "string"
                },
                "DataTypeFormat": {
                    "description": "Format of the data type",
                    "type": "string"
                },
                "MethodUniqueIdentifier": {
                    "format": "uuid",
                    "description": "Unique identifier for the method that this field is for",
                    "type": "string",
                    "example": "00000000-0000-0000-0000-000000000000"
                },
                "EntityIdentifier": {
                    "description": "If this is a custom field for a method that has a MethodEntityIdentifier, this field will \r\ncontain the {name:id} to restrict the field to",
                    "type": "string"
                },
                "ForRequestFormat": {
                    "description": "True if field is for request format, false if for response format",
                    "type": "boolean"
                }
            }
        },
        "AccountCycleStepTransactionIncidentModel": {
            "description": "Model for a cycle step transaction incident",
            "type": "object",
            "properties": {
                "CycleId": {
                    "format": "uuid",
                    "description": "Id of the cycle the incident occurred in",
                    "type": "string",
                    "readOnly": true,
                    "example": "00000000-0000-0000-0000-000000000000"
                },
                "CycleName": {
                    "description": "Name of the cycle the incident occurred in",
                    "type": "string",
                    "readOnly": true
                },
                "Timestamp": {
                    "format": "date-time",
                    "description": "Timestamp of when the incident occurred (UTC)",
                    "type": "string",
                    "readOnly": true
                },
                "IncidentLevel": {
                    "description": "The incident level of the incident",
                    "enum": [
                        "Error",
                        "Warning"
                    ],
                    "type": "string",
                    "readOnly": true
                },
                "ShortMessage": {
                    "description": "The short error message",
                    "type": "string",
                    "readOnly": true
                },
                "FullMessage": {
                    "description": "The full error message",
                    "type": "string",
                    "readOnly": true
                },
                "StepId": {
                    "description": "Id of the step the incident occurred on",
                    "type": "string",
                    "readOnly": true
                },
                "StepName": {
                    "description": "Name of the step the incident occurred on",
                    "type": "string",
                    "readOnly": true
                },
                "TransactionId": {
                    "format": "uuid",
                    "description": "ID of the transaction the incident occurred in",
                    "type": "string",
                    "readOnly": true,
                    "example": "00000000-0000-0000-0000-000000000000"
                }
            }
        },
        "CycleStepTransactionIncidentModel": {
            "description": "Model for a cycle step transaction incident",
            "type": "object",
            "properties": {
                "Timestamp": {
                    "format": "date-time",
                    "description": "Timestamp of when the incident occurred (UTC)",
                    "type": "string",
                    "readOnly": true
                },
                "IncidentLevel": {
                    "description": "The incident level of the incident",
                    "enum": [
                        "Error",
                        "Warning"
                    ],
                    "type": "string",
                    "readOnly": true
                },
                "ShortMessage": {
                    "description": "The short error message",
                    "type": "string",
                    "readOnly": true
                },
                "FullMessage": {
                    "description": "The full error message",
                    "type": "string",
                    "readOnly": true
                },
                "StepId": {
                    "description": "Id of the step the incident occurred on",
                    "type": "string",
                    "readOnly": true
                },
                "StepName": {
                    "description": "Name of the step the incident occurred on",
                    "type": "string",
                    "readOnly": true
                },
                "TransactionId": {
                    "format": "uuid",
                    "description": "ID of the transaction the incident occurred in",
                    "type": "string",
                    "readOnly": true,
                    "example": "00000000-0000-0000-0000-000000000000"
                }
            }
        },
        "CycleActivateOptions": {
            "description": "Options that can be used when activating a cycle",
            "type": "object",
            "properties": {
                "StartTime": {
                    "format": "date-time",
                    "description": "Datetime when the cycles inital run should occur, if datetime is in past cycle will run immediately. Property has no effect on cycles triggered by webhooks",
                    "type": "string"
                },
                "Interval": {
                    "format": "int32",
                    "description": "The minutes to wait between triggering each cycle run. Property has no effect on cycles triggered by webhooks",
                    "type": "integer"
                },
                "RunOnce": {
                    "description": "True to run the cycle only once.",
                    "type": "boolean"
                }
            }
        },
        "BadRequestModel": {
            "description": "Model for BadRequest responses",
            "type": "object",
            "properties": {
                "Message": {
                    "description": "Message detailing the reason for the request being rejected",
                    "type": "string",
                    "readOnly": true
                }
            }
        },
        "CycleStepRequestModel": {
            "description": "Model for a cycle step request",
            "type": "object",
            "properties": {
                "Name": {
                    "description": "Name of the step",
                    "type": "string"
                },
                "Description": {
                    "description": "Description of the step",
                    "type": "string"
                },
                "ActionType": {
                    "description": "The type of action that this step represents",
                    "enum": [
                        "None",
                        "Action",
                        "Webhook",
                        "Decision",
                        "Delay",
                        "WaitUntil",
                        "WaitAll",
                        "WebhookResponse",
                        "Annotation"
                    ],
                    "type": "string"
                },
                "DisplayPositionLeft": {
                    "format": "int32",
                    "description": "The left position for displaying this step in the cycle builder",
                    "type": "integer"
                },
                "DisplayPositionTop": {
                    "format": "int32",
                    "description": "The top postion for displaying this step in the cycle builder",
                    "type": "integer"
                },
                "LastSuccessfulRunDate": {
                    "format": "date-time",
                    "description": "Gets or sets the timestamp of the steps last successful run",
                    "type": "string"
                }
            }
        },
        "CycleActionStepModel": {
            "description": "Model for an action step",
            "type": "object",
            "properties": {
                "Interval": {
                    "format": "int32",
                    "description": "If the step is a cycle trigger this will contain the interval, in minutes, to repeat the cycle",
                    "type": "integer"
                },
                "AccountConnector": {
                    "$ref": "#/definitions/AccountConnectorModel",
                    "description": "Account connector the step uses"
                },
                "Method": {
                    "$ref": "#/definitions/MethodModel",
                    "description": "Method the step uses"
                },
                "ContinueOnNullSource": {
                    "description": "Continue cycle transaction on null data from previous step",
                    "type": "boolean"
                },
                "ContinueOnNullResult": {
                    "description": "Continue cycle transaction if null data is returned from the third party API",
                    "type": "boolean"
                },
                "Script": {
                    "description": "Script for the step.",
                    "type": "string"
                },
                "Id": {
                    "format": "uuid",
                    "description": "Id of the step",
                    "type": "string",
                    "readOnly": true,
                    "example": "00000000-0000-0000-0000-000000000000"
                },
                "Name": {
                    "description": "Name of the step",
                    "type": "string"
                },
                "Description": {
                    "description": "Description of the step",
                    "type": "string"
                },
                "ActionType": {
                    "description": "The type of action that this step represents",
                    "enum": [
                        "None",
                        "Action",
                        "Webhook",
                        "Decision",
                        "Delay",
                        "WaitUntil",
                        "WaitAll",
                        "WebhookResponse",
                        "Annotation"
                    ],
                    "type": "string"
                },
                "DisplayPositionLeft": {
                    "format": "int32",
                    "description": "The left position for displaying this step in the cycle builder",
                    "type": "integer"
                },
                "DisplayPositionTop": {
                    "format": "int32",
                    "description": "The top postion for displaying this step in the cycle builder",
                    "type": "integer"
                },
                "LastSuccessfulRunDate": {
                    "format": "date-time",
                    "description": "Gets or sets the timestamp of the steps last successful run",
                    "type": "string"
                }
            }
        },
        "CycleDecisionStepModel": {
            "description": "Model for a decision step",
            "type": "object",
            "properties": {
                "LeftOperandStaticValue": {
                    "description": "Left operand static value",
                    "type": "string"
                },
                "LeftOperandStepId": {
                    "format": "uuid",
                    "description": "Id of the previous Step for the left operand",
                    "type": "string",
                    "example": "00000000-0000-0000-0000-000000000000"
                },
                "LeftOperandFieldId": {
                    "format": "int32",
                    "description": "Id of the previous step field for the left operand",
                    "type": "integer"
                },
                "LeftOperandType": {
                    "description": "Identifies the type of left operand",
                    "enum": [
                        "PreviousStepField",
                        "StaticValue",
                        "TriggerMethod",
                        "CycleVariable"
                    ],
                    "type": "string"
                },
                "CycleConditionType": {
                    "description": "The type of decision",
                    "enum": [
                        "Exists",
                        "NotExists",
                        "Equals",
                        "NotEquals",
                        "GreaterThan",
                        "LessThan",
                        "Contains",
                        "NotContains",
                        "In",
                        "NotIn"
                    ],
                    "type": "string"
                },
                "RightOperandStaticValue": {
                    "description": "Right operand static value",
                    "type": "string"
                },
                "RightOperandStepId": {
                    "format": "uuid",
                    "description": "Id of the previous step for the right operand",
                    "type": "string",
                    "example": "00000000-0000-0000-0000-000000000000"
                },
                "RightOperandFieldId": {
                    "format": "int32",
                    "description": "ID of the previous step field for the right operand",
                    "type": "integer"
                },
                "RightOperandType": {
                    "description": "Identifies the type of right operand",
                    "enum": [
                        "PreviousStepField",
                        "StaticValue",
                        "TriggerMethod",
                        "CycleVariable"
                    ],
                    "type": "string"
                },
                "SplitCollection": {
                    "description": "True to split collection items after the decision.",
                    "type": "boolean"
                },
                "Id": {
                    "format": "uuid",
                    "description": "Id of the step",
                    "type": "string",
                    "readOnly": true,
                    "example": "00000000-0000-0000-0000-000000000000"
                },
                "Name": {
                    "description": "Name of the step",
                    "type": "string"
                },
                "Description": {
                    "description": "Description of the step",
                    "type": "string"
                },
                "ActionType": {
                    "description": "The type of action that this step represents",
                    "enum": [
                        "None",
                        "Action",
                        "Webhook",
                        "Decision",
                        "Delay",
                        "WaitUntil",
                        "WaitAll",
                        "WebhookResponse",
                        "Annotation"
                    ],
                    "type": "string"
                },
                "DisplayPositionLeft": {
                    "format": "int32",
                    "description": "The left position for displaying this step in the cycle builder",
                    "type": "integer"
                },
                "DisplayPositionTop": {
                    "format": "int32",
                    "description": "The top postion for displaying this step in the cycle builder",
                    "type": "integer"
                },
                "LastSuccessfulRunDate": {
                    "format": "date-time",
                    "description": "Gets or sets the timestamp of the steps last successful run",
                    "type": "string"
                }
            }
        },
        "CycleDelayStepModel": {
            "description": "Model for a delay step",
            "type": "object",
            "properties": {
                "CycleDelayUnit": {
                    "description": "The unit that the interval is in",
                    "enum": [
                        "Seconds",
                        "Minutes",
                        "Hours",
                        "Days",
                        "Weeks"
                    ],
                    "type": "string"
                },
                "Interval": {
                    "format": "int32",
                    "description": "The interval to delay the transaction for",
                    "type": "integer"
                },
                "Id": {
                    "format": "uuid",
                    "description": "Id of the step",
                    "type": "string",
                    "readOnly": true,
                    "example": "00000000-0000-0000-0000-000000000000"
                },
                "Name": {
                    "description": "Name of the step",
                    "type": "string"
                },
                "Description": {
                    "description": "Description of the step",
                    "type": "string"
                },
                "ActionType": {
                    "description": "The type of action that this step represents",
                    "enum": [
                        "None",
                        "Action",
                        "Webhook",
                        "Decision",
                        "Delay",
                        "WaitUntil",
                        "WaitAll",
                        "WebhookResponse",
                        "Annotation"
                    ],
                    "type": "string"
                },
                "DisplayPositionLeft": {
                    "format": "int32",
                    "description": "The left position for displaying this step in the cycle builder",
                    "type": "integer"
                },
                "DisplayPositionTop": {
                    "format": "int32",
                    "description": "The top postion for displaying this step in the cycle builder",
                    "type": "integer"
                },
                "LastSuccessfulRunDate": {
                    "format": "date-time",
                    "description": "Gets or sets the timestamp of the steps last successful run",
                    "type": "string"
                }
            }
        },
        "CycleWaitUntilStepModel": {
            "description": "Model for a wait until step",
            "type": "object",
            "properties": {
                "DateTimeUtc": {
                    "format": "date-time",
                    "description": "DateTime to hold the transaction until. Will be null if using previous step",
                    "type": "string"
                },
                "PreviousStepId": {
                    "format": "uuid",
                    "description": "Previous step to get the DateTime from. Will be null if using static value",
                    "type": "string",
                    "example": "00000000-0000-0000-0000-000000000000"
                },
                "PreviousFieldId": {
                    "format": "int32",
                    "description": "Previous step field to get the DateTime from",
                    "type": "integer"
                },
                "Offset": {
                    "format": "int32",
                    "description": "Offset to apply to previous step DateTime value. Not used by static value",
                    "type": "integer"
                },
                "Id": {
                    "format": "uuid",
                    "description": "Id of the step",
                    "type": "string",
                    "readOnly": true,
                    "example": "00000000-0000-0000-0000-000000000000"
                },
                "Name": {
                    "description": "Name of the step",
                    "type": "string"
                },
                "Description": {
                    "description": "Description of the step",
                    "type": "string"
                },
                "ActionType": {
                    "description": "The type of action that this step represents",
                    "enum": [
                        "None",
                        "Action",
                        "Webhook",
                        "Decision",
                        "Delay",
                        "WaitUntil",
                        "WaitAll",
                        "WebhookResponse",
                        "Annotation"
                    ],
                    "type": "string"
                },
                "DisplayPositionLeft": {
                    "format": "int32",
                    "description": "The left position for displaying this step in the cycle builder",
                    "type": "integer"
                },
                "DisplayPositionTop": {
                    "format": "int32",
                    "description": "The top postion for displaying this step in the cycle builder",
                    "type": "integer"
                },
                "LastSuccessfulRunDate": {
                    "format": "date-time",
                    "description": "Gets or sets the timestamp of the steps last successful run",
                    "type": "string"
                }
            }
        },
        "CycleWebhookStepModel": {
            "description": "Model for a webhook step",
            "type": "object",
            "properties": {
                "PreviousStepId": {
                    "format": "uuid",
                    "description": "Id of the previous step to map to when resuming transactions",
                    "type": "string",
                    "example": "00000000-0000-0000-0000-000000000000"
                },
                "PreviousStepFieldId": {
                    "format": "int32",
                    "description": "Id of the previous step field to map to when resuming transactions",
                    "type": "integer"
                },
                "KeyFieldId": {
                    "format": "int32",
                    "description": "Id of the field in the webhook request to use as a key when resuming transactions",
                    "type": "integer"
                },
                "WebhookIdentifier": {
                    "description": "Id of the webhook used in URL",
                    "type": "string",
                    "readOnly": true
                },
                "WebhookUrl": {
                    "description": "Webhook URL",
                    "type": "string",
                    "readOnly": true
                },
                "AccountConnector": {
                    "$ref": "#/definitions/AccountConnectorModel",
                    "description": "Account connector the step uses"
                },
                "Method": {
                    "$ref": "#/definitions/MethodModel",
                    "description": "Method the step uses"
                },
                "ContinueOnNullSource": {
                    "description": "Continue cycle transaction on null data from previous step",
                    "type": "boolean"
                },
                "ContinueOnNullResult": {
                    "description": "Continue cycle transaction if null data is returned from the third party API",
                    "type": "boolean"
                },
                "Script": {
                    "description": "Script for the step.",
                    "type": "string"
                },
                "Id": {
                    "format": "uuid",
                    "description": "Id of the step",
                    "type": "string",
                    "readOnly": true,
                    "example": "00000000-0000-0000-0000-000000000000"
                },
                "Name": {
                    "description": "Name of the step",
                    "type": "string"
                },
                "Description": {
                    "description": "Description of the step",
                    "type": "string"
                },
                "ActionType": {
                    "description": "The type of action that this step represents",
                    "enum": [
                        "None",
                        "Action",
                        "Webhook",
                        "Decision",
                        "Delay",
                        "WaitUntil",
                        "WaitAll",
                        "WebhookResponse",
                        "Annotation"
                    ],
                    "type": "string"
                },
                "DisplayPositionLeft": {
                    "format": "int32",
                    "description": "The left position for displaying this step in the cycle builder",
                    "type": "integer"
                },
                "DisplayPositionTop": {
                    "format": "int32",
                    "description": "The top postion for displaying this step in the cycle builder",
                    "type": "integer"
                },
                "LastSuccessfulRunDate": {
                    "format": "date-time",
                    "description": "Gets or sets the timestamp of the steps last successful run",
                    "type": "string"
                }
            }
        },
        "CycleAnnotationStepModel": {
            "description": "Model for an annotation step",
            "type": "object",
            "properties": {
                "Id": {
                    "format": "uuid",
                    "description": "Id of the step",
                    "type": "string",
                    "readOnly": true,
                    "example": "00000000-0000-0000-0000-000000000000"
                },
                "Name": {
                    "description": "Name of the step",
                    "type": "string"
                },
                "Description": {
                    "description": "Description of the step",
                    "type": "string"
                },
                "ActionType": {
                    "description": "The type of action that this step represents",
                    "enum": [
                        "None",
                        "Action",
                        "Webhook",
                        "Decision",
                        "Delay",
                        "WaitUntil",
                        "WaitAll",
                        "WebhookResponse",
                        "Annotation"
                    ],
                    "type": "string"
                },
                "DisplayPositionLeft": {
                    "format": "int32",
                    "description": "The left position for displaying this step in the cycle builder",
                    "type": "integer"
                },
                "DisplayPositionTop": {
                    "format": "int32",
                    "description": "The top postion for displaying this step in the cycle builder",
                    "type": "integer"
                },
                "LastSuccessfulRunDate": {
                    "format": "date-time",
                    "description": "Gets or sets the timestamp of the steps last successful run",
                    "type": "string"
                }
            }
        },
        "Prerequisite": {
            "description": "Cycle/step setup prerequisite",
            "type": "object",
            "properties": {
                "ReasonCode": {
                    "format": "int32",
                    "description": "Reason code for the required setup",
                    "type": "integer",
                    "readOnly": true
                },
                "Reason": {
                    "description": "Reason for the required setup",
                    "type": "string",
                    "readOnly": true
                },
                "ObjectType": {
                    "description": "Type of the object to set up",
                    "type": "string"
                },
                "ObjectId": {
                    "description": "ID of the object to set up",
                    "type": "object"
                }
            }
        },
        "CycleUpgradableModel": {
            "description": "Model for cycles that have a new template release available",
            "type": "object",
            "properties": {
                "CycleId": {
                    "format": "uuid",
                    "description": "ID of the cycle",
                    "type": "string",
                    "example": "00000000-0000-0000-0000-000000000000"
                },
                "CycleName": {
                    "description": "Name of the cycle",
                    "type": "string"
                },
                "CanUpgrade": {
                    "description": "Indicates if the cycle can be upgraded",
                    "type": "boolean"
                },
                "UpgradeBlockedMessage": {
                    "description": "Error message if cycle can not be upgraded to latest template",
                    "type": "string"
                }
            }
        },
        "CycleEdgeModel": {
            "description": "Represents a cycle edge",
            "type": "object",
            "properties": {
                "Id": {
                    "format": "uuid",
                    "description": "ID of the edge",
                    "type": "string",
                    "example": "00000000-0000-0000-0000-000000000000"
                },
                "HeadStepId": {
                    "format": "uuid",
                    "description": "ID of the step at the head of the edge",
                    "type": "string",
                    "example": "00000000-0000-0000-0000-000000000000"
                },
                "TailStepId": {
                    "format": "uuid",
                    "description": "ID of the step as the tail of the edge",
                    "type": "string",
                    "example": "00000000-0000-0000-0000-000000000000"
                },
                "EdgeType": {
                    "description": "The edge type",
                    "enum": [
                        "Forward",
                        "True",
                        "False"
                    ],
                    "type": "string"
                }
            }
        },
        "FieldAndParameterLookupModel": {
            "description": "Model for triggering a field / parameter lookup",
            "type": "object",
            "properties": {
                "TriggerId": {
                    "format": "int32",
                    "description": "Lookup trigger ID",
                    "type": "integer"
                },
                "TriggerParameters": {
                    "description": "Parameters required to trigger the lookup",
                    "type": "object",
                    "additionalProperties": {
                        "type": "object"
                    }
                },
                "TriggerFieldMappings": {
                    "description": "Field mappings required to trigger the lookup",
                    "type": "object",
                    "additionalProperties": {
                        "type": "object"
                    }
                }
            }
        },
        "MethodFieldModel": {
            "description": "Web response model for method request and response fields",
            "type": "object",
            "properties": {
                "RequestFields": {
                    "description": "Any request fields for the method",
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/FieldResponseModel"
                    },
                    "readOnly": true
                },
                "ResponseFields": {
                    "description": "Any response fields for the method",
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/FieldResponseModel"
                    },
                    "readOnly": true
                }
            }
        },
        "TemplateModel": {
            "description": "Model for a cycle template",
            "type": "object",
            "properties": {
                "Name": {
                    "description": "Name of the template",
                    "type": "string",
                    "readOnly": true
                },
                "Description": {
                    "description": "Description of the template",
                    "type": "string",
                    "readOnly": true
                },
                "Id": {
                    "format": "uuid",
                    "description": "ID of the template",
                    "type": "string",
                    "readOnly": true,
                    "example": "00000000-0000-0000-0000-000000000000"
                },
                "Connectors": {
                    "description": "List of connectors used in the template",
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/TemplateConnectorModel"
                    },
                    "readOnly": true
                },
                "Tags": {
                    "description": "List of tags applied to the template",
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "readOnly": true
                },
                "Prerequisites": {
                    "description": "List of template step setup prerequisites",
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/StepPrerequisite"
                    },
                    "readOnly": true
                }
            }
        },
        "TemplateConnectorModel": {
            "description": "Model for a connector used in a template",
            "type": "object",
            "properties": {
                "Id": {
                    "format": "int32",
                    "description": "ID of the connector",
                    "type": "integer",
                    "readOnly": true
                },
                "Name": {
                    "description": "Name of the connector",
                    "type": "string",
                    "readOnly": true
                },
                "Version": {
                    "description": "Connector API version",
                    "type": "string",
                    "readOnly": true
                },
                "StepCount": {
                    "format": "int32",
                    "description": "Count of the steps in the cycle using connector",
                    "type": "integer",
                    "readOnly": true
                },
                "Icon": {
                    "description": "The connectors icon",
                    "type": "string",
                    "readOnly": true
                }
            }
        },
        "TemplateInstallModel": {
            "description": "Model for installing a template",
            "type": "object",
            "properties": {
                "Name": {
                    "description": "Name of the cycle to create from the template",
                    "type": "string"
                },
                "Description": {
                    "description": "Description for the new cycle",
                    "type": "string"
                },
                "Prerequisites": {
                    "description": "List of template setup prerequisites",
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/StepRequestModel"
                    }
                },
                "AccountConnectorIds": {
                    "description": "IDs of account connectors to use in the installed cycle\r\n(Deprecated) Use {ConnectorEngine.Api.Models.TemplateInstallModel.AccountConnectorMap} instead",
                    "type": "array",
                    "items": {
                        "format": "int32",
                        "type": "integer"
                    }
                },
                "AccountConnectorMap": {
                    "description": "Mapping of source template account connector and destination account connector IDs to use in the installed cycle",
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/TemplateInstallAccountConnectorMap"
                    }
                }
            }
        },
        "TemplateInstallAccountConnectorMap": {
            "type": "object",
            "properties": {
                "SourceAccountConnectorId": {
                    "format": "int32",
                    "description": "Template account connector id",
                    "type": "integer"
                },
                "DestinationAccountConnectorId": {
                    "format": "int32",
                    "description": "Account connector id to use for the source template account connector",
                    "type": "integer"
                }
            }
        },
        "AccountTransactionModel": {
            "description": "Model for a transaction",
            "type": "object",
            "properties": {
                "CycleId": {
                    "format": "uuid",
                    "description": "ID of the cycle the transaction is for",
                    "type": "string",
                    "example": "00000000-0000-0000-0000-000000000000"
                },
                "CycleName": {
                    "description": "Name of the cycle the transaction is for",
                    "type": "string"
                },
                "Id": {
                    "format": "uuid",
                    "description": "ID of the transaction",
                    "type": "string",
                    "readOnly": true,
                    "example": "00000000-0000-0000-0000-000000000000"
                },
                "StartedTimestamp": {
                    "format": "date-time",
                    "description": "Timestamp of when the transaction was first run",
                    "type": "string",
                    "readOnly": true
                },
                "LastRunTimestamp": {
                    "format": "date-time",
                    "description": "Timestamp of the last time the transaction ran",
                    "type": "string",
                    "readOnly": true
                },
                "TimeRunning": {
                    "format": "int64",
                    "description": "Milliseconds that the transaction has spent running",
                    "type": "integer"
                },
                "HasErrors": {
                    "description": "Indicates if the transaction has any errors",
                    "type": "boolean"
                },
                "Status": {
                    "description": "The current status of the transaction",
                    "enum": [
                        "Stopped",
                        "Running"
                    ],
                    "type": "string"
                }
            }
        },
        "TransactionModel": {
            "description": "Model for a Transaction",
            "type": "object",
            "properties": {
                "Id": {
                    "format": "uuid",
                    "description": "ID of the transaction",
                    "type": "string",
                    "readOnly": true,
                    "example": "00000000-0000-0000-0000-000000000000"
                },
                "StartedTimestamp": {
                    "format": "date-time",
                    "description": "Timestamp of when the transaction was first run",
                    "type": "string",
                    "readOnly": true
                },
                "LastRunTimestamp": {
                    "format": "date-time",
                    "description": "Timestamp of the last time the transaction ran",
                    "type": "string",
                    "readOnly": true
                },
                "TimeRunning": {
                    "format": "int64",
                    "description": "Milliseconds that the transaction has spent running",
                    "type": "integer"
                },
                "HasErrors": {
                    "description": "Indicates if the transaction has any errors",
                    "type": "boolean"
                },
                "Status": {
                    "description": "The current status of the transaction",
                    "enum": [
                        "Stopped",
                        "Running"
                    ],
                    "type": "string"
                }
            }
        },
        "TransactionItemModel": {
            "description": "Model for an item in a transaction",
            "type": "object",
            "properties": {
                "StepId": {
                    "format": "uuid",
                    "description": "ID of the step the transaction item is for",
                    "type": "string",
                    "readOnly": true,
                    "example": "00000000-0000-0000-0000-000000000000"
                },
                "StepName": {
                    "description": "Name of the step the transaction item is for",
                    "type": "string",
                    "readOnly": true
                },
                "StepType": {
                    "description": "The type of step this item is for",
                    "enum": [
                        "None",
                        "Action",
                        "Webhook",
                        "Decision",
                        "Delay",
                        "WaitUntil",
                        "WaitAll",
                        "WebhookResponse",
                        "Annotation"
                    ],
                    "type": "string",
                    "readOnly": true
                },
                "Timestamp": {
                    "format": "date-time",
                    "description": "Timestamp for the transaction item",
                    "type": "string",
                    "readOnly": true
                },
                "Request": {
                    "description": "Request sent, if transaction item is step data",
                    "type": "string",
                    "readOnly": true
                },
                "Response": {
                    "description": "Response recieved, if transaction item is step data",
                    "type": "string",
                    "readOnly": true
                },
                "IncidentLevel": {
                    "description": "Incident level, if transaction item is incident",
                    "enum": [
                        "Error",
                        "Warning"
                    ],
                    "type": "string",
                    "readOnly": true
                },
                "ShortMessage": {
                    "description": "Short message for incident, if transaction item is incident",
                    "type": "string",
                    "readOnly": true
                },
                "FullMessage": {
                    "description": "Full message for incident, if transaction item is incident",
                    "type": "string",
                    "readOnly": true
                }
            }
        },
        "UserModel": {
            "description": "Model for creating/updating users",
            "required": [
                "UserName"
            ],
            "type": "object",
            "properties": {
                "Password": {
                    "description": "Password (optional for existing users)",
                    "type": "string"
                },
                "UserName": {
                    "description": "Username",
                    "type": "string"
                }
            }
        },
        "DeleteUserModel": {
            "description": "Model for deleting users",
            "required": [
                "UserName"
            ],
            "type": "object",
            "properties": {
                "UserName": {
                    "description": "Username",
                    "type": "string"
                }
            }
        },
        "UserLaunchModel": {
            "description": "Model to create a user LAUNCH",
            "required": [
                "Username",
                "Password"
            ],
            "type": "object",
            "properties": {
                "RunOnce": {
                    "description": "True if the cycle to be launched should only be run once",
                    "type": "boolean"
                },
                "Tags": {
                    "description": "List of tags that a cycle must have at least one of to appear in LAUNCH",
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "AutoInstall": {
                    "description": "Set to false if you don't want Cyclr to automatically install the template when there's only one available",
                    "type": "boolean"
                },
                "SingleInstall": {
                    "description": "Set to true for templates to only appear in LAUNCH if they haven't been installed in the account",
                    "type": "boolean"
                },
                "Start": {
                    "description": "False if the launched cycle should not be started, True or not provided will start the launched cycle",
                    "type": "boolean"
                },
                "InlineOAuth": {
                    "description": "Set to false for OAuth connector authentication to appear with signin button and popup",
                    "type": "boolean"
                },
                "CompleteParameter": {
                    "description": "Additional parameter to pass to launch complete result.",
                    "type": "string"
                },
                "Wizard": {
                    "description": "Set to true to display Launch mappings in a step by step wizard.",
                    "type": "boolean"
                },
                "DisplayDescriptions": {
                    "description": "Set to true to display template description in launch.",
                    "type": "boolean"
                },
                "Username": {
                    "description": "Username",
                    "type": "string"
                },
                "Password": {
                    "description": "Password for the user",
                    "type": "string"
                },
                "AccountId": {
                    "description": "The ID of the account to sign into",
                    "type": "string"
                },
                "PartnerConnector": {
                    "$ref": "#/definitions/UserLaunchPartnerConnector",
                    "description": "The connector to install in the account. Only installed if new account"
                },
                "AccountName": {
                    "description": "The name of the account. Only set if creating a new account",
                    "type": "string"
                },
                "AccountDescription": {
                    "description": "A description of the account. Only set if creating a new account",
                    "type": "string"
                }
            }
        },
        "UserMarketplaceModel": {
            "description": "Model to create a user Marketplace",
            "required": [
                "MarketplaceId",
                "Username",
                "Password"
            ],
            "type": "object",
            "properties": {
                "MarketplaceId": {
                    "format": "int32",
                    "description": "ID of the Marketplace to launch",
                    "type": "integer"
                },
                "InlineOAuth": {
                    "description": "Set to false for OAuth connector authentication to appear with signin button and popup",
                    "type": "boolean"
                },
                "Username": {
                    "description": "Username",
                    "type": "string"
                },
                "Password": {
                    "description": "Password for the user",
                    "type": "string"
                },
                "AccountId": {
                    "description": "The ID of the account to sign into",
                    "type": "string"
                },
                "PartnerConnector": {
                    "$ref": "#/definitions/UserLaunchPartnerConnector",
                    "description": "The connector to install in the account. Only installed if new account"
                },
                "AccountName": {
                    "description": "The name of the account. Only set if creating a new account",
                    "type": "string"
                },
                "AccountDescription": {
                    "description": "A description of the account. Only set if creating a new account",
                    "type": "string"
                }
            }
        },
        "UserOrbitModel": {
            "description": "Model to create a user ORBIT",
            "required": [
                "Username",
                "Password",
                "AccountId"
            ],
            "type": "object",
            "properties": {
                "Username": {
                    "description": "Username",
                    "type": "string"
                },
                "Password": {
                    "description": "Password for the user",
                    "type": "string"
                },
                "AccountId": {
                    "description": "The ID of the account to sign into",
                    "type": "string"
                }
            }
        }
    },
    "securityDefinitions": {
        "clientcredentials": {
            "type": "oauth2",
            "description": "Use the client ID and client secret from the Cyclr console",
            "flow": "application",
            "tokenUrl": "https://api.cyclr.com/oauth/token",
            "scopes": {}
        },
        "oauth2": {
            "type": "oauth2",
            "description": "Password Grant is no longer the recommended way to Authenticate with the Cyclr API. You should migrate to Client Credentials. Use the Password Grant client ID from the console. Leave client secret blank. User must be a partner administrator.",
            "flow": "password",
            "tokenUrl": "https://api.cyclr.com/oauth/token",
            "scopes": {}
        }
    }
}